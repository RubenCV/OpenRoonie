Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> prog ID SEMICOLON vars eramain funcs main bloque
Rule 2     prog -> PROGRAM
Rule 3     eramain -> empty
Rule 4     main -> MAIN
Rule 5     condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
Rule 6     estatutobloque -> estatuto
Rule 7     estatutobloque -> bloque
Rule 8     gotoF -> empty
Rule 9     bloque -> LBRACKET masestatuto RBRACKET
Rule 10    masbloque -> ELSE goto estatutobloque
Rule 11    masbloque -> empty
Rule 12    goto -> empty
Rule 13    ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto
Rule 14    while -> WHILE
Rule 15    escritura -> print LPAREN listaprint RPAREN SEMICOLON
Rule 16    print -> PRINT
Rule 17    listaprint -> expresion masprint
Rule 18    masprint -> addQPP listaprint
Rule 19    masprint -> empty
Rule 20    addQPP -> COMMA
Rule 21    asignacion -> ID EQUALS expresion SEMICOLON
Rule 22    asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
Rule 23    factor -> leftparen expresion rightparen
Rule 24    factor -> varcte
Rule 25    factor -> varid
Rule 26    factor -> llamafunc
Rule 27    factor -> random
Rule 28    leftparen -> LPAREN
Rule 29    rightparen -> RPAREN
Rule 30    varid -> ID
Rule 31    varid -> idarray LSQBRACKET dimsvar RSQBRACKET
Rule 32    idarray -> ID
Rule 33    dimsvar -> expdimvar masdimsvar
Rule 34    expdimvar -> expresion
Rule 35    masdimsvar -> COMMA dimsvar
Rule 36    masdimsvar -> empty
Rule 37    exp -> termino masexp
Rule 38    masexp -> addQPPM exp
Rule 39    masexp -> empty
Rule 40    addQPPM -> PLUS
Rule 41    addQPPM -> MINUS
Rule 42    comaexpresion -> COMMA expresion comaexpresion
Rule 43    comaexpresion -> empty
Rule 44    expresion -> expcomp masexpresion
Rule 45    addQPAO -> AND
Rule 46    addQPAO -> OR
Rule 47    masexpresion -> addQPAO expresion
Rule 48    masexpresion -> empty
Rule 49    termino -> factor masterminos
Rule 50    addQTD -> TIMES
Rule 51    addQTD -> DIVIDE
Rule 52    masterminos -> addQTD termino
Rule 53    masterminos -> empty
Rule 54    expcomp -> exp expcompcontinuo
Rule 55    addQPComp -> MORETHAN
Rule 56    addQPComp -> LESSTHAN
Rule 57    addQPComp -> NOTEQUAL
Rule 58    addQPComp -> ISEQUALTO
Rule 59    addQPComp -> MORETHANEQUAL
Rule 60    addQPComp -> LESSTHANEQUAL
Rule 61    expcompcontinuo -> addQPComp expcomp
Rule 62    expcompcontinuo -> empty
Rule 63    estatuto -> asignacion
Rule 64    estatuto -> condicion
Rule 65    estatuto -> ciclo
Rule 66    estatuto -> escritura
Rule 67    estatuto -> lectura
Rule 68    estatuto -> vars
Rule 69    estatuto -> llamafunc SEMICOLON
Rule 70    estatuto -> COMMENT
Rule 71    estatuto -> CPPCOMMENT
Rule 72    random -> RANDOM LPAREN expresion COMMA expresion RPAREN
Rule 73    lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 74    llamafunc -> idfunc LPAREN funcargs RPAREN
Rule 75    idfunc -> ID
Rule 76    funcargs -> expresion listafuncargs checarparams
Rule 77    funcargs -> empty
Rule 78    listafuncargs -> COMMA expresion listafuncargs
Rule 79    listafuncargs -> empty
Rule 80    checarparams -> empty
Rule 81    masestatuto -> estatuto masestatuto
Rule 82    masestatuto -> empty
Rule 83    vars -> VAR tipo listaid SEMICOLON vars
Rule 84    vars -> empty
Rule 85    listaid -> initvar masid
Rule 86    initvar -> ID EQUALS expresion
Rule 87    initvar -> ID LSQBRACKET dims RSQBRACKET
Rule 88    initvar -> ID
Rule 89    dims -> CTEINT masdims
Rule 90    masdims -> COMMA dims
Rule 91    masdims -> empty
Rule 92    masid -> COMMA listaid
Rule 93    masid -> empty
Rule 94    funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
Rule 95    funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
Rule 96    funcs -> empty
Rule 97    bloquefunc -> LBRACKET masestatuto retorno RBRACKET
Rule 98    retorno -> RETURN expresion SEMICOLON
Rule 99    retorno -> RETURN SEMICOLON
Rule 100   funcaux -> tipo ID
Rule 101   args -> tipo ID
Rule 102   args -> empty
Rule 103   masargs -> COMMA args masargs
Rule 104   masargs -> empty
Rule 105   tipo -> INT
Rule 106   tipo -> FLOAT
Rule 107   tipo -> CHAR
Rule 108   tipo -> BOOL
Rule 109   tipo -> STRING
Rule 110   tipo -> VOID
Rule 111   varcte -> cteint
Rule 112   varcte -> ctefloat
Rule 113   varcte -> ctechar
Rule 114   varcte -> ctestring
Rule 115   varcte -> ctebool
Rule 116   cteint -> CTEINT
Rule 117   ctefloat -> CTEFLOAT
Rule 118   ctechar -> CTECHAR
Rule 119   ctestring -> CTESTRING
Rule 120   ctebool -> TRUE
Rule 121   ctebool -> FALSE
Rule 122   empty -> <empty>

Terminals, with rules where they appear

AND                  : 45
BOOL                 : 108
CHAR                 : 107
COMMA                : 20 35 42 72 78 90 92 103
COMMENT              : 70
CPPCOMMENT           : 71
CTECHAR              : 118
CTEFLOAT             : 117
CTEINT               : 89 116
CTESTRING            : 119
DIVIDE               : 51
ELSE                 : 10
EQUALS               : 21 22 86
FALSE                : 121
FLOAT                : 106
FUNCTION             : 94 95
ID                   : 1 21 30 32 73 75 86 87 88 100 101
IF                   : 5
INT                  : 105
ISEQUALTO            : 58
LBRACKET             : 9 97
LESSTHAN             : 56
LESSTHANEQUAL        : 60
LPAREN               : 5 13 15 28 72 73 74 94 95
LSQBRACKET           : 22 31 87
MAIN                 : 4
MINUS                : 41
MORETHAN             : 55
MORETHANEQUAL        : 59
NOTEQUAL             : 57
OR                   : 46
PLUS                 : 40
PRINT                : 16
PROGRAM              : 2
RANDOM               : 72
RBRACKET             : 9 97
READ                 : 73
RETURN               : 98 99
RPAREN               : 5 13 15 29 72 73 74 94 95
RSQBRACKET           : 22 31 87
SEMICOLON            : 1 15 21 22 69 73 83 98 99
STRING               : 109
TIMES                : 50
TRUE                 : 120
VAR                  : 83
VOID                 : 110
WHILE                : 14
error                : 

Nonterminals, with rules where they appear

addQPAO              : 47
addQPComp            : 61
addQPP               : 18
addQPPM              : 38
addQTD               : 52
args                 : 94 103
asignacion           : 63
bloque               : 1 7
bloquefunc           : 94 95
checarparams         : 76
ciclo                : 65
comaexpresion        : 42
condicion            : 64
ctebool              : 115
ctechar              : 113
ctefloat             : 112
cteint               : 111
ctestring            : 114
dims                 : 87 90
dimsvar              : 22 31 35
empty                : 3 8 11 12 19 36 39 43 48 53 62 77 79 80 82 84 91 93 96 102 104
eramain              : 1
escritura            : 66
estatuto             : 6 81
estatutobloque       : 5 10 13
exp                  : 38 54
expcomp              : 44 61
expcompcontinuo      : 54
expdimvar            : 33
expresion            : 5 13 17 21 22 23 34 42 47 72 72 76 78 86 98
factor               : 49
funcargs             : 74
funcaux              : 94 95
funcs                : 1 94 95
goto                 : 10 13
gotoF                : 5 13
idarray              : 22 31
idfunc               : 74
initvar              : 85
lectura              : 67
leftparen            : 23
listafuncargs        : 76 78
listaid              : 83 92
listaprint           : 15 18
llamafunc            : 26 69
main                 : 1
masargs              : 94 103
masbloque            : 5
masdims              : 89
masdimsvar           : 33
masestatuto          : 9 81 97
masexp               : 37
masexpresion         : 44
masid                : 85
masprint             : 17
masterminos          : 49
print                : 15
prog                 : 1
programa             : 0
random               : 27
retorno              : 97
rightparen           : 23
termino              : 37 52
tipo                 : 83 100 101
varcte               : 24
varid                : 25
vars                 : 1 68 83
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . prog ID SEMICOLON vars eramain funcs main bloque
    (2) prog -> . PROGRAM

    PROGRAM         shift and go to state 3

    programa                       shift and go to state 1
    prog                           shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> prog . ID SEMICOLON vars eramain funcs main bloque

    ID              shift and go to state 4


state 3

    (2) prog -> PROGRAM .

    ID              reduce using rule 2 (prog -> PROGRAM .)


state 4

    (1) programa -> prog ID . SEMICOLON vars eramain funcs main bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> prog ID SEMICOLON . vars eramain funcs main bloque
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (122) empty -> .

    VAR             shift and go to state 6
    FUNCTION        reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)

    vars                           shift and go to state 8
    empty                          shift and go to state 7

state 6

    (83) vars -> VAR . tipo listaid SEMICOLON vars
    (105) tipo -> . INT
    (106) tipo -> . FLOAT
    (107) tipo -> . CHAR
    (108) tipo -> . BOOL
    (109) tipo -> . STRING
    (110) tipo -> . VOID

    INT             shift and go to state 15
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 13
    BOOL            shift and go to state 12
    STRING          shift and go to state 9
    VOID            shift and go to state 11

    tipo                           shift and go to state 14

state 7

    (84) vars -> empty .

    FUNCTION        reduce using rule 84 (vars -> empty .)
    MAIN            reduce using rule 84 (vars -> empty .)
    ELSE            reduce using rule 84 (vars -> empty .)
    COMMENT         reduce using rule 84 (vars -> empty .)
    CPPCOMMENT      reduce using rule 84 (vars -> empty .)
    ID              reduce using rule 84 (vars -> empty .)
    IF              reduce using rule 84 (vars -> empty .)
    READ            reduce using rule 84 (vars -> empty .)
    VAR             reduce using rule 84 (vars -> empty .)
    WHILE           reduce using rule 84 (vars -> empty .)
    PRINT           reduce using rule 84 (vars -> empty .)
    RBRACKET        reduce using rule 84 (vars -> empty .)
    RETURN          reduce using rule 84 (vars -> empty .)


state 8

    (1) programa -> prog ID SEMICOLON vars . eramain funcs main bloque
    (3) eramain -> . empty
    (122) empty -> .

    FUNCTION        reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)

    eramain                        shift and go to state 16
    empty                          shift and go to state 17

state 9

    (109) tipo -> STRING .

    ID              reduce using rule 109 (tipo -> STRING .)


state 10

    (106) tipo -> FLOAT .

    ID              reduce using rule 106 (tipo -> FLOAT .)


state 11

    (110) tipo -> VOID .

    ID              reduce using rule 110 (tipo -> VOID .)


state 12

    (108) tipo -> BOOL .

    ID              reduce using rule 108 (tipo -> BOOL .)


state 13

    (107) tipo -> CHAR .

    ID              reduce using rule 107 (tipo -> CHAR .)


state 14

    (83) vars -> VAR tipo . listaid SEMICOLON vars
    (85) listaid -> . initvar masid
    (86) initvar -> . ID EQUALS expresion
    (87) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (88) initvar -> . ID

    ID              shift and go to state 20

    initvar                        shift and go to state 18
    listaid                        shift and go to state 19

state 15

    (105) tipo -> INT .

    ID              reduce using rule 105 (tipo -> INT .)


state 16

    (1) programa -> prog ID SEMICOLON vars eramain . funcs main bloque
    (94) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (95) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (96) funcs -> . empty
    (122) empty -> .

    FUNCTION        shift and go to state 21
    MAIN            reduce using rule 122 (empty -> .)

    funcs                          shift and go to state 23
    empty                          shift and go to state 22

state 17

    (3) eramain -> empty .

    FUNCTION        reduce using rule 3 (eramain -> empty .)
    MAIN            reduce using rule 3 (eramain -> empty .)


state 18

    (85) listaid -> initvar . masid
    (92) masid -> . COMMA listaid
    (93) masid -> . empty
    (122) empty -> .

    COMMA           shift and go to state 26
    SEMICOLON       reduce using rule 122 (empty -> .)

    empty                          shift and go to state 24
    masid                          shift and go to state 25

state 19

    (83) vars -> VAR tipo listaid . SEMICOLON vars

    SEMICOLON       shift and go to state 27


state 20

    (86) initvar -> ID . EQUALS expresion
    (87) initvar -> ID . LSQBRACKET dims RSQBRACKET
    (88) initvar -> ID .

    EQUALS          shift and go to state 29
    LSQBRACKET      shift and go to state 28
    COMMA           reduce using rule 88 (initvar -> ID .)
    SEMICOLON       reduce using rule 88 (initvar -> ID .)


state 21

    (94) funcs -> FUNCTION . funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (95) funcs -> FUNCTION . funcaux LPAREN RPAREN bloquefunc funcs
    (100) funcaux -> . tipo ID
    (105) tipo -> . INT
    (106) tipo -> . FLOAT
    (107) tipo -> . CHAR
    (108) tipo -> . BOOL
    (109) tipo -> . STRING
    (110) tipo -> . VOID

    INT             shift and go to state 15
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 13
    BOOL            shift and go to state 12
    STRING          shift and go to state 9
    VOID            shift and go to state 11

    funcaux                        shift and go to state 30
    tipo                           shift and go to state 31

state 22

    (96) funcs -> empty .

    MAIN            reduce using rule 96 (funcs -> empty .)


state 23

    (1) programa -> prog ID SEMICOLON vars eramain funcs . main bloque
    (4) main -> . MAIN

    MAIN            shift and go to state 33

    main                           shift and go to state 32

state 24

    (93) masid -> empty .

    SEMICOLON       reduce using rule 93 (masid -> empty .)


state 25

    (85) listaid -> initvar masid .

    SEMICOLON       reduce using rule 85 (listaid -> initvar masid .)


state 26

    (92) masid -> COMMA . listaid
    (85) listaid -> . initvar masid
    (86) initvar -> . ID EQUALS expresion
    (87) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (88) initvar -> . ID

    ID              shift and go to state 20

    listaid                        shift and go to state 34
    initvar                        shift and go to state 18

state 27

    (83) vars -> VAR tipo listaid SEMICOLON . vars
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (122) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 6
    FUNCTION        reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)
    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    ELSE            reduce using rule 122 (empty -> .)

  ! VAR             [ reduce using rule 122 (empty -> .) ]

    vars                           shift and go to state 35
    empty                          shift and go to state 7

state 28

    (87) initvar -> ID LSQBRACKET . dims RSQBRACKET
    (89) dims -> . CTEINT masdims

    CTEINT          shift and go to state 37

    dims                           shift and go to state 36

state 29

    (86) initvar -> ID EQUALS . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 52
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 30

    (94) funcs -> FUNCTION funcaux . LPAREN args masargs RPAREN bloquefunc funcs
    (95) funcs -> FUNCTION funcaux . LPAREN RPAREN bloquefunc funcs

    LPAREN          shift and go to state 64


state 31

    (100) funcaux -> tipo . ID

    ID              shift and go to state 65


state 32

    (1) programa -> prog ID SEMICOLON vars eramain funcs main . bloque
    (9) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 66

state 33

    (4) main -> MAIN .

    LBRACKET        reduce using rule 4 (main -> MAIN .)


state 34

    (92) masid -> COMMA listaid .

    SEMICOLON       reduce using rule 92 (masid -> COMMA listaid .)


state 35

    (83) vars -> VAR tipo listaid SEMICOLON vars .

    COMMENT         reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    CPPCOMMENT      reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    ID              reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    IF              reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    READ            reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    VAR             reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    WHILE           reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    PRINT           reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    RBRACKET        reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    RETURN          reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    FUNCTION        reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    MAIN            reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)
    ELSE            reduce using rule 83 (vars -> VAR tipo listaid SEMICOLON vars .)


state 36

    (87) initvar -> ID LSQBRACKET dims . RSQBRACKET

    RSQBRACKET      shift and go to state 68


state 37

    (89) dims -> CTEINT . masdims
    (90) masdims -> . COMMA dims
    (91) masdims -> . empty
    (122) empty -> .

    COMMA           shift and go to state 69
    RSQBRACKET      reduce using rule 122 (empty -> .)

    empty                          shift and go to state 70
    masdims                        shift and go to state 71

state 38

    (111) varcte -> cteint .

    TIMES           reduce using rule 111 (varcte -> cteint .)
    DIVIDE          reduce using rule 111 (varcte -> cteint .)
    PLUS            reduce using rule 111 (varcte -> cteint .)
    MINUS           reduce using rule 111 (varcte -> cteint .)
    MORETHAN        reduce using rule 111 (varcte -> cteint .)
    LESSTHAN        reduce using rule 111 (varcte -> cteint .)
    NOTEQUAL        reduce using rule 111 (varcte -> cteint .)
    ISEQUALTO       reduce using rule 111 (varcte -> cteint .)
    MORETHANEQUAL   reduce using rule 111 (varcte -> cteint .)
    LESSTHANEQUAL   reduce using rule 111 (varcte -> cteint .)
    AND             reduce using rule 111 (varcte -> cteint .)
    OR              reduce using rule 111 (varcte -> cteint .)
    COMMA           reduce using rule 111 (varcte -> cteint .)
    SEMICOLON       reduce using rule 111 (varcte -> cteint .)
    RPAREN          reduce using rule 111 (varcte -> cteint .)
    RSQBRACKET      reduce using rule 111 (varcte -> cteint .)


state 39

    (118) ctechar -> CTECHAR .

    TIMES           reduce using rule 118 (ctechar -> CTECHAR .)
    DIVIDE          reduce using rule 118 (ctechar -> CTECHAR .)
    PLUS            reduce using rule 118 (ctechar -> CTECHAR .)
    MINUS           reduce using rule 118 (ctechar -> CTECHAR .)
    MORETHAN        reduce using rule 118 (ctechar -> CTECHAR .)
    LESSTHAN        reduce using rule 118 (ctechar -> CTECHAR .)
    NOTEQUAL        reduce using rule 118 (ctechar -> CTECHAR .)
    ISEQUALTO       reduce using rule 118 (ctechar -> CTECHAR .)
    MORETHANEQUAL   reduce using rule 118 (ctechar -> CTECHAR .)
    LESSTHANEQUAL   reduce using rule 118 (ctechar -> CTECHAR .)
    AND             reduce using rule 118 (ctechar -> CTECHAR .)
    OR              reduce using rule 118 (ctechar -> CTECHAR .)
    COMMA           reduce using rule 118 (ctechar -> CTECHAR .)
    RPAREN          reduce using rule 118 (ctechar -> CTECHAR .)
    SEMICOLON       reduce using rule 118 (ctechar -> CTECHAR .)
    RSQBRACKET      reduce using rule 118 (ctechar -> CTECHAR .)


state 40

    (54) expcomp -> exp . expcompcontinuo
    (61) expcompcontinuo -> . addQPComp expcomp
    (62) expcompcontinuo -> . empty
    (55) addQPComp -> . MORETHAN
    (56) addQPComp -> . LESSTHAN
    (57) addQPComp -> . NOTEQUAL
    (58) addQPComp -> . ISEQUALTO
    (59) addQPComp -> . MORETHANEQUAL
    (60) addQPComp -> . LESSTHANEQUAL
    (122) empty -> .

    MORETHAN        shift and go to state 75
    LESSTHAN        shift and go to state 73
    NOTEQUAL        shift and go to state 78
    ISEQUALTO       shift and go to state 79
    MORETHANEQUAL   shift and go to state 76
    LESSTHANEQUAL   shift and go to state 72
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    RSQBRACKET      reduce using rule 122 (empty -> .)

    addQPComp                      shift and go to state 77
    empty                          shift and go to state 74
    expcompcontinuo                shift and go to state 80

state 41

    (72) random -> RANDOM . LPAREN expresion COMMA expresion RPAREN

    LPAREN          shift and go to state 81


state 42

    (44) expresion -> expcomp . masexpresion
    (47) masexpresion -> . addQPAO expresion
    (48) masexpresion -> . empty
    (45) addQPAO -> . AND
    (46) addQPAO -> . OR
    (122) empty -> .

    AND             shift and go to state 82
    OR              shift and go to state 84
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    RSQBRACKET      reduce using rule 122 (empty -> .)

    addQPAO                        shift and go to state 85
    masexpresion                   shift and go to state 86
    empty                          shift and go to state 83

state 43

    (27) factor -> random .

    TIMES           reduce using rule 27 (factor -> random .)
    DIVIDE          reduce using rule 27 (factor -> random .)
    PLUS            reduce using rule 27 (factor -> random .)
    MINUS           reduce using rule 27 (factor -> random .)
    MORETHAN        reduce using rule 27 (factor -> random .)
    LESSTHAN        reduce using rule 27 (factor -> random .)
    NOTEQUAL        reduce using rule 27 (factor -> random .)
    ISEQUALTO       reduce using rule 27 (factor -> random .)
    MORETHANEQUAL   reduce using rule 27 (factor -> random .)
    LESSTHANEQUAL   reduce using rule 27 (factor -> random .)
    AND             reduce using rule 27 (factor -> random .)
    OR              reduce using rule 27 (factor -> random .)
    COMMA           reduce using rule 27 (factor -> random .)
    SEMICOLON       reduce using rule 27 (factor -> random .)
    RPAREN          reduce using rule 27 (factor -> random .)
    RSQBRACKET      reduce using rule 27 (factor -> random .)


state 44

    (114) varcte -> ctestring .

    TIMES           reduce using rule 114 (varcte -> ctestring .)
    DIVIDE          reduce using rule 114 (varcte -> ctestring .)
    PLUS            reduce using rule 114 (varcte -> ctestring .)
    MINUS           reduce using rule 114 (varcte -> ctestring .)
    MORETHAN        reduce using rule 114 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 114 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 114 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 114 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 114 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 114 (varcte -> ctestring .)
    AND             reduce using rule 114 (varcte -> ctestring .)
    OR              reduce using rule 114 (varcte -> ctestring .)
    COMMA           reduce using rule 114 (varcte -> ctestring .)
    SEMICOLON       reduce using rule 114 (varcte -> ctestring .)
    RPAREN          reduce using rule 114 (varcte -> ctestring .)
    RSQBRACKET      reduce using rule 114 (varcte -> ctestring .)


state 45

    (117) ctefloat -> CTEFLOAT .

    TIMES           reduce using rule 117 (ctefloat -> CTEFLOAT .)
    DIVIDE          reduce using rule 117 (ctefloat -> CTEFLOAT .)
    PLUS            reduce using rule 117 (ctefloat -> CTEFLOAT .)
    MINUS           reduce using rule 117 (ctefloat -> CTEFLOAT .)
    MORETHAN        reduce using rule 117 (ctefloat -> CTEFLOAT .)
    LESSTHAN        reduce using rule 117 (ctefloat -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 117 (ctefloat -> CTEFLOAT .)
    ISEQUALTO       reduce using rule 117 (ctefloat -> CTEFLOAT .)
    MORETHANEQUAL   reduce using rule 117 (ctefloat -> CTEFLOAT .)
    LESSTHANEQUAL   reduce using rule 117 (ctefloat -> CTEFLOAT .)
    AND             reduce using rule 117 (ctefloat -> CTEFLOAT .)
    OR              reduce using rule 117 (ctefloat -> CTEFLOAT .)
    SEMICOLON       reduce using rule 117 (ctefloat -> CTEFLOAT .)
    RPAREN          reduce using rule 117 (ctefloat -> CTEFLOAT .)
    COMMA           reduce using rule 117 (ctefloat -> CTEFLOAT .)
    RSQBRACKET      reduce using rule 117 (ctefloat -> CTEFLOAT .)


state 46

    (30) varid -> ID .
    (32) idarray -> ID .
    (75) idfunc -> ID .

    TIMES           reduce using rule 30 (varid -> ID .)
    DIVIDE          reduce using rule 30 (varid -> ID .)
    PLUS            reduce using rule 30 (varid -> ID .)
    MINUS           reduce using rule 30 (varid -> ID .)
    MORETHAN        reduce using rule 30 (varid -> ID .)
    LESSTHAN        reduce using rule 30 (varid -> ID .)
    NOTEQUAL        reduce using rule 30 (varid -> ID .)
    ISEQUALTO       reduce using rule 30 (varid -> ID .)
    MORETHANEQUAL   reduce using rule 30 (varid -> ID .)
    LESSTHANEQUAL   reduce using rule 30 (varid -> ID .)
    AND             reduce using rule 30 (varid -> ID .)
    OR              reduce using rule 30 (varid -> ID .)
    COMMA           reduce using rule 30 (varid -> ID .)
    RPAREN          reduce using rule 30 (varid -> ID .)
    SEMICOLON       reduce using rule 30 (varid -> ID .)
    RSQBRACKET      reduce using rule 30 (varid -> ID .)
    LSQBRACKET      reduce using rule 32 (idarray -> ID .)
    LPAREN          reduce using rule 75 (idfunc -> ID .)


state 47

    (31) varid -> idarray . LSQBRACKET dimsvar RSQBRACKET

    LSQBRACKET      shift and go to state 87


state 48

    (28) leftparen -> LPAREN .

    LPAREN          reduce using rule 28 (leftparen -> LPAREN .)
    ID              reduce using rule 28 (leftparen -> LPAREN .)
    RANDOM          reduce using rule 28 (leftparen -> LPAREN .)
    CTEINT          reduce using rule 28 (leftparen -> LPAREN .)
    CTEFLOAT        reduce using rule 28 (leftparen -> LPAREN .)
    CTECHAR         reduce using rule 28 (leftparen -> LPAREN .)
    CTESTRING       reduce using rule 28 (leftparen -> LPAREN .)
    TRUE            reduce using rule 28 (leftparen -> LPAREN .)
    FALSE           reduce using rule 28 (leftparen -> LPAREN .)


state 49

    (112) varcte -> ctefloat .

    TIMES           reduce using rule 112 (varcte -> ctefloat .)
    DIVIDE          reduce using rule 112 (varcte -> ctefloat .)
    PLUS            reduce using rule 112 (varcte -> ctefloat .)
    MINUS           reduce using rule 112 (varcte -> ctefloat .)
    MORETHAN        reduce using rule 112 (varcte -> ctefloat .)
    LESSTHAN        reduce using rule 112 (varcte -> ctefloat .)
    NOTEQUAL        reduce using rule 112 (varcte -> ctefloat .)
    ISEQUALTO       reduce using rule 112 (varcte -> ctefloat .)
    MORETHANEQUAL   reduce using rule 112 (varcte -> ctefloat .)
    LESSTHANEQUAL   reduce using rule 112 (varcte -> ctefloat .)
    AND             reduce using rule 112 (varcte -> ctefloat .)
    OR              reduce using rule 112 (varcte -> ctefloat .)
    COMMA           reduce using rule 112 (varcte -> ctefloat .)
    SEMICOLON       reduce using rule 112 (varcte -> ctefloat .)
    RPAREN          reduce using rule 112 (varcte -> ctefloat .)
    RSQBRACKET      reduce using rule 112 (varcte -> ctefloat .)


state 50

    (74) llamafunc -> idfunc . LPAREN funcargs RPAREN

    LPAREN          shift and go to state 88


state 51

    (116) cteint -> CTEINT .

    TIMES           reduce using rule 116 (cteint -> CTEINT .)
    DIVIDE          reduce using rule 116 (cteint -> CTEINT .)
    PLUS            reduce using rule 116 (cteint -> CTEINT .)
    MINUS           reduce using rule 116 (cteint -> CTEINT .)
    MORETHAN        reduce using rule 116 (cteint -> CTEINT .)
    LESSTHAN        reduce using rule 116 (cteint -> CTEINT .)
    NOTEQUAL        reduce using rule 116 (cteint -> CTEINT .)
    ISEQUALTO       reduce using rule 116 (cteint -> CTEINT .)
    MORETHANEQUAL   reduce using rule 116 (cteint -> CTEINT .)
    LESSTHANEQUAL   reduce using rule 116 (cteint -> CTEINT .)
    AND             reduce using rule 116 (cteint -> CTEINT .)
    OR              reduce using rule 116 (cteint -> CTEINT .)
    SEMICOLON       reduce using rule 116 (cteint -> CTEINT .)
    COMMA           reduce using rule 116 (cteint -> CTEINT .)
    RPAREN          reduce using rule 116 (cteint -> CTEINT .)
    RSQBRACKET      reduce using rule 116 (cteint -> CTEINT .)


state 52

    (86) initvar -> ID EQUALS expresion .

    COMMA           reduce using rule 86 (initvar -> ID EQUALS expresion .)
    SEMICOLON       reduce using rule 86 (initvar -> ID EQUALS expresion .)


state 53

    (23) factor -> leftparen . expresion rightparen
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 89
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 54

    (115) varcte -> ctebool .

    TIMES           reduce using rule 115 (varcte -> ctebool .)
    DIVIDE          reduce using rule 115 (varcte -> ctebool .)
    PLUS            reduce using rule 115 (varcte -> ctebool .)
    MINUS           reduce using rule 115 (varcte -> ctebool .)
    MORETHAN        reduce using rule 115 (varcte -> ctebool .)
    LESSTHAN        reduce using rule 115 (varcte -> ctebool .)
    NOTEQUAL        reduce using rule 115 (varcte -> ctebool .)
    ISEQUALTO       reduce using rule 115 (varcte -> ctebool .)
    MORETHANEQUAL   reduce using rule 115 (varcte -> ctebool .)
    LESSTHANEQUAL   reduce using rule 115 (varcte -> ctebool .)
    AND             reduce using rule 115 (varcte -> ctebool .)
    OR              reduce using rule 115 (varcte -> ctebool .)
    COMMA           reduce using rule 115 (varcte -> ctebool .)
    SEMICOLON       reduce using rule 115 (varcte -> ctebool .)
    RPAREN          reduce using rule 115 (varcte -> ctebool .)
    RSQBRACKET      reduce using rule 115 (varcte -> ctebool .)


state 55

    (25) factor -> varid .

    TIMES           reduce using rule 25 (factor -> varid .)
    DIVIDE          reduce using rule 25 (factor -> varid .)
    PLUS            reduce using rule 25 (factor -> varid .)
    MINUS           reduce using rule 25 (factor -> varid .)
    MORETHAN        reduce using rule 25 (factor -> varid .)
    LESSTHAN        reduce using rule 25 (factor -> varid .)
    NOTEQUAL        reduce using rule 25 (factor -> varid .)
    ISEQUALTO       reduce using rule 25 (factor -> varid .)
    MORETHANEQUAL   reduce using rule 25 (factor -> varid .)
    LESSTHANEQUAL   reduce using rule 25 (factor -> varid .)
    AND             reduce using rule 25 (factor -> varid .)
    OR              reduce using rule 25 (factor -> varid .)
    COMMA           reduce using rule 25 (factor -> varid .)
    SEMICOLON       reduce using rule 25 (factor -> varid .)
    RPAREN          reduce using rule 25 (factor -> varid .)
    RSQBRACKET      reduce using rule 25 (factor -> varid .)


state 56

    (119) ctestring -> CTESTRING .

    TIMES           reduce using rule 119 (ctestring -> CTESTRING .)
    DIVIDE          reduce using rule 119 (ctestring -> CTESTRING .)
    PLUS            reduce using rule 119 (ctestring -> CTESTRING .)
    MINUS           reduce using rule 119 (ctestring -> CTESTRING .)
    MORETHAN        reduce using rule 119 (ctestring -> CTESTRING .)
    LESSTHAN        reduce using rule 119 (ctestring -> CTESTRING .)
    NOTEQUAL        reduce using rule 119 (ctestring -> CTESTRING .)
    ISEQUALTO       reduce using rule 119 (ctestring -> CTESTRING .)
    MORETHANEQUAL   reduce using rule 119 (ctestring -> CTESTRING .)
    LESSTHANEQUAL   reduce using rule 119 (ctestring -> CTESTRING .)
    AND             reduce using rule 119 (ctestring -> CTESTRING .)
    OR              reduce using rule 119 (ctestring -> CTESTRING .)
    COMMA           reduce using rule 119 (ctestring -> CTESTRING .)
    RPAREN          reduce using rule 119 (ctestring -> CTESTRING .)
    SEMICOLON       reduce using rule 119 (ctestring -> CTESTRING .)
    RSQBRACKET      reduce using rule 119 (ctestring -> CTESTRING .)


state 57

    (113) varcte -> ctechar .

    TIMES           reduce using rule 113 (varcte -> ctechar .)
    DIVIDE          reduce using rule 113 (varcte -> ctechar .)
    PLUS            reduce using rule 113 (varcte -> ctechar .)
    MINUS           reduce using rule 113 (varcte -> ctechar .)
    MORETHAN        reduce using rule 113 (varcte -> ctechar .)
    LESSTHAN        reduce using rule 113 (varcte -> ctechar .)
    NOTEQUAL        reduce using rule 113 (varcte -> ctechar .)
    ISEQUALTO       reduce using rule 113 (varcte -> ctechar .)
    MORETHANEQUAL   reduce using rule 113 (varcte -> ctechar .)
    LESSTHANEQUAL   reduce using rule 113 (varcte -> ctechar .)
    AND             reduce using rule 113 (varcte -> ctechar .)
    OR              reduce using rule 113 (varcte -> ctechar .)
    COMMA           reduce using rule 113 (varcte -> ctechar .)
    SEMICOLON       reduce using rule 113 (varcte -> ctechar .)
    RPAREN          reduce using rule 113 (varcte -> ctechar .)
    RSQBRACKET      reduce using rule 113 (varcte -> ctechar .)


state 58

    (24) factor -> varcte .

    TIMES           reduce using rule 24 (factor -> varcte .)
    DIVIDE          reduce using rule 24 (factor -> varcte .)
    PLUS            reduce using rule 24 (factor -> varcte .)
    MINUS           reduce using rule 24 (factor -> varcte .)
    MORETHAN        reduce using rule 24 (factor -> varcte .)
    LESSTHAN        reduce using rule 24 (factor -> varcte .)
    NOTEQUAL        reduce using rule 24 (factor -> varcte .)
    ISEQUALTO       reduce using rule 24 (factor -> varcte .)
    MORETHANEQUAL   reduce using rule 24 (factor -> varcte .)
    LESSTHANEQUAL   reduce using rule 24 (factor -> varcte .)
    AND             reduce using rule 24 (factor -> varcte .)
    OR              reduce using rule 24 (factor -> varcte .)
    COMMA           reduce using rule 24 (factor -> varcte .)
    SEMICOLON       reduce using rule 24 (factor -> varcte .)
    RPAREN          reduce using rule 24 (factor -> varcte .)
    RSQBRACKET      reduce using rule 24 (factor -> varcte .)


state 59

    (26) factor -> llamafunc .

    TIMES           reduce using rule 26 (factor -> llamafunc .)
    DIVIDE          reduce using rule 26 (factor -> llamafunc .)
    PLUS            reduce using rule 26 (factor -> llamafunc .)
    MINUS           reduce using rule 26 (factor -> llamafunc .)
    MORETHAN        reduce using rule 26 (factor -> llamafunc .)
    LESSTHAN        reduce using rule 26 (factor -> llamafunc .)
    NOTEQUAL        reduce using rule 26 (factor -> llamafunc .)
    ISEQUALTO       reduce using rule 26 (factor -> llamafunc .)
    MORETHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    LESSTHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    AND             reduce using rule 26 (factor -> llamafunc .)
    OR              reduce using rule 26 (factor -> llamafunc .)
    COMMA           reduce using rule 26 (factor -> llamafunc .)
    SEMICOLON       reduce using rule 26 (factor -> llamafunc .)
    RPAREN          reduce using rule 26 (factor -> llamafunc .)
    RSQBRACKET      reduce using rule 26 (factor -> llamafunc .)


state 60

    (121) ctebool -> FALSE .

    TIMES           reduce using rule 121 (ctebool -> FALSE .)
    DIVIDE          reduce using rule 121 (ctebool -> FALSE .)
    PLUS            reduce using rule 121 (ctebool -> FALSE .)
    MINUS           reduce using rule 121 (ctebool -> FALSE .)
    MORETHAN        reduce using rule 121 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 121 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 121 (ctebool -> FALSE .)
    ISEQUALTO       reduce using rule 121 (ctebool -> FALSE .)
    MORETHANEQUAL   reduce using rule 121 (ctebool -> FALSE .)
    LESSTHANEQUAL   reduce using rule 121 (ctebool -> FALSE .)
    AND             reduce using rule 121 (ctebool -> FALSE .)
    OR              reduce using rule 121 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 121 (ctebool -> FALSE .)
    COMMA           reduce using rule 121 (ctebool -> FALSE .)
    RPAREN          reduce using rule 121 (ctebool -> FALSE .)
    RSQBRACKET      reduce using rule 121 (ctebool -> FALSE .)


state 61

    (49) termino -> factor . masterminos
    (52) masterminos -> . addQTD termino
    (53) masterminos -> . empty
    (50) addQTD -> . TIMES
    (51) addQTD -> . DIVIDE
    (122) empty -> .

    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    MORETHAN        reduce using rule 122 (empty -> .)
    LESSTHAN        reduce using rule 122 (empty -> .)
    NOTEQUAL        reduce using rule 122 (empty -> .)
    ISEQUALTO       reduce using rule 122 (empty -> .)
    MORETHANEQUAL   reduce using rule 122 (empty -> .)
    LESSTHANEQUAL   reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    RSQBRACKET      reduce using rule 122 (empty -> .)

    masterminos                    shift and go to state 93
    empty                          shift and go to state 92
    addQTD                         shift and go to state 94

state 62

    (120) ctebool -> TRUE .

    TIMES           reduce using rule 120 (ctebool -> TRUE .)
    DIVIDE          reduce using rule 120 (ctebool -> TRUE .)
    PLUS            reduce using rule 120 (ctebool -> TRUE .)
    MINUS           reduce using rule 120 (ctebool -> TRUE .)
    MORETHAN        reduce using rule 120 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 120 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 120 (ctebool -> TRUE .)
    ISEQUALTO       reduce using rule 120 (ctebool -> TRUE .)
    MORETHANEQUAL   reduce using rule 120 (ctebool -> TRUE .)
    LESSTHANEQUAL   reduce using rule 120 (ctebool -> TRUE .)
    AND             reduce using rule 120 (ctebool -> TRUE .)
    OR              reduce using rule 120 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 120 (ctebool -> TRUE .)
    COMMA           reduce using rule 120 (ctebool -> TRUE .)
    RPAREN          reduce using rule 120 (ctebool -> TRUE .)
    RSQBRACKET      reduce using rule 120 (ctebool -> TRUE .)


state 63

    (37) exp -> termino . masexp
    (38) masexp -> . addQPPM exp
    (39) masexp -> . empty
    (40) addQPPM -> . PLUS
    (41) addQPPM -> . MINUS
    (122) empty -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 99
    MORETHAN        reduce using rule 122 (empty -> .)
    LESSTHAN        reduce using rule 122 (empty -> .)
    NOTEQUAL        reduce using rule 122 (empty -> .)
    ISEQUALTO       reduce using rule 122 (empty -> .)
    MORETHANEQUAL   reduce using rule 122 (empty -> .)
    LESSTHANEQUAL   reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    RSQBRACKET      reduce using rule 122 (empty -> .)

    empty                          shift and go to state 97
    masexp                         shift and go to state 96
    addQPPM                        shift and go to state 98

state 64

    (94) funcs -> FUNCTION funcaux LPAREN . args masargs RPAREN bloquefunc funcs
    (95) funcs -> FUNCTION funcaux LPAREN . RPAREN bloquefunc funcs
    (101) args -> . tipo ID
    (102) args -> . empty
    (105) tipo -> . INT
    (106) tipo -> . FLOAT
    (107) tipo -> . CHAR
    (108) tipo -> . BOOL
    (109) tipo -> . STRING
    (110) tipo -> . VOID
    (122) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 100
    INT             shift and go to state 15
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 13
    BOOL            shift and go to state 12
    STRING          shift and go to state 9
    VOID            shift and go to state 11
    COMMA           reduce using rule 122 (empty -> .)

  ! RPAREN          [ reduce using rule 122 (empty -> .) ]

    args                           shift and go to state 102
    empty                          shift and go to state 103
    tipo                           shift and go to state 101

state 65

    (100) funcaux -> tipo ID .

    LPAREN          reduce using rule 100 (funcaux -> tipo ID .)


state 66

    (1) programa -> prog ID SEMICOLON vars eramain funcs main bloque .

    $end            reduce using rule 1 (programa -> prog ID SEMICOLON vars eramain funcs main bloque .)


state 67

    (9) bloque -> LBRACKET . masestatuto RBRACKET
    (81) masestatuto -> . estatuto masestatuto
    (82) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (122) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    RBRACKET        reduce using rule 122 (empty -> .)
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 107
    empty                          shift and go to state 108
    idfunc                         shift and go to state 50
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122
    masestatuto                    shift and go to state 123

state 68

    (87) initvar -> ID LSQBRACKET dims RSQBRACKET .

    COMMA           reduce using rule 87 (initvar -> ID LSQBRACKET dims RSQBRACKET .)
    SEMICOLON       reduce using rule 87 (initvar -> ID LSQBRACKET dims RSQBRACKET .)


state 69

    (90) masdims -> COMMA . dims
    (89) dims -> . CTEINT masdims

    CTEINT          shift and go to state 37

    dims                           shift and go to state 124

state 70

    (91) masdims -> empty .

    RSQBRACKET      reduce using rule 91 (masdims -> empty .)


state 71

    (89) dims -> CTEINT masdims .

    RSQBRACKET      reduce using rule 89 (dims -> CTEINT masdims .)


state 72

    (60) addQPComp -> LESSTHANEQUAL .

    LPAREN          reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    ID              reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    RANDOM          reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTEINT          reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTEFLOAT        reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTECHAR         reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTESTRING       reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    TRUE            reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    FALSE           reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)


state 73

    (56) addQPComp -> LESSTHAN .

    LPAREN          reduce using rule 56 (addQPComp -> LESSTHAN .)
    ID              reduce using rule 56 (addQPComp -> LESSTHAN .)
    RANDOM          reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTEINT          reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTEFLOAT        reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTECHAR         reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTESTRING       reduce using rule 56 (addQPComp -> LESSTHAN .)
    TRUE            reduce using rule 56 (addQPComp -> LESSTHAN .)
    FALSE           reduce using rule 56 (addQPComp -> LESSTHAN .)


state 74

    (62) expcompcontinuo -> empty .

    AND             reduce using rule 62 (expcompcontinuo -> empty .)
    OR              reduce using rule 62 (expcompcontinuo -> empty .)
    COMMA           reduce using rule 62 (expcompcontinuo -> empty .)
    SEMICOLON       reduce using rule 62 (expcompcontinuo -> empty .)
    RPAREN          reduce using rule 62 (expcompcontinuo -> empty .)
    RSQBRACKET      reduce using rule 62 (expcompcontinuo -> empty .)


state 75

    (55) addQPComp -> MORETHAN .

    LPAREN          reduce using rule 55 (addQPComp -> MORETHAN .)
    ID              reduce using rule 55 (addQPComp -> MORETHAN .)
    RANDOM          reduce using rule 55 (addQPComp -> MORETHAN .)
    CTEINT          reduce using rule 55 (addQPComp -> MORETHAN .)
    CTEFLOAT        reduce using rule 55 (addQPComp -> MORETHAN .)
    CTECHAR         reduce using rule 55 (addQPComp -> MORETHAN .)
    CTESTRING       reduce using rule 55 (addQPComp -> MORETHAN .)
    TRUE            reduce using rule 55 (addQPComp -> MORETHAN .)
    FALSE           reduce using rule 55 (addQPComp -> MORETHAN .)


state 76

    (59) addQPComp -> MORETHANEQUAL .

    LPAREN          reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    ID              reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    RANDOM          reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTEINT          reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTEFLOAT        reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTECHAR         reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTESTRING       reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    TRUE            reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    FALSE           reduce using rule 59 (addQPComp -> MORETHANEQUAL .)


state 77

    (61) expcompcontinuo -> addQPComp . expcomp
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    expcomp                        shift and go to state 125
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctestring                      shift and go to state 44
    ctefloat                       shift and go to state 49
    varcte                         shift and go to state 58
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    idarray                        shift and go to state 47
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 78

    (57) addQPComp -> NOTEQUAL .

    LPAREN          reduce using rule 57 (addQPComp -> NOTEQUAL .)
    ID              reduce using rule 57 (addQPComp -> NOTEQUAL .)
    RANDOM          reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTEINT          reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTECHAR         reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTESTRING       reduce using rule 57 (addQPComp -> NOTEQUAL .)
    TRUE            reduce using rule 57 (addQPComp -> NOTEQUAL .)
    FALSE           reduce using rule 57 (addQPComp -> NOTEQUAL .)


state 79

    (58) addQPComp -> ISEQUALTO .

    LPAREN          reduce using rule 58 (addQPComp -> ISEQUALTO .)
    ID              reduce using rule 58 (addQPComp -> ISEQUALTO .)
    RANDOM          reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTEINT          reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTEFLOAT        reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTECHAR         reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTESTRING       reduce using rule 58 (addQPComp -> ISEQUALTO .)
    TRUE            reduce using rule 58 (addQPComp -> ISEQUALTO .)
    FALSE           reduce using rule 58 (addQPComp -> ISEQUALTO .)


state 80

    (54) expcomp -> exp expcompcontinuo .

    AND             reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    OR              reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    RPAREN          reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    COMMA           reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    SEMICOLON       reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    RSQBRACKET      reduce using rule 54 (expcomp -> exp expcompcontinuo .)


state 81

    (72) random -> RANDOM LPAREN . expresion COMMA expresion RPAREN
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 126
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 82

    (45) addQPAO -> AND .

    LPAREN          reduce using rule 45 (addQPAO -> AND .)
    ID              reduce using rule 45 (addQPAO -> AND .)
    RANDOM          reduce using rule 45 (addQPAO -> AND .)
    CTEINT          reduce using rule 45 (addQPAO -> AND .)
    CTEFLOAT        reduce using rule 45 (addQPAO -> AND .)
    CTECHAR         reduce using rule 45 (addQPAO -> AND .)
    CTESTRING       reduce using rule 45 (addQPAO -> AND .)
    TRUE            reduce using rule 45 (addQPAO -> AND .)
    FALSE           reduce using rule 45 (addQPAO -> AND .)


state 83

    (48) masexpresion -> empty .

    COMMA           reduce using rule 48 (masexpresion -> empty .)
    SEMICOLON       reduce using rule 48 (masexpresion -> empty .)
    RPAREN          reduce using rule 48 (masexpresion -> empty .)
    RSQBRACKET      reduce using rule 48 (masexpresion -> empty .)


state 84

    (46) addQPAO -> OR .

    LPAREN          reduce using rule 46 (addQPAO -> OR .)
    ID              reduce using rule 46 (addQPAO -> OR .)
    RANDOM          reduce using rule 46 (addQPAO -> OR .)
    CTEINT          reduce using rule 46 (addQPAO -> OR .)
    CTEFLOAT        reduce using rule 46 (addQPAO -> OR .)
    CTECHAR         reduce using rule 46 (addQPAO -> OR .)
    CTESTRING       reduce using rule 46 (addQPAO -> OR .)
    TRUE            reduce using rule 46 (addQPAO -> OR .)
    FALSE           reduce using rule 46 (addQPAO -> OR .)


state 85

    (47) masexpresion -> addQPAO . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 127
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 86

    (44) expresion -> expcomp masexpresion .

    COMMA           reduce using rule 44 (expresion -> expcomp masexpresion .)
    SEMICOLON       reduce using rule 44 (expresion -> expcomp masexpresion .)
    RPAREN          reduce using rule 44 (expresion -> expcomp masexpresion .)
    RSQBRACKET      reduce using rule 44 (expresion -> expcomp masexpresion .)


state 87

    (31) varid -> idarray LSQBRACKET . dimsvar RSQBRACKET
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 54
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    random                         shift and go to state 43
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 128
    expdimvar                      shift and go to state 129
    dimsvar                        shift and go to state 130
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 88

    (74) llamafunc -> idfunc LPAREN . funcargs RPAREN
    (76) funcargs -> . expresion listafuncargs checarparams
    (77) funcargs -> . empty
    (44) expresion -> . expcomp masexpresion
    (122) empty -> .
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    RPAREN          reduce using rule 122 (empty -> .)
    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    empty                          shift and go to state 131
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 132
    leftparen                      shift and go to state 53
    funcargs                       shift and go to state 133
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 89

    (23) factor -> leftparen expresion . rightparen
    (29) rightparen -> . RPAREN

    RPAREN          shift and go to state 134

    rightparen                     shift and go to state 135

state 90

    (50) addQTD -> TIMES .

    LPAREN          reduce using rule 50 (addQTD -> TIMES .)
    ID              reduce using rule 50 (addQTD -> TIMES .)
    RANDOM          reduce using rule 50 (addQTD -> TIMES .)
    CTEINT          reduce using rule 50 (addQTD -> TIMES .)
    CTEFLOAT        reduce using rule 50 (addQTD -> TIMES .)
    CTECHAR         reduce using rule 50 (addQTD -> TIMES .)
    CTESTRING       reduce using rule 50 (addQTD -> TIMES .)
    TRUE            reduce using rule 50 (addQTD -> TIMES .)
    FALSE           reduce using rule 50 (addQTD -> TIMES .)


state 91

    (51) addQTD -> DIVIDE .

    LPAREN          reduce using rule 51 (addQTD -> DIVIDE .)
    ID              reduce using rule 51 (addQTD -> DIVIDE .)
    RANDOM          reduce using rule 51 (addQTD -> DIVIDE .)
    CTEINT          reduce using rule 51 (addQTD -> DIVIDE .)
    CTEFLOAT        reduce using rule 51 (addQTD -> DIVIDE .)
    CTECHAR         reduce using rule 51 (addQTD -> DIVIDE .)
    CTESTRING       reduce using rule 51 (addQTD -> DIVIDE .)
    TRUE            reduce using rule 51 (addQTD -> DIVIDE .)
    FALSE           reduce using rule 51 (addQTD -> DIVIDE .)


state 92

    (53) masterminos -> empty .

    PLUS            reduce using rule 53 (masterminos -> empty .)
    MINUS           reduce using rule 53 (masterminos -> empty .)
    MORETHAN        reduce using rule 53 (masterminos -> empty .)
    LESSTHAN        reduce using rule 53 (masterminos -> empty .)
    NOTEQUAL        reduce using rule 53 (masterminos -> empty .)
    ISEQUALTO       reduce using rule 53 (masterminos -> empty .)
    MORETHANEQUAL   reduce using rule 53 (masterminos -> empty .)
    LESSTHANEQUAL   reduce using rule 53 (masterminos -> empty .)
    AND             reduce using rule 53 (masterminos -> empty .)
    OR              reduce using rule 53 (masterminos -> empty .)
    COMMA           reduce using rule 53 (masterminos -> empty .)
    SEMICOLON       reduce using rule 53 (masterminos -> empty .)
    RPAREN          reduce using rule 53 (masterminos -> empty .)
    RSQBRACKET      reduce using rule 53 (masterminos -> empty .)


state 93

    (49) termino -> factor masterminos .

    PLUS            reduce using rule 49 (termino -> factor masterminos .)
    MINUS           reduce using rule 49 (termino -> factor masterminos .)
    MORETHAN        reduce using rule 49 (termino -> factor masterminos .)
    LESSTHAN        reduce using rule 49 (termino -> factor masterminos .)
    NOTEQUAL        reduce using rule 49 (termino -> factor masterminos .)
    ISEQUALTO       reduce using rule 49 (termino -> factor masterminos .)
    MORETHANEQUAL   reduce using rule 49 (termino -> factor masterminos .)
    LESSTHANEQUAL   reduce using rule 49 (termino -> factor masterminos .)
    AND             reduce using rule 49 (termino -> factor masterminos .)
    OR              reduce using rule 49 (termino -> factor masterminos .)
    COMMA           reduce using rule 49 (termino -> factor masterminos .)
    RSQBRACKET      reduce using rule 49 (termino -> factor masterminos .)
    RPAREN          reduce using rule 49 (termino -> factor masterminos .)
    SEMICOLON       reduce using rule 49 (termino -> factor masterminos .)


state 94

    (52) masterminos -> addQTD . termino
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    ctechar                        shift and go to state 57
    random                         shift and go to state 43
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 54
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    termino                        shift and go to state 136
    ctestring                      shift and go to state 44

state 95

    (40) addQPPM -> PLUS .

    LPAREN          reduce using rule 40 (addQPPM -> PLUS .)
    ID              reduce using rule 40 (addQPPM -> PLUS .)
    RANDOM          reduce using rule 40 (addQPPM -> PLUS .)
    CTEINT          reduce using rule 40 (addQPPM -> PLUS .)
    CTEFLOAT        reduce using rule 40 (addQPPM -> PLUS .)
    CTECHAR         reduce using rule 40 (addQPPM -> PLUS .)
    CTESTRING       reduce using rule 40 (addQPPM -> PLUS .)
    TRUE            reduce using rule 40 (addQPPM -> PLUS .)
    FALSE           reduce using rule 40 (addQPPM -> PLUS .)


state 96

    (37) exp -> termino masexp .

    MORETHAN        reduce using rule 37 (exp -> termino masexp .)
    LESSTHAN        reduce using rule 37 (exp -> termino masexp .)
    NOTEQUAL        reduce using rule 37 (exp -> termino masexp .)
    ISEQUALTO       reduce using rule 37 (exp -> termino masexp .)
    MORETHANEQUAL   reduce using rule 37 (exp -> termino masexp .)
    LESSTHANEQUAL   reduce using rule 37 (exp -> termino masexp .)
    AND             reduce using rule 37 (exp -> termino masexp .)
    OR              reduce using rule 37 (exp -> termino masexp .)
    COMMA           reduce using rule 37 (exp -> termino masexp .)
    RPAREN          reduce using rule 37 (exp -> termino masexp .)
    RSQBRACKET      reduce using rule 37 (exp -> termino masexp .)
    SEMICOLON       reduce using rule 37 (exp -> termino masexp .)


state 97

    (39) masexp -> empty .

    MORETHAN        reduce using rule 39 (masexp -> empty .)
    LESSTHAN        reduce using rule 39 (masexp -> empty .)
    NOTEQUAL        reduce using rule 39 (masexp -> empty .)
    ISEQUALTO       reduce using rule 39 (masexp -> empty .)
    MORETHANEQUAL   reduce using rule 39 (masexp -> empty .)
    LESSTHANEQUAL   reduce using rule 39 (masexp -> empty .)
    AND             reduce using rule 39 (masexp -> empty .)
    OR              reduce using rule 39 (masexp -> empty .)
    COMMA           reduce using rule 39 (masexp -> empty .)
    SEMICOLON       reduce using rule 39 (masexp -> empty .)
    RPAREN          reduce using rule 39 (masexp -> empty .)
    RSQBRACKET      reduce using rule 39 (masexp -> empty .)


state 98

    (38) masexp -> addQPPM . exp
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 137
    idfunc                         shift and go to state 50
    ctefloat                       shift and go to state 49
    random                         shift and go to state 43
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 99

    (41) addQPPM -> MINUS .

    LPAREN          reduce using rule 41 (addQPPM -> MINUS .)
    ID              reduce using rule 41 (addQPPM -> MINUS .)
    RANDOM          reduce using rule 41 (addQPPM -> MINUS .)
    CTEINT          reduce using rule 41 (addQPPM -> MINUS .)
    CTEFLOAT        reduce using rule 41 (addQPPM -> MINUS .)
    CTECHAR         reduce using rule 41 (addQPPM -> MINUS .)
    CTESTRING       reduce using rule 41 (addQPPM -> MINUS .)
    TRUE            reduce using rule 41 (addQPPM -> MINUS .)
    FALSE           reduce using rule 41 (addQPPM -> MINUS .)


state 100

    (95) funcs -> FUNCTION funcaux LPAREN RPAREN . bloquefunc funcs
    (97) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 138

    bloquefunc                     shift and go to state 139

state 101

    (101) args -> tipo . ID

    ID              shift and go to state 140


state 102

    (94) funcs -> FUNCTION funcaux LPAREN args . masargs RPAREN bloquefunc funcs
    (103) masargs -> . COMMA args masargs
    (104) masargs -> . empty
    (122) empty -> .

    COMMA           shift and go to state 143
    RPAREN          reduce using rule 122 (empty -> .)

    masargs                        shift and go to state 141
    empty                          shift and go to state 142

state 103

    (102) args -> empty .

    COMMA           reduce using rule 102 (args -> empty .)
    RPAREN          reduce using rule 102 (args -> empty .)


state 104

    (14) while -> WHILE .

    LPAREN          reduce using rule 14 (while -> WHILE .)


state 105

    (73) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 106

    (16) print -> PRINT .

    LPAREN          reduce using rule 16 (print -> PRINT .)


state 107

    (81) masestatuto -> estatuto . masestatuto
    (81) masestatuto -> . estatuto masestatuto
    (82) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (122) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 107
    empty                          shift and go to state 108
    idfunc                         shift and go to state 50
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122
    masestatuto                    shift and go to state 145

state 108

    (82) masestatuto -> empty .
    (84) vars -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 82 (masestatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 82 (masestatuto -> empty .)
    RBRACKET        reduce using rule 82 (masestatuto -> empty .)
    RETURN          reduce using rule 82 (masestatuto -> empty .)
    COMMENT         reduce using rule 84 (vars -> empty .)
    CPPCOMMENT      reduce using rule 84 (vars -> empty .)
    ID              reduce using rule 84 (vars -> empty .)
    IF              reduce using rule 84 (vars -> empty .)
    READ            reduce using rule 84 (vars -> empty .)
    VAR             reduce using rule 84 (vars -> empty .)
    WHILE           reduce using rule 84 (vars -> empty .)
    PRINT           reduce using rule 84 (vars -> empty .)

  ! RBRACKET        [ reduce using rule 84 (vars -> empty .) ]
  ! RETURN          [ reduce using rule 84 (vars -> empty .) ]


state 109

    (5) condicion -> IF . LPAREN expresion RPAREN gotoF estatutobloque masbloque

    LPAREN          shift and go to state 146


state 110

    (21) asignacion -> ID . EQUALS expresion SEMICOLON
    (32) idarray -> ID .
    (75) idfunc -> ID .

    EQUALS          shift and go to state 147
    LSQBRACKET      reduce using rule 32 (idarray -> ID .)
    LPAREN          reduce using rule 75 (idfunc -> ID .)


state 111

    (68) estatuto -> vars .

    COMMENT         reduce using rule 68 (estatuto -> vars .)
    CPPCOMMENT      reduce using rule 68 (estatuto -> vars .)
    ID              reduce using rule 68 (estatuto -> vars .)
    IF              reduce using rule 68 (estatuto -> vars .)
    READ            reduce using rule 68 (estatuto -> vars .)
    VAR             reduce using rule 68 (estatuto -> vars .)
    WHILE           reduce using rule 68 (estatuto -> vars .)
    PRINT           reduce using rule 68 (estatuto -> vars .)
    RETURN          reduce using rule 68 (estatuto -> vars .)
    ELSE            reduce using rule 68 (estatuto -> vars .)
    RBRACKET        reduce using rule 68 (estatuto -> vars .)


state 112

    (65) estatuto -> ciclo .

    COMMENT         reduce using rule 65 (estatuto -> ciclo .)
    CPPCOMMENT      reduce using rule 65 (estatuto -> ciclo .)
    ID              reduce using rule 65 (estatuto -> ciclo .)
    IF              reduce using rule 65 (estatuto -> ciclo .)
    READ            reduce using rule 65 (estatuto -> ciclo .)
    VAR             reduce using rule 65 (estatuto -> ciclo .)
    WHILE           reduce using rule 65 (estatuto -> ciclo .)
    PRINT           reduce using rule 65 (estatuto -> ciclo .)
    RETURN          reduce using rule 65 (estatuto -> ciclo .)
    ELSE            reduce using rule 65 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 65 (estatuto -> ciclo .)


state 113

    (70) estatuto -> COMMENT .

    COMMENT         reduce using rule 70 (estatuto -> COMMENT .)
    CPPCOMMENT      reduce using rule 70 (estatuto -> COMMENT .)
    ID              reduce using rule 70 (estatuto -> COMMENT .)
    IF              reduce using rule 70 (estatuto -> COMMENT .)
    READ            reduce using rule 70 (estatuto -> COMMENT .)
    VAR             reduce using rule 70 (estatuto -> COMMENT .)
    WHILE           reduce using rule 70 (estatuto -> COMMENT .)
    PRINT           reduce using rule 70 (estatuto -> COMMENT .)
    RETURN          reduce using rule 70 (estatuto -> COMMENT .)
    ELSE            reduce using rule 70 (estatuto -> COMMENT .)
    RBRACKET        reduce using rule 70 (estatuto -> COMMENT .)


state 114

    (67) estatuto -> lectura .

    COMMENT         reduce using rule 67 (estatuto -> lectura .)
    CPPCOMMENT      reduce using rule 67 (estatuto -> lectura .)
    ID              reduce using rule 67 (estatuto -> lectura .)
    IF              reduce using rule 67 (estatuto -> lectura .)
    READ            reduce using rule 67 (estatuto -> lectura .)
    VAR             reduce using rule 67 (estatuto -> lectura .)
    WHILE           reduce using rule 67 (estatuto -> lectura .)
    PRINT           reduce using rule 67 (estatuto -> lectura .)
    RETURN          reduce using rule 67 (estatuto -> lectura .)
    ELSE            reduce using rule 67 (estatuto -> lectura .)
    RBRACKET        reduce using rule 67 (estatuto -> lectura .)


state 115

    (71) estatuto -> CPPCOMMENT .

    COMMENT         reduce using rule 71 (estatuto -> CPPCOMMENT .)
    CPPCOMMENT      reduce using rule 71 (estatuto -> CPPCOMMENT .)
    ID              reduce using rule 71 (estatuto -> CPPCOMMENT .)
    IF              reduce using rule 71 (estatuto -> CPPCOMMENT .)
    READ            reduce using rule 71 (estatuto -> CPPCOMMENT .)
    VAR             reduce using rule 71 (estatuto -> CPPCOMMENT .)
    WHILE           reduce using rule 71 (estatuto -> CPPCOMMENT .)
    PRINT           reduce using rule 71 (estatuto -> CPPCOMMENT .)
    RETURN          reduce using rule 71 (estatuto -> CPPCOMMENT .)
    ELSE            reduce using rule 71 (estatuto -> CPPCOMMENT .)
    RBRACKET        reduce using rule 71 (estatuto -> CPPCOMMENT .)


state 116

    (22) asignacion -> idarray . LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON

    LSQBRACKET      shift and go to state 148


state 117

    (69) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 149


state 118

    (64) estatuto -> condicion .

    COMMENT         reduce using rule 64 (estatuto -> condicion .)
    CPPCOMMENT      reduce using rule 64 (estatuto -> condicion .)
    ID              reduce using rule 64 (estatuto -> condicion .)
    IF              reduce using rule 64 (estatuto -> condicion .)
    READ            reduce using rule 64 (estatuto -> condicion .)
    VAR             reduce using rule 64 (estatuto -> condicion .)
    WHILE           reduce using rule 64 (estatuto -> condicion .)
    PRINT           reduce using rule 64 (estatuto -> condicion .)
    RETURN          reduce using rule 64 (estatuto -> condicion .)
    ELSE            reduce using rule 64 (estatuto -> condicion .)
    RBRACKET        reduce using rule 64 (estatuto -> condicion .)


state 119

    (13) ciclo -> while . LPAREN expresion RPAREN gotoF estatutobloque goto

    LPAREN          shift and go to state 150


state 120

    (63) estatuto -> asignacion .

    COMMENT         reduce using rule 63 (estatuto -> asignacion .)
    CPPCOMMENT      reduce using rule 63 (estatuto -> asignacion .)
    ID              reduce using rule 63 (estatuto -> asignacion .)
    IF              reduce using rule 63 (estatuto -> asignacion .)
    READ            reduce using rule 63 (estatuto -> asignacion .)
    VAR             reduce using rule 63 (estatuto -> asignacion .)
    WHILE           reduce using rule 63 (estatuto -> asignacion .)
    PRINT           reduce using rule 63 (estatuto -> asignacion .)
    RETURN          reduce using rule 63 (estatuto -> asignacion .)
    ELSE            reduce using rule 63 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 63 (estatuto -> asignacion .)


state 121

    (15) escritura -> print . LPAREN listaprint RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 122

    (66) estatuto -> escritura .

    COMMENT         reduce using rule 66 (estatuto -> escritura .)
    CPPCOMMENT      reduce using rule 66 (estatuto -> escritura .)
    ID              reduce using rule 66 (estatuto -> escritura .)
    IF              reduce using rule 66 (estatuto -> escritura .)
    READ            reduce using rule 66 (estatuto -> escritura .)
    VAR             reduce using rule 66 (estatuto -> escritura .)
    WHILE           reduce using rule 66 (estatuto -> escritura .)
    PRINT           reduce using rule 66 (estatuto -> escritura .)
    RETURN          reduce using rule 66 (estatuto -> escritura .)
    ELSE            reduce using rule 66 (estatuto -> escritura .)
    RBRACKET        reduce using rule 66 (estatuto -> escritura .)


state 123

    (9) bloque -> LBRACKET masestatuto . RBRACKET

    RBRACKET        shift and go to state 152


state 124

    (90) masdims -> COMMA dims .

    RSQBRACKET      reduce using rule 90 (masdims -> COMMA dims .)


state 125

    (61) expcompcontinuo -> addQPComp expcomp .

    AND             reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    OR              reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    COMMA           reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    SEMICOLON       reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    RPAREN          reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    RSQBRACKET      reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)


state 126

    (72) random -> RANDOM LPAREN expresion . COMMA expresion RPAREN

    COMMA           shift and go to state 153


state 127

    (47) masexpresion -> addQPAO expresion .

    COMMA           reduce using rule 47 (masexpresion -> addQPAO expresion .)
    SEMICOLON       reduce using rule 47 (masexpresion -> addQPAO expresion .)
    RPAREN          reduce using rule 47 (masexpresion -> addQPAO expresion .)
    RSQBRACKET      reduce using rule 47 (masexpresion -> addQPAO expresion .)


state 128

    (34) expdimvar -> expresion .

    COMMA           reduce using rule 34 (expdimvar -> expresion .)
    RSQBRACKET      reduce using rule 34 (expdimvar -> expresion .)


state 129

    (33) dimsvar -> expdimvar . masdimsvar
    (35) masdimsvar -> . COMMA dimsvar
    (36) masdimsvar -> . empty
    (122) empty -> .

    COMMA           shift and go to state 156
    RSQBRACKET      reduce using rule 122 (empty -> .)

    masdimsvar                     shift and go to state 154
    empty                          shift and go to state 155

state 130

    (31) varid -> idarray LSQBRACKET dimsvar . RSQBRACKET

    RSQBRACKET      shift and go to state 157


state 131

    (77) funcargs -> empty .

    RPAREN          reduce using rule 77 (funcargs -> empty .)


state 132

    (76) funcargs -> expresion . listafuncargs checarparams
    (78) listafuncargs -> . COMMA expresion listafuncargs
    (79) listafuncargs -> . empty
    (122) empty -> .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 122 (empty -> .)

    listafuncargs                  shift and go to state 158
    empty                          shift and go to state 159

state 133

    (74) llamafunc -> idfunc LPAREN funcargs . RPAREN

    RPAREN          shift and go to state 161


state 134

    (29) rightparen -> RPAREN .

    TIMES           reduce using rule 29 (rightparen -> RPAREN .)
    DIVIDE          reduce using rule 29 (rightparen -> RPAREN .)
    PLUS            reduce using rule 29 (rightparen -> RPAREN .)
    MINUS           reduce using rule 29 (rightparen -> RPAREN .)
    MORETHAN        reduce using rule 29 (rightparen -> RPAREN .)
    LESSTHAN        reduce using rule 29 (rightparen -> RPAREN .)
    NOTEQUAL        reduce using rule 29 (rightparen -> RPAREN .)
    ISEQUALTO       reduce using rule 29 (rightparen -> RPAREN .)
    MORETHANEQUAL   reduce using rule 29 (rightparen -> RPAREN .)
    LESSTHANEQUAL   reduce using rule 29 (rightparen -> RPAREN .)
    AND             reduce using rule 29 (rightparen -> RPAREN .)
    OR              reduce using rule 29 (rightparen -> RPAREN .)
    COMMA           reduce using rule 29 (rightparen -> RPAREN .)
    SEMICOLON       reduce using rule 29 (rightparen -> RPAREN .)
    RPAREN          reduce using rule 29 (rightparen -> RPAREN .)
    RSQBRACKET      reduce using rule 29 (rightparen -> RPAREN .)


state 135

    (23) factor -> leftparen expresion rightparen .

    TIMES           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    DIVIDE          reduce using rule 23 (factor -> leftparen expresion rightparen .)
    PLUS            reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MINUS           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    NOTEQUAL        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    ISEQUALTO       reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    AND             reduce using rule 23 (factor -> leftparen expresion rightparen .)
    OR              reduce using rule 23 (factor -> leftparen expresion rightparen .)
    COMMA           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    SEMICOLON       reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RPAREN          reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RSQBRACKET      reduce using rule 23 (factor -> leftparen expresion rightparen .)


state 136

    (52) masterminos -> addQTD termino .

    PLUS            reduce using rule 52 (masterminos -> addQTD termino .)
    MINUS           reduce using rule 52 (masterminos -> addQTD termino .)
    MORETHAN        reduce using rule 52 (masterminos -> addQTD termino .)
    LESSTHAN        reduce using rule 52 (masterminos -> addQTD termino .)
    NOTEQUAL        reduce using rule 52 (masterminos -> addQTD termino .)
    ISEQUALTO       reduce using rule 52 (masterminos -> addQTD termino .)
    MORETHANEQUAL   reduce using rule 52 (masterminos -> addQTD termino .)
    LESSTHANEQUAL   reduce using rule 52 (masterminos -> addQTD termino .)
    AND             reduce using rule 52 (masterminos -> addQTD termino .)
    OR              reduce using rule 52 (masterminos -> addQTD termino .)
    COMMA           reduce using rule 52 (masterminos -> addQTD termino .)
    SEMICOLON       reduce using rule 52 (masterminos -> addQTD termino .)
    RPAREN          reduce using rule 52 (masterminos -> addQTD termino .)
    RSQBRACKET      reduce using rule 52 (masterminos -> addQTD termino .)


state 137

    (38) masexp -> addQPPM exp .

    MORETHAN        reduce using rule 38 (masexp -> addQPPM exp .)
    LESSTHAN        reduce using rule 38 (masexp -> addQPPM exp .)
    NOTEQUAL        reduce using rule 38 (masexp -> addQPPM exp .)
    ISEQUALTO       reduce using rule 38 (masexp -> addQPPM exp .)
    MORETHANEQUAL   reduce using rule 38 (masexp -> addQPPM exp .)
    LESSTHANEQUAL   reduce using rule 38 (masexp -> addQPPM exp .)
    AND             reduce using rule 38 (masexp -> addQPPM exp .)
    OR              reduce using rule 38 (masexp -> addQPPM exp .)
    COMMA           reduce using rule 38 (masexp -> addQPPM exp .)
    SEMICOLON       reduce using rule 38 (masexp -> addQPPM exp .)
    RPAREN          reduce using rule 38 (masexp -> addQPPM exp .)
    RSQBRACKET      reduce using rule 38 (masexp -> addQPPM exp .)


state 138

    (97) bloquefunc -> LBRACKET . masestatuto retorno RBRACKET
    (81) masestatuto -> . estatuto masestatuto
    (82) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (122) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    RETURN          reduce using rule 122 (empty -> .)
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    idfunc                         shift and go to state 50
    estatuto                       shift and go to state 107
    empty                          shift and go to state 108
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122
    masestatuto                    shift and go to state 162

state 139

    (95) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc . funcs
    (94) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (95) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (96) funcs -> . empty
    (122) empty -> .

    FUNCTION        shift and go to state 21
    MAIN            reduce using rule 122 (empty -> .)

    empty                          shift and go to state 22
    funcs                          shift and go to state 163

state 140

    (101) args -> tipo ID .

    COMMA           reduce using rule 101 (args -> tipo ID .)
    RPAREN          reduce using rule 101 (args -> tipo ID .)


state 141

    (94) funcs -> FUNCTION funcaux LPAREN args masargs . RPAREN bloquefunc funcs

    RPAREN          shift and go to state 164


state 142

    (104) masargs -> empty .

    RPAREN          reduce using rule 104 (masargs -> empty .)


state 143

    (103) masargs -> COMMA . args masargs
    (101) args -> . tipo ID
    (102) args -> . empty
    (105) tipo -> . INT
    (106) tipo -> . FLOAT
    (107) tipo -> . CHAR
    (108) tipo -> . BOOL
    (109) tipo -> . STRING
    (110) tipo -> . VOID
    (122) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 13
    BOOL            shift and go to state 12
    STRING          shift and go to state 9
    VOID            shift and go to state 11
    COMMA           reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    args                           shift and go to state 165
    empty                          shift and go to state 103
    tipo                           shift and go to state 101

state 144

    (73) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 166


state 145

    (81) masestatuto -> estatuto masestatuto .

    RBRACKET        reduce using rule 81 (masestatuto -> estatuto masestatuto .)
    RETURN          reduce using rule 81 (masestatuto -> estatuto masestatuto .)


state 146

    (5) condicion -> IF LPAREN . expresion RPAREN gotoF estatutobloque masbloque
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    idfunc                         shift and go to state 50
    expresion                      shift and go to state 167
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 147

    (21) asignacion -> ID EQUALS . expresion SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 168
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 148

    (22) asignacion -> idarray LSQBRACKET . dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 54
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    random                         shift and go to state 43
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 128
    expdimvar                      shift and go to state 129
    dimsvar                        shift and go to state 169
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 149

    (69) estatuto -> llamafunc SEMICOLON .

    COMMENT         reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    CPPCOMMENT      reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    READ            reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    VAR             reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    RETURN          reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    ELSE            reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    RBRACKET        reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)


state 150

    (13) ciclo -> while LPAREN . expresion RPAREN gotoF estatutobloque goto
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    expcomp                        shift and go to state 42
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctechar                        shift and go to state 57
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 170
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 151

    (15) escritura -> print LPAREN . listaprint RPAREN SEMICOLON
    (17) listaprint -> . expresion masprint
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    listaprint                     shift and go to state 171
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 172
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 152

    (9) bloque -> LBRACKET masestatuto RBRACKET .

    ELSE            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    COMMENT         reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    CPPCOMMENT      reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    ID              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    IF              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    READ            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    VAR             reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    WHILE           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    PRINT           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RBRACKET        reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RETURN          reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    $end            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)


state 153

    (72) random -> RANDOM LPAREN expresion COMMA . expresion RPAREN
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 173
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 154

    (33) dimsvar -> expdimvar masdimsvar .

    RSQBRACKET      reduce using rule 33 (dimsvar -> expdimvar masdimsvar .)


state 155

    (36) masdimsvar -> empty .

    RSQBRACKET      reduce using rule 36 (masdimsvar -> empty .)


state 156

    (35) masdimsvar -> COMMA . dimsvar
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 54
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    random                         shift and go to state 43
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 128
    expdimvar                      shift and go to state 129
    dimsvar                        shift and go to state 174
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 157

    (31) varid -> idarray LSQBRACKET dimsvar RSQBRACKET .

    TIMES           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    DIVIDE          reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    PLUS            reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MINUS           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHAN        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHAN        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    NOTEQUAL        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    ISEQUALTO       reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHANEQUAL   reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHANEQUAL   reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    AND             reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    OR              reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    COMMA           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RPAREN          reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    SEMICOLON       reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RSQBRACKET      reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)


state 158

    (76) funcargs -> expresion listafuncargs . checarparams
    (80) checarparams -> . empty
    (122) empty -> .

    RPAREN          reduce using rule 122 (empty -> .)

    checarparams                   shift and go to state 175
    empty                          shift and go to state 176

state 159

    (79) listafuncargs -> empty .

    RPAREN          reduce using rule 79 (listafuncargs -> empty .)


state 160

    (78) listafuncargs -> COMMA . expresion listafuncargs
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 177
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 161

    (74) llamafunc -> idfunc LPAREN funcargs RPAREN .

    SEMICOLON       reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    TIMES           reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    DIVIDE          reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    PLUS            reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MINUS           reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHAN        reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHAN        reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    NOTEQUAL        reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    ISEQUALTO       reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHANEQUAL   reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHANEQUAL   reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    AND             reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    OR              reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    COMMA           reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RPAREN          reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RSQBRACKET      reduce using rule 74 (llamafunc -> idfunc LPAREN funcargs RPAREN .)


state 162

    (97) bloquefunc -> LBRACKET masestatuto . retorno RBRACKET
    (98) retorno -> . RETURN expresion SEMICOLON
    (99) retorno -> . RETURN SEMICOLON

    RETURN          shift and go to state 178

    retorno                        shift and go to state 179

state 163

    (95) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .

    MAIN            reduce using rule 95 (funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .)


state 164

    (94) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN . bloquefunc funcs
    (97) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 138

    bloquefunc                     shift and go to state 180

state 165

    (103) masargs -> COMMA args . masargs
    (103) masargs -> . COMMA args masargs
    (104) masargs -> . empty
    (122) empty -> .

    COMMA           shift and go to state 143
    RPAREN          reduce using rule 122 (empty -> .)

    masargs                        shift and go to state 181
    empty                          shift and go to state 142

state 166

    (73) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 167

    (5) condicion -> IF LPAREN expresion . RPAREN gotoF estatutobloque masbloque

    RPAREN          shift and go to state 183


state 168

    (21) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 184


state 169

    (22) asignacion -> idarray LSQBRACKET dimsvar . RSQBRACKET EQUALS expresion SEMICOLON

    RSQBRACKET      shift and go to state 185


state 170

    (13) ciclo -> while LPAREN expresion . RPAREN gotoF estatutobloque goto

    RPAREN          shift and go to state 186


state 171

    (15) escritura -> print LPAREN listaprint . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 172

    (17) listaprint -> expresion . masprint
    (18) masprint -> . addQPP listaprint
    (19) masprint -> . empty
    (20) addQPP -> . COMMA
    (122) empty -> .

    COMMA           shift and go to state 191
    RPAREN          reduce using rule 122 (empty -> .)

    masprint                       shift and go to state 188
    empty                          shift and go to state 190
    addQPP                         shift and go to state 189

state 173

    (72) random -> RANDOM LPAREN expresion COMMA expresion . RPAREN

    RPAREN          shift and go to state 192


state 174

    (35) masdimsvar -> COMMA dimsvar .

    RSQBRACKET      reduce using rule 35 (masdimsvar -> COMMA dimsvar .)


state 175

    (76) funcargs -> expresion listafuncargs checarparams .

    RPAREN          reduce using rule 76 (funcargs -> expresion listafuncargs checarparams .)


state 176

    (80) checarparams -> empty .

    RPAREN          reduce using rule 80 (checarparams -> empty .)


state 177

    (78) listafuncargs -> COMMA expresion . listafuncargs
    (78) listafuncargs -> . COMMA expresion listafuncargs
    (79) listafuncargs -> . empty
    (122) empty -> .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 122 (empty -> .)

    listafuncargs                  shift and go to state 193
    empty                          shift and go to state 159

state 178

    (98) retorno -> RETURN . expresion SEMICOLON
    (99) retorno -> RETURN . SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    SEMICOLON       shift and go to state 194
    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 195
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 179

    (97) bloquefunc -> LBRACKET masestatuto retorno . RBRACKET

    RBRACKET        shift and go to state 196


state 180

    (94) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc . funcs
    (94) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (95) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (96) funcs -> . empty
    (122) empty -> .

    FUNCTION        shift and go to state 21
    MAIN            reduce using rule 122 (empty -> .)

    empty                          shift and go to state 22
    funcs                          shift and go to state 197

state 181

    (103) masargs -> COMMA args masargs .

    RPAREN          reduce using rule 103 (masargs -> COMMA args masargs .)


state 182

    (73) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 183

    (5) condicion -> IF LPAREN expresion RPAREN . gotoF estatutobloque masbloque
    (8) gotoF -> . empty
    (122) empty -> .

    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    LBRACKET        reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    VAR             reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    ELSE            reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

    empty                          shift and go to state 199
    gotoF                          shift and go to state 200

state 184

    (21) asignacion -> ID EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    READ            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 185

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 201


state 186

    (13) ciclo -> while LPAREN expresion RPAREN . gotoF estatutobloque goto
    (8) gotoF -> . empty
    (122) empty -> .

    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    LBRACKET        reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    VAR             reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    ELSE            reduce using rule 122 (empty -> .)

    empty                          shift and go to state 199
    gotoF                          shift and go to state 202

state 187

    (15) escritura -> print LPAREN listaprint RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 188

    (17) listaprint -> expresion masprint .

    RPAREN          reduce using rule 17 (listaprint -> expresion masprint .)


state 189

    (18) masprint -> addQPP . listaprint
    (17) listaprint -> . expresion masprint
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    ctechar                        shift and go to state 57
    expcomp                        shift and go to state 42
    listaprint                     shift and go to state 204
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 172
    ctebool                        shift and go to state 54
    random                         shift and go to state 43
    varid                          shift and go to state 55
    leftparen                      shift and go to state 53
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 190

    (19) masprint -> empty .

    RPAREN          reduce using rule 19 (masprint -> empty .)


state 191

    (20) addQPP -> COMMA .

    LPAREN          reduce using rule 20 (addQPP -> COMMA .)
    ID              reduce using rule 20 (addQPP -> COMMA .)
    RANDOM          reduce using rule 20 (addQPP -> COMMA .)
    CTEINT          reduce using rule 20 (addQPP -> COMMA .)
    CTEFLOAT        reduce using rule 20 (addQPP -> COMMA .)
    CTECHAR         reduce using rule 20 (addQPP -> COMMA .)
    CTESTRING       reduce using rule 20 (addQPP -> COMMA .)
    TRUE            reduce using rule 20 (addQPP -> COMMA .)
    FALSE           reduce using rule 20 (addQPP -> COMMA .)


state 192

    (72) random -> RANDOM LPAREN expresion COMMA expresion RPAREN .

    TIMES           reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    DIVIDE          reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    PLUS            reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    MINUS           reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    MORETHAN        reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    LESSTHAN        reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    NOTEQUAL        reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    ISEQUALTO       reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    MORETHANEQUAL   reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    LESSTHANEQUAL   reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    AND             reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    OR              reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    COMMA           reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    RPAREN          reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    SEMICOLON       reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)
    RSQBRACKET      reduce using rule 72 (random -> RANDOM LPAREN expresion COMMA expresion RPAREN .)


state 193

    (78) listafuncargs -> COMMA expresion listafuncargs .

    RPAREN          reduce using rule 78 (listafuncargs -> COMMA expresion listafuncargs .)


state 194

    (99) retorno -> RETURN SEMICOLON .

    RBRACKET        reduce using rule 99 (retorno -> RETURN SEMICOLON .)


state 195

    (98) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 205


state 196

    (97) bloquefunc -> LBRACKET masestatuto retorno RBRACKET .

    FUNCTION        reduce using rule 97 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)
    MAIN            reduce using rule 97 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)


state 197

    (94) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .

    MAIN            reduce using rule 94 (funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .)


state 198

    (73) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    ELSE            reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    COMMENT         reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 199

    (8) gotoF -> empty .

    COMMENT         reduce using rule 8 (gotoF -> empty .)
    CPPCOMMENT      reduce using rule 8 (gotoF -> empty .)
    LBRACKET        reduce using rule 8 (gotoF -> empty .)
    ID              reduce using rule 8 (gotoF -> empty .)
    IF              reduce using rule 8 (gotoF -> empty .)
    READ            reduce using rule 8 (gotoF -> empty .)
    VAR             reduce using rule 8 (gotoF -> empty .)
    WHILE           reduce using rule 8 (gotoF -> empty .)
    PRINT           reduce using rule 8 (gotoF -> empty .)
    RBRACKET        reduce using rule 8 (gotoF -> empty .)
    RETURN          reduce using rule 8 (gotoF -> empty .)
    ELSE            reduce using rule 8 (gotoF -> empty .)


state 200

    (5) condicion -> IF LPAREN expresion RPAREN gotoF . estatutobloque masbloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (122) empty -> .
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 67
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106
    ELSE            reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 206
    empty                          shift and go to state 7
    idfunc                         shift and go to state 50
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    estatutobloque                 shift and go to state 207
    bloque                         shift and go to state 208
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122

state 201

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS . expresion SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) factor -> . random
    (28) leftparen -> . LPAREN
    (111) varcte -> . cteint
    (112) varcte -> . ctefloat
    (113) varcte -> . ctechar
    (114) varcte -> . ctestring
    (115) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (72) random -> . RANDOM LPAREN expresion COMMA expresion RPAREN
    (116) cteint -> . CTEINT
    (117) ctefloat -> . CTEFLOAT
    (118) ctechar -> . CTECHAR
    (119) ctestring -> . CTESTRING
    (120) ctebool -> . TRUE
    (121) ctebool -> . FALSE
    (32) idarray -> . ID
    (75) idfunc -> . ID

    LPAREN          shift and go to state 48
    ID              shift and go to state 46
    RANDOM          shift and go to state 41
    CTEINT          shift and go to state 51
    CTEFLOAT        shift and go to state 45
    CTECHAR         shift and go to state 39
    CTESTRING       shift and go to state 56
    TRUE            shift and go to state 62
    FALSE           shift and go to state 60

    cteint                         shift and go to state 38
    exp                            shift and go to state 40
    idfunc                         shift and go to state 50
    expcomp                        shift and go to state 42
    random                         shift and go to state 43
    ctestring                      shift and go to state 44
    idarray                        shift and go to state 47
    ctefloat                       shift and go to state 49
    expresion                      shift and go to state 209
    leftparen                      shift and go to state 53
    ctebool                        shift and go to state 54
    varid                          shift and go to state 55
    ctechar                        shift and go to state 57
    varcte                         shift and go to state 58
    llamafunc                      shift and go to state 59
    factor                         shift and go to state 61
    termino                        shift and go to state 63

state 202

    (13) ciclo -> while LPAREN expresion RPAREN gotoF . estatutobloque goto
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (122) empty -> .
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 67
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106
    ELSE            reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 206
    empty                          shift and go to state 7
    idfunc                         shift and go to state 50
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    estatutobloque                 shift and go to state 210
    bloque                         shift and go to state 208
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122

state 203

    (15) escritura -> print LPAREN listaprint RPAREN SEMICOLON .

    ELSE            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    COMMENT         reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ID              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    IF              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    READ            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    VAR             reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)


state 204

    (18) masprint -> addQPP listaprint .

    RPAREN          reduce using rule 18 (masprint -> addQPP listaprint .)


state 205

    (98) retorno -> RETURN expresion SEMICOLON .

    RBRACKET        reduce using rule 98 (retorno -> RETURN expresion SEMICOLON .)


state 206

    (6) estatutobloque -> estatuto .

    ELSE            reduce using rule 6 (estatutobloque -> estatuto .)
    COMMENT         reduce using rule 6 (estatutobloque -> estatuto .)
    CPPCOMMENT      reduce using rule 6 (estatutobloque -> estatuto .)
    ID              reduce using rule 6 (estatutobloque -> estatuto .)
    IF              reduce using rule 6 (estatutobloque -> estatuto .)
    READ            reduce using rule 6 (estatutobloque -> estatuto .)
    VAR             reduce using rule 6 (estatutobloque -> estatuto .)
    WHILE           reduce using rule 6 (estatutobloque -> estatuto .)
    PRINT           reduce using rule 6 (estatutobloque -> estatuto .)
    RBRACKET        reduce using rule 6 (estatutobloque -> estatuto .)
    RETURN          reduce using rule 6 (estatutobloque -> estatuto .)


state 207

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque . masbloque
    (10) masbloque -> . ELSE goto estatutobloque
    (11) masbloque -> . empty
    (122) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    VAR             reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

  ! ELSE            [ reduce using rule 122 (empty -> .) ]

    empty                          shift and go to state 212
    masbloque                      shift and go to state 213

state 208

    (7) estatutobloque -> bloque .

    ELSE            reduce using rule 7 (estatutobloque -> bloque .)
    COMMENT         reduce using rule 7 (estatutobloque -> bloque .)
    CPPCOMMENT      reduce using rule 7 (estatutobloque -> bloque .)
    ID              reduce using rule 7 (estatutobloque -> bloque .)
    IF              reduce using rule 7 (estatutobloque -> bloque .)
    READ            reduce using rule 7 (estatutobloque -> bloque .)
    VAR             reduce using rule 7 (estatutobloque -> bloque .)
    WHILE           reduce using rule 7 (estatutobloque -> bloque .)
    PRINT           reduce using rule 7 (estatutobloque -> bloque .)
    RBRACKET        reduce using rule 7 (estatutobloque -> bloque .)
    RETURN          reduce using rule 7 (estatutobloque -> bloque .)


state 209

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 214


state 210

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque . goto
    (12) goto -> . empty
    (122) empty -> .

    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    VAR             reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    ELSE            reduce using rule 122 (empty -> .)

    empty                          shift and go to state 215
    goto                           shift and go to state 216

state 211

    (10) masbloque -> ELSE . goto estatutobloque
    (12) goto -> . empty
    (122) empty -> .

    COMMENT         reduce using rule 122 (empty -> .)
    CPPCOMMENT      reduce using rule 122 (empty -> .)
    LBRACKET        reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    VAR             reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    ELSE            reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

    goto                           shift and go to state 217
    empty                          shift and go to state 215

state 212

    (11) masbloque -> empty .

    ELSE            reduce using rule 11 (masbloque -> empty .)
    COMMENT         reduce using rule 11 (masbloque -> empty .)
    CPPCOMMENT      reduce using rule 11 (masbloque -> empty .)
    ID              reduce using rule 11 (masbloque -> empty .)
    IF              reduce using rule 11 (masbloque -> empty .)
    READ            reduce using rule 11 (masbloque -> empty .)
    VAR             reduce using rule 11 (masbloque -> empty .)
    WHILE           reduce using rule 11 (masbloque -> empty .)
    PRINT           reduce using rule 11 (masbloque -> empty .)
    RBRACKET        reduce using rule 11 (masbloque -> empty .)
    RETURN          reduce using rule 11 (masbloque -> empty .)


state 213

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .

    ELSE            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    COMMENT         reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    CPPCOMMENT      reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ID              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    IF              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    READ            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    VAR             reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    WHILE           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    PRINT           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RBRACKET        reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RETURN          reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)


state 214

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ID              reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    READ            reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)


state 215

    (12) goto -> empty .

    COMMENT         reduce using rule 12 (goto -> empty .)
    CPPCOMMENT      reduce using rule 12 (goto -> empty .)
    ID              reduce using rule 12 (goto -> empty .)
    IF              reduce using rule 12 (goto -> empty .)
    READ            reduce using rule 12 (goto -> empty .)
    VAR             reduce using rule 12 (goto -> empty .)
    WHILE           reduce using rule 12 (goto -> empty .)
    PRINT           reduce using rule 12 (goto -> empty .)
    RBRACKET        reduce using rule 12 (goto -> empty .)
    RETURN          reduce using rule 12 (goto -> empty .)
    ELSE            reduce using rule 12 (goto -> empty .)
    LBRACKET        reduce using rule 12 (goto -> empty .)


state 216

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .

    ELSE            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    COMMENT         reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    CPPCOMMENT      reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ID              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    IF              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    READ            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    VAR             reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    WHILE           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    PRINT           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RBRACKET        reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RETURN          reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)


state 217

    (10) masbloque -> ELSE goto . estatutobloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (83) vars -> . VAR tipo listaid SEMICOLON vars
    (84) vars -> . empty
    (74) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (122) empty -> .
    (75) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 113
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 67
    ID              shift and go to state 110
    IF              shift and go to state 109
    READ            shift and go to state 105
    VAR             shift and go to state 6
    WHILE           shift and go to state 104
    PRINT           shift and go to state 106
    ELSE            reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

  ! COMMENT         [ reduce using rule 122 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! VAR             [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 206
    empty                          shift and go to state 7
    idfunc                         shift and go to state 50
    vars                           shift and go to state 111
    print                          shift and go to state 121
    ciclo                          shift and go to state 112
    lectura                        shift and go to state 114
    idarray                        shift and go to state 116
    llamafunc                      shift and go to state 117
    condicion                      shift and go to state 118
    estatutobloque                 shift and go to state 218
    bloque                         shift and go to state 208
    while                          shift and go to state 119
    asignacion                     shift and go to state 120
    escritura                      shift and go to state 122

state 218

    (10) masbloque -> ELSE goto estatutobloque .

    ELSE            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    COMMENT         reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    CPPCOMMENT      reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    ID              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    IF              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    READ            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    VAR             reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    WHILE           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    PRINT           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RBRACKET        reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RETURN          reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)

