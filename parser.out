Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> prog ID SEMICOLON vars eramain funcs main bloque
Rule 2     prog -> PROGRAM
Rule 3     eramain -> empty
Rule 4     main -> MAIN
Rule 5     condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
Rule 6     estatutobloque -> estatuto
Rule 7     estatutobloque -> bloque
Rule 8     gotoF -> empty
Rule 9     bloque -> LBRACKET masestatuto RBRACKET
Rule 10    masbloque -> ELSE goto estatutobloque
Rule 11    masbloque -> empty
Rule 12    goto -> empty
Rule 13    ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto
Rule 14    while -> WHILE
Rule 15    escritura -> print LPAREN listaprint RPAREN SEMICOLON
Rule 16    print -> PRINT
Rule 17    listaprint -> expresion masprint
Rule 18    listaprint -> ctestring masprint
Rule 19    masprint -> addQPP listaprint
Rule 20    masprint -> empty
Rule 21    addQPP -> COMMA
Rule 22    asignacion -> ID EQUALS expresion SEMICOLON
Rule 23    asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
Rule 24    factor -> leftparen expresion rightparen
Rule 25    factor -> varcte
Rule 26    factor -> varid
Rule 27    factor -> llamafunc
Rule 28    leftparen -> LPAREN
Rule 29    rightparen -> RPAREN
Rule 30    varid -> ID
Rule 31    varid -> idarray LSQBRACKET dimsvar RSQBRACKET
Rule 32    idarray -> ID
Rule 33    dimsvar -> expdimvar masdimsvar
Rule 34    expdimvar -> expresion
Rule 35    masdimsvar -> COMMA dimsvar
Rule 36    masdimsvar -> empty
Rule 37    exp -> termino masexp
Rule 38    masexp -> addQPPM exp
Rule 39    masexp -> empty
Rule 40    addQPPM -> PLUS
Rule 41    addQPPM -> MINUS
Rule 42    comaexpresion -> COMMA expresion comaexpresion
Rule 43    comaexpresion -> empty
Rule 44    expresion -> expcomp masexpresion
Rule 45    addQPAO -> AND
Rule 46    addQPAO -> OR
Rule 47    masexpresion -> addQPAO expresion
Rule 48    masexpresion -> empty
Rule 49    termino -> factor masterminos
Rule 50    addQTD -> TIMES
Rule 51    addQTD -> DIVIDE
Rule 52    masterminos -> addQTD termino
Rule 53    masterminos -> empty
Rule 54    expcomp -> exp expcompcontinuo
Rule 55    addQPComp -> MORETHAN
Rule 56    addQPComp -> LESSTHAN
Rule 57    addQPComp -> NOTEQUAL
Rule 58    addQPComp -> ISEQUALTO
Rule 59    addQPComp -> MORETHANEQUAL
Rule 60    addQPComp -> LESSTHANEQUAL
Rule 61    expcompcontinuo -> addQPComp expcomp
Rule 62    expcompcontinuo -> empty
Rule 63    estatuto -> asignacion
Rule 64    estatuto -> condicion
Rule 65    estatuto -> ciclo
Rule 66    estatuto -> escritura
Rule 67    estatuto -> lectura
Rule 68    estatuto -> vars
Rule 69    estatuto -> llamafunc SEMICOLON
Rule 70    estatuto -> COMMENT
Rule 71    estatuto -> CPPCOMMENT
Rule 72    lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 73    llamafunc -> idfunc LPAREN funcargs RPAREN
Rule 74    idfunc -> ID
Rule 75    funcargs -> expresion listafuncargs checarparams
Rule 76    funcargs -> empty
Rule 77    listafuncargs -> COMMA expresion listafuncargs
Rule 78    listafuncargs -> empty
Rule 79    checarparams -> empty
Rule 80    masestatuto -> estatuto masestatuto
Rule 81    masestatuto -> empty
Rule 82    vars -> VAR tipo listaid SEMICOLON vars
Rule 83    vars -> empty
Rule 84    listaid -> initvar masid
Rule 85    initvar -> ID EQUALS expresion
Rule 86    initvar -> ID LSQBRACKET dims RSQBRACKET
Rule 87    initvar -> ID
Rule 88    dims -> CTEINT masdims
Rule 89    masdims -> COMMA dims
Rule 90    masdims -> empty
Rule 91    masid -> COMMA listaid
Rule 92    masid -> empty
Rule 93    funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
Rule 94    funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
Rule 95    funcs -> empty
Rule 96    bloquefunc -> LBRACKET masestatuto retorno RBRACKET
Rule 97    retorno -> RETURN expresion SEMICOLON
Rule 98    retorno -> RETURN SEMICOLON
Rule 99    funcaux -> tipo ID
Rule 100   args -> tipo ID
Rule 101   args -> empty
Rule 102   masargs -> COMMA args masargs
Rule 103   masargs -> empty
Rule 104   tipo -> INT
Rule 105   tipo -> FLOAT
Rule 106   tipo -> CHAR
Rule 107   tipo -> BOOL
Rule 108   tipo -> STRING
Rule 109   tipo -> VOID
Rule 110   varcte -> cteint
Rule 111   varcte -> ctefloat
Rule 112   varcte -> ctechar
Rule 113   varcte -> ctestring
Rule 114   varcte -> ctebool
Rule 115   cteint -> CTEINT
Rule 116   ctefloat -> CTEFLOAT
Rule 117   ctechar -> CTECHAR
Rule 118   ctestring -> CTESTRING
Rule 119   ctebool -> TRUE
Rule 120   ctebool -> FALSE
Rule 121   empty -> <empty>

Terminals, with rules where they appear

AND                  : 45
BOOL                 : 107
CHAR                 : 106
COMMA                : 21 35 42 77 89 91 102
COMMENT              : 70
CPPCOMMENT           : 71
CTECHAR              : 117
CTEFLOAT             : 116
CTEINT               : 88 115
CTESTRING            : 118
DIVIDE               : 51
ELSE                 : 10
EQUALS               : 22 23 85
FALSE                : 120
FLOAT                : 105
FUNCTION             : 93 94
ID                   : 1 22 30 32 72 74 85 86 87 99 100
IF                   : 5
INT                  : 104
ISEQUALTO            : 58
LBRACKET             : 9 96
LESSTHAN             : 56
LESSTHANEQUAL        : 60
LPAREN               : 5 13 15 28 72 73 93 94
LSQBRACKET           : 23 31 86
MAIN                 : 4
MINUS                : 41
MORETHAN             : 55
MORETHANEQUAL        : 59
NOTEQUAL             : 57
OR                   : 46
PLUS                 : 40
PRINT                : 16
PROGRAM              : 2
RBRACKET             : 9 96
READ                 : 72
RETURN               : 97 98
RPAREN               : 5 13 15 29 72 73 93 94
RSQBRACKET           : 23 31 86
SEMICOLON            : 1 15 22 23 69 72 82 97 98
STRING               : 108
TIMES                : 50
TRUE                 : 119
VAR                  : 82
VOID                 : 109
WHILE                : 14
error                : 

Nonterminals, with rules where they appear

addQPAO              : 47
addQPComp            : 61
addQPP               : 19
addQPPM              : 38
addQTD               : 52
args                 : 93 102
asignacion           : 63
bloque               : 1 7
bloquefunc           : 93 94
checarparams         : 75
ciclo                : 65
comaexpresion        : 42
condicion            : 64
ctebool              : 114
ctechar              : 112
ctefloat             : 111
cteint               : 110
ctestring            : 18 113
dims                 : 86 89
dimsvar              : 23 31 35
empty                : 3 8 11 12 20 36 39 43 48 53 62 76 78 79 81 83 90 92 95 101 103
eramain              : 1
escritura            : 66
estatuto             : 6 80
estatutobloque       : 5 10 13
exp                  : 38 54
expcomp              : 44 61
expcompcontinuo      : 54
expdimvar            : 33
expresion            : 5 13 17 22 23 24 34 42 47 75 77 85 97
factor               : 49
funcargs             : 73
funcaux              : 93 94
funcs                : 1 93 94
goto                 : 10 13
gotoF                : 5 13
idarray              : 23 31
idfunc               : 73
initvar              : 84
lectura              : 67
leftparen            : 24
listafuncargs        : 75 77
listaid              : 82 91
listaprint           : 15 19
llamafunc            : 27 69
main                 : 1
masargs              : 93 102
masbloque            : 5
masdims              : 88
masdimsvar           : 33
masestatuto          : 9 80 96
masexp               : 37
masexpresion         : 44
masid                : 84
masprint             : 17 18
masterminos          : 49
print                : 15
prog                 : 1
programa             : 0
retorno              : 96
rightparen           : 24
termino              : 37 52
tipo                 : 82 99 100
varcte               : 25
varid                : 26
vars                 : 1 68 82
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . prog ID SEMICOLON vars eramain funcs main bloque
    (2) prog -> . PROGRAM

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1
    programa                       shift and go to state 3

state 1

    (1) programa -> prog . ID SEMICOLON vars eramain funcs main bloque

    ID              shift and go to state 4


state 2

    (2) prog -> PROGRAM .

    ID              reduce using rule 2 (prog -> PROGRAM .)


state 3

    (0) S' -> programa .



state 4

    (1) programa -> prog ID . SEMICOLON vars eramain funcs main bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> prog ID SEMICOLON . vars eramain funcs main bloque
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (121) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 6
    vars                           shift and go to state 8

state 6

    (83) vars -> empty .

    FUNCTION        reduce using rule 83 (vars -> empty .)
    MAIN            reduce using rule 83 (vars -> empty .)
    COMMENT         reduce using rule 83 (vars -> empty .)
    CPPCOMMENT      reduce using rule 83 (vars -> empty .)
    ID              reduce using rule 83 (vars -> empty .)
    IF              reduce using rule 83 (vars -> empty .)
    READ            reduce using rule 83 (vars -> empty .)
    VAR             reduce using rule 83 (vars -> empty .)
    WHILE           reduce using rule 83 (vars -> empty .)
    PRINT           reduce using rule 83 (vars -> empty .)
    RBRACKET        reduce using rule 83 (vars -> empty .)
    RETURN          reduce using rule 83 (vars -> empty .)
    ELSE            reduce using rule 83 (vars -> empty .)


state 7

    (82) vars -> VAR . tipo listaid SEMICOLON vars
    (104) tipo -> . INT
    (105) tipo -> . FLOAT
    (106) tipo -> . CHAR
    (107) tipo -> . BOOL
    (108) tipo -> . STRING
    (109) tipo -> . VOID

    INT             shift and go to state 15
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14
    VOID            shift and go to state 11

    tipo                           shift and go to state 10

state 8

    (1) programa -> prog ID SEMICOLON vars . eramain funcs main bloque
    (3) eramain -> . empty
    (121) empty -> .

    FUNCTION        reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 16
    eramain                        shift and go to state 17

state 9

    (105) tipo -> FLOAT .

    ID              reduce using rule 105 (tipo -> FLOAT .)


state 10

    (82) vars -> VAR tipo . listaid SEMICOLON vars
    (84) listaid -> . initvar masid
    (85) initvar -> . ID EQUALS expresion
    (86) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (87) initvar -> . ID

    ID              shift and go to state 18

    listaid                        shift and go to state 20
    initvar                        shift and go to state 19

state 11

    (109) tipo -> VOID .

    ID              reduce using rule 109 (tipo -> VOID .)


state 12

    (106) tipo -> CHAR .

    ID              reduce using rule 106 (tipo -> CHAR .)


state 13

    (107) tipo -> BOOL .

    ID              reduce using rule 107 (tipo -> BOOL .)


state 14

    (108) tipo -> STRING .

    ID              reduce using rule 108 (tipo -> STRING .)


state 15

    (104) tipo -> INT .

    ID              reduce using rule 104 (tipo -> INT .)


state 16

    (3) eramain -> empty .

    FUNCTION        reduce using rule 3 (eramain -> empty .)
    MAIN            reduce using rule 3 (eramain -> empty .)


state 17

    (1) programa -> prog ID SEMICOLON vars eramain . funcs main bloque
    (93) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (94) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (95) funcs -> . empty
    (121) empty -> .

    FUNCTION        shift and go to state 23
    MAIN            reduce using rule 121 (empty -> .)

    funcs                          shift and go to state 22
    empty                          shift and go to state 21

state 18

    (85) initvar -> ID . EQUALS expresion
    (86) initvar -> ID . LSQBRACKET dims RSQBRACKET
    (87) initvar -> ID .

    EQUALS          shift and go to state 25
    LSQBRACKET      shift and go to state 24
    COMMA           reduce using rule 87 (initvar -> ID .)
    SEMICOLON       reduce using rule 87 (initvar -> ID .)


state 19

    (84) listaid -> initvar . masid
    (91) masid -> . COMMA listaid
    (92) masid -> . empty
    (121) empty -> .

    COMMA           shift and go to state 26
    SEMICOLON       reduce using rule 121 (empty -> .)

    empty                          shift and go to state 27
    masid                          shift and go to state 28

state 20

    (82) vars -> VAR tipo listaid . SEMICOLON vars

    SEMICOLON       shift and go to state 29


state 21

    (95) funcs -> empty .

    MAIN            reduce using rule 95 (funcs -> empty .)


state 22

    (1) programa -> prog ID SEMICOLON vars eramain funcs . main bloque
    (4) main -> . MAIN

    MAIN            shift and go to state 31

    main                           shift and go to state 30

state 23

    (93) funcs -> FUNCTION . funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (94) funcs -> FUNCTION . funcaux LPAREN RPAREN bloquefunc funcs
    (99) funcaux -> . tipo ID
    (104) tipo -> . INT
    (105) tipo -> . FLOAT
    (106) tipo -> . CHAR
    (107) tipo -> . BOOL
    (108) tipo -> . STRING
    (109) tipo -> . VOID

    INT             shift and go to state 15
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14
    VOID            shift and go to state 11

    tipo                           shift and go to state 32
    funcaux                        shift and go to state 33

state 24

    (86) initvar -> ID LSQBRACKET . dims RSQBRACKET
    (88) dims -> . CTEINT masdims

    CTEINT          shift and go to state 35

    dims                           shift and go to state 34

state 25

    (85) initvar -> ID EQUALS . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 56
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 26

    (91) masid -> COMMA . listaid
    (84) listaid -> . initvar masid
    (85) initvar -> . ID EQUALS expresion
    (86) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (87) initvar -> . ID

    ID              shift and go to state 18

    initvar                        shift and go to state 19
    listaid                        shift and go to state 60

state 27

    (92) masid -> empty .

    SEMICOLON       reduce using rule 92 (masid -> empty .)


state 28

    (84) listaid -> initvar masid .

    SEMICOLON       reduce using rule 84 (listaid -> initvar masid .)


state 29

    (82) vars -> VAR tipo listaid SEMICOLON . vars
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (121) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 7
    FUNCTION        reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)
    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

  ! VAR             [ reduce using rule 121 (empty -> .) ]

    empty                          shift and go to state 6
    vars                           shift and go to state 61

state 30

    (1) programa -> prog ID SEMICOLON vars eramain funcs main . bloque
    (9) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 62

    bloque                         shift and go to state 63

state 31

    (4) main -> MAIN .

    LBRACKET        reduce using rule 4 (main -> MAIN .)


state 32

    (99) funcaux -> tipo . ID

    ID              shift and go to state 64


state 33

    (93) funcs -> FUNCTION funcaux . LPAREN args masargs RPAREN bloquefunc funcs
    (94) funcs -> FUNCTION funcaux . LPAREN RPAREN bloquefunc funcs

    LPAREN          shift and go to state 65


state 34

    (86) initvar -> ID LSQBRACKET dims . RSQBRACKET

    RSQBRACKET      shift and go to state 66


state 35

    (88) dims -> CTEINT . masdims
    (89) masdims -> . COMMA dims
    (90) masdims -> . empty
    (121) empty -> .

    COMMA           shift and go to state 67
    RSQBRACKET      reduce using rule 121 (empty -> .)

    empty                          shift and go to state 68
    masdims                        shift and go to state 69

state 36

    (25) factor -> varcte .

    TIMES           reduce using rule 25 (factor -> varcte .)
    DIVIDE          reduce using rule 25 (factor -> varcte .)
    PLUS            reduce using rule 25 (factor -> varcte .)
    MINUS           reduce using rule 25 (factor -> varcte .)
    MORETHAN        reduce using rule 25 (factor -> varcte .)
    LESSTHAN        reduce using rule 25 (factor -> varcte .)
    NOTEQUAL        reduce using rule 25 (factor -> varcte .)
    ISEQUALTO       reduce using rule 25 (factor -> varcte .)
    MORETHANEQUAL   reduce using rule 25 (factor -> varcte .)
    LESSTHANEQUAL   reduce using rule 25 (factor -> varcte .)
    AND             reduce using rule 25 (factor -> varcte .)
    OR              reduce using rule 25 (factor -> varcte .)
    COMMA           reduce using rule 25 (factor -> varcte .)
    RPAREN          reduce using rule 25 (factor -> varcte .)
    SEMICOLON       reduce using rule 25 (factor -> varcte .)
    RSQBRACKET      reduce using rule 25 (factor -> varcte .)


state 37

    (111) varcte -> ctefloat .

    TIMES           reduce using rule 111 (varcte -> ctefloat .)
    DIVIDE          reduce using rule 111 (varcte -> ctefloat .)
    PLUS            reduce using rule 111 (varcte -> ctefloat .)
    MINUS           reduce using rule 111 (varcte -> ctefloat .)
    MORETHAN        reduce using rule 111 (varcte -> ctefloat .)
    LESSTHAN        reduce using rule 111 (varcte -> ctefloat .)
    NOTEQUAL        reduce using rule 111 (varcte -> ctefloat .)
    ISEQUALTO       reduce using rule 111 (varcte -> ctefloat .)
    MORETHANEQUAL   reduce using rule 111 (varcte -> ctefloat .)
    LESSTHANEQUAL   reduce using rule 111 (varcte -> ctefloat .)
    AND             reduce using rule 111 (varcte -> ctefloat .)
    OR              reduce using rule 111 (varcte -> ctefloat .)
    RPAREN          reduce using rule 111 (varcte -> ctefloat .)
    COMMA           reduce using rule 111 (varcte -> ctefloat .)
    SEMICOLON       reduce using rule 111 (varcte -> ctefloat .)
    RSQBRACKET      reduce using rule 111 (varcte -> ctefloat .)


state 38

    (110) varcte -> cteint .

    TIMES           reduce using rule 110 (varcte -> cteint .)
    DIVIDE          reduce using rule 110 (varcte -> cteint .)
    PLUS            reduce using rule 110 (varcte -> cteint .)
    MINUS           reduce using rule 110 (varcte -> cteint .)
    MORETHAN        reduce using rule 110 (varcte -> cteint .)
    LESSTHAN        reduce using rule 110 (varcte -> cteint .)
    NOTEQUAL        reduce using rule 110 (varcte -> cteint .)
    ISEQUALTO       reduce using rule 110 (varcte -> cteint .)
    MORETHANEQUAL   reduce using rule 110 (varcte -> cteint .)
    LESSTHANEQUAL   reduce using rule 110 (varcte -> cteint .)
    AND             reduce using rule 110 (varcte -> cteint .)
    OR              reduce using rule 110 (varcte -> cteint .)
    RPAREN          reduce using rule 110 (varcte -> cteint .)
    COMMA           reduce using rule 110 (varcte -> cteint .)
    SEMICOLON       reduce using rule 110 (varcte -> cteint .)
    RSQBRACKET      reduce using rule 110 (varcte -> cteint .)


state 39

    (119) ctebool -> TRUE .

    TIMES           reduce using rule 119 (ctebool -> TRUE .)
    DIVIDE          reduce using rule 119 (ctebool -> TRUE .)
    PLUS            reduce using rule 119 (ctebool -> TRUE .)
    MINUS           reduce using rule 119 (ctebool -> TRUE .)
    MORETHAN        reduce using rule 119 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 119 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 119 (ctebool -> TRUE .)
    ISEQUALTO       reduce using rule 119 (ctebool -> TRUE .)
    MORETHANEQUAL   reduce using rule 119 (ctebool -> TRUE .)
    LESSTHANEQUAL   reduce using rule 119 (ctebool -> TRUE .)
    AND             reduce using rule 119 (ctebool -> TRUE .)
    OR              reduce using rule 119 (ctebool -> TRUE .)
    RPAREN          reduce using rule 119 (ctebool -> TRUE .)
    COMMA           reduce using rule 119 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 119 (ctebool -> TRUE .)
    RSQBRACKET      reduce using rule 119 (ctebool -> TRUE .)


state 40

    (49) termino -> factor . masterminos
    (52) masterminos -> . addQTD termino
    (53) masterminos -> . empty
    (50) addQTD -> . TIMES
    (51) addQTD -> . DIVIDE
    (121) empty -> .

    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 72
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    MORETHAN        reduce using rule 121 (empty -> .)
    LESSTHAN        reduce using rule 121 (empty -> .)
    NOTEQUAL        reduce using rule 121 (empty -> .)
    ISEQUALTO       reduce using rule 121 (empty -> .)
    MORETHANEQUAL   reduce using rule 121 (empty -> .)
    LESSTHANEQUAL   reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    RSQBRACKET      reduce using rule 121 (empty -> .)

    addQTD                         shift and go to state 73
    masterminos                    shift and go to state 71
    empty                          shift and go to state 70

state 41

    (113) varcte -> ctestring .

    TIMES           reduce using rule 113 (varcte -> ctestring .)
    DIVIDE          reduce using rule 113 (varcte -> ctestring .)
    PLUS            reduce using rule 113 (varcte -> ctestring .)
    MINUS           reduce using rule 113 (varcte -> ctestring .)
    MORETHAN        reduce using rule 113 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 113 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 113 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 113 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 113 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 113 (varcte -> ctestring .)
    AND             reduce using rule 113 (varcte -> ctestring .)
    OR              reduce using rule 113 (varcte -> ctestring .)
    RPAREN          reduce using rule 113 (varcte -> ctestring .)
    COMMA           reduce using rule 113 (varcte -> ctestring .)
    SEMICOLON       reduce using rule 113 (varcte -> ctestring .)
    RSQBRACKET      reduce using rule 113 (varcte -> ctestring .)


state 42

    (54) expcomp -> exp . expcompcontinuo
    (61) expcompcontinuo -> . addQPComp expcomp
    (62) expcompcontinuo -> . empty
    (55) addQPComp -> . MORETHAN
    (56) addQPComp -> . LESSTHAN
    (57) addQPComp -> . NOTEQUAL
    (58) addQPComp -> . ISEQUALTO
    (59) addQPComp -> . MORETHANEQUAL
    (60) addQPComp -> . LESSTHANEQUAL
    (121) empty -> .

    MORETHAN        shift and go to state 81
    LESSTHAN        shift and go to state 79
    NOTEQUAL        shift and go to state 83
    ISEQUALTO       shift and go to state 76
    MORETHANEQUAL   shift and go to state 80
    LESSTHANEQUAL   shift and go to state 78
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    RSQBRACKET      reduce using rule 121 (empty -> .)

    empty                          shift and go to state 75
    addQPComp                      shift and go to state 77
    expcompcontinuo                shift and go to state 82

state 43

    (117) ctechar -> CTECHAR .

    TIMES           reduce using rule 117 (ctechar -> CTECHAR .)
    DIVIDE          reduce using rule 117 (ctechar -> CTECHAR .)
    PLUS            reduce using rule 117 (ctechar -> CTECHAR .)
    MINUS           reduce using rule 117 (ctechar -> CTECHAR .)
    MORETHAN        reduce using rule 117 (ctechar -> CTECHAR .)
    LESSTHAN        reduce using rule 117 (ctechar -> CTECHAR .)
    NOTEQUAL        reduce using rule 117 (ctechar -> CTECHAR .)
    ISEQUALTO       reduce using rule 117 (ctechar -> CTECHAR .)
    MORETHANEQUAL   reduce using rule 117 (ctechar -> CTECHAR .)
    LESSTHANEQUAL   reduce using rule 117 (ctechar -> CTECHAR .)
    AND             reduce using rule 117 (ctechar -> CTECHAR .)
    OR              reduce using rule 117 (ctechar -> CTECHAR .)
    RPAREN          reduce using rule 117 (ctechar -> CTECHAR .)
    SEMICOLON       reduce using rule 117 (ctechar -> CTECHAR .)
    COMMA           reduce using rule 117 (ctechar -> CTECHAR .)
    RSQBRACKET      reduce using rule 117 (ctechar -> CTECHAR .)


state 44

    (30) varid -> ID .
    (32) idarray -> ID .
    (74) idfunc -> ID .

    TIMES           reduce using rule 30 (varid -> ID .)
    DIVIDE          reduce using rule 30 (varid -> ID .)
    PLUS            reduce using rule 30 (varid -> ID .)
    MINUS           reduce using rule 30 (varid -> ID .)
    MORETHAN        reduce using rule 30 (varid -> ID .)
    LESSTHAN        reduce using rule 30 (varid -> ID .)
    NOTEQUAL        reduce using rule 30 (varid -> ID .)
    ISEQUALTO       reduce using rule 30 (varid -> ID .)
    MORETHANEQUAL   reduce using rule 30 (varid -> ID .)
    LESSTHANEQUAL   reduce using rule 30 (varid -> ID .)
    AND             reduce using rule 30 (varid -> ID .)
    OR              reduce using rule 30 (varid -> ID .)
    COMMA           reduce using rule 30 (varid -> ID .)
    SEMICOLON       reduce using rule 30 (varid -> ID .)
    RPAREN          reduce using rule 30 (varid -> ID .)
    RSQBRACKET      reduce using rule 30 (varid -> ID .)
    LSQBRACKET      reduce using rule 32 (idarray -> ID .)
    LPAREN          reduce using rule 74 (idfunc -> ID .)


state 45

    (118) ctestring -> CTESTRING .

    TIMES           reduce using rule 118 (ctestring -> CTESTRING .)
    DIVIDE          reduce using rule 118 (ctestring -> CTESTRING .)
    PLUS            reduce using rule 118 (ctestring -> CTESTRING .)
    MINUS           reduce using rule 118 (ctestring -> CTESTRING .)
    MORETHAN        reduce using rule 118 (ctestring -> CTESTRING .)
    LESSTHAN        reduce using rule 118 (ctestring -> CTESTRING .)
    NOTEQUAL        reduce using rule 118 (ctestring -> CTESTRING .)
    ISEQUALTO       reduce using rule 118 (ctestring -> CTESTRING .)
    MORETHANEQUAL   reduce using rule 118 (ctestring -> CTESTRING .)
    LESSTHANEQUAL   reduce using rule 118 (ctestring -> CTESTRING .)
    AND             reduce using rule 118 (ctestring -> CTESTRING .)
    OR              reduce using rule 118 (ctestring -> CTESTRING .)
    COMMA           reduce using rule 118 (ctestring -> CTESTRING .)
    RPAREN          reduce using rule 118 (ctestring -> CTESTRING .)
    SEMICOLON       reduce using rule 118 (ctestring -> CTESTRING .)
    RSQBRACKET      reduce using rule 118 (ctestring -> CTESTRING .)


state 46

    (31) varid -> idarray . LSQBRACKET dimsvar RSQBRACKET

    LSQBRACKET      shift and go to state 84


state 47

    (120) ctebool -> FALSE .

    TIMES           reduce using rule 120 (ctebool -> FALSE .)
    DIVIDE          reduce using rule 120 (ctebool -> FALSE .)
    PLUS            reduce using rule 120 (ctebool -> FALSE .)
    MINUS           reduce using rule 120 (ctebool -> FALSE .)
    MORETHAN        reduce using rule 120 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 120 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 120 (ctebool -> FALSE .)
    ISEQUALTO       reduce using rule 120 (ctebool -> FALSE .)
    MORETHANEQUAL   reduce using rule 120 (ctebool -> FALSE .)
    LESSTHANEQUAL   reduce using rule 120 (ctebool -> FALSE .)
    AND             reduce using rule 120 (ctebool -> FALSE .)
    OR              reduce using rule 120 (ctebool -> FALSE .)
    RPAREN          reduce using rule 120 (ctebool -> FALSE .)
    COMMA           reduce using rule 120 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 120 (ctebool -> FALSE .)
    RSQBRACKET      reduce using rule 120 (ctebool -> FALSE .)


state 48

    (115) cteint -> CTEINT .

    TIMES           reduce using rule 115 (cteint -> CTEINT .)
    DIVIDE          reduce using rule 115 (cteint -> CTEINT .)
    PLUS            reduce using rule 115 (cteint -> CTEINT .)
    MINUS           reduce using rule 115 (cteint -> CTEINT .)
    MORETHAN        reduce using rule 115 (cteint -> CTEINT .)
    LESSTHAN        reduce using rule 115 (cteint -> CTEINT .)
    NOTEQUAL        reduce using rule 115 (cteint -> CTEINT .)
    ISEQUALTO       reduce using rule 115 (cteint -> CTEINT .)
    MORETHANEQUAL   reduce using rule 115 (cteint -> CTEINT .)
    LESSTHANEQUAL   reduce using rule 115 (cteint -> CTEINT .)
    AND             reduce using rule 115 (cteint -> CTEINT .)
    OR              reduce using rule 115 (cteint -> CTEINT .)
    RPAREN          reduce using rule 115 (cteint -> CTEINT .)
    SEMICOLON       reduce using rule 115 (cteint -> CTEINT .)
    COMMA           reduce using rule 115 (cteint -> CTEINT .)
    RSQBRACKET      reduce using rule 115 (cteint -> CTEINT .)


state 49

    (27) factor -> llamafunc .

    TIMES           reduce using rule 27 (factor -> llamafunc .)
    DIVIDE          reduce using rule 27 (factor -> llamafunc .)
    PLUS            reduce using rule 27 (factor -> llamafunc .)
    MINUS           reduce using rule 27 (factor -> llamafunc .)
    MORETHAN        reduce using rule 27 (factor -> llamafunc .)
    LESSTHAN        reduce using rule 27 (factor -> llamafunc .)
    NOTEQUAL        reduce using rule 27 (factor -> llamafunc .)
    ISEQUALTO       reduce using rule 27 (factor -> llamafunc .)
    MORETHANEQUAL   reduce using rule 27 (factor -> llamafunc .)
    LESSTHANEQUAL   reduce using rule 27 (factor -> llamafunc .)
    AND             reduce using rule 27 (factor -> llamafunc .)
    OR              reduce using rule 27 (factor -> llamafunc .)
    COMMA           reduce using rule 27 (factor -> llamafunc .)
    RPAREN          reduce using rule 27 (factor -> llamafunc .)
    SEMICOLON       reduce using rule 27 (factor -> llamafunc .)
    RSQBRACKET      reduce using rule 27 (factor -> llamafunc .)


state 50

    (73) llamafunc -> idfunc . LPAREN funcargs RPAREN

    LPAREN          shift and go to state 85


state 51

    (114) varcte -> ctebool .

    TIMES           reduce using rule 114 (varcte -> ctebool .)
    DIVIDE          reduce using rule 114 (varcte -> ctebool .)
    PLUS            reduce using rule 114 (varcte -> ctebool .)
    MINUS           reduce using rule 114 (varcte -> ctebool .)
    MORETHAN        reduce using rule 114 (varcte -> ctebool .)
    LESSTHAN        reduce using rule 114 (varcte -> ctebool .)
    NOTEQUAL        reduce using rule 114 (varcte -> ctebool .)
    ISEQUALTO       reduce using rule 114 (varcte -> ctebool .)
    MORETHANEQUAL   reduce using rule 114 (varcte -> ctebool .)
    LESSTHANEQUAL   reduce using rule 114 (varcte -> ctebool .)
    AND             reduce using rule 114 (varcte -> ctebool .)
    OR              reduce using rule 114 (varcte -> ctebool .)
    RPAREN          reduce using rule 114 (varcte -> ctebool .)
    COMMA           reduce using rule 114 (varcte -> ctebool .)
    SEMICOLON       reduce using rule 114 (varcte -> ctebool .)
    RSQBRACKET      reduce using rule 114 (varcte -> ctebool .)


state 52

    (28) leftparen -> LPAREN .

    LPAREN          reduce using rule 28 (leftparen -> LPAREN .)
    ID              reduce using rule 28 (leftparen -> LPAREN .)
    CTEINT          reduce using rule 28 (leftparen -> LPAREN .)
    CTEFLOAT        reduce using rule 28 (leftparen -> LPAREN .)
    CTECHAR         reduce using rule 28 (leftparen -> LPAREN .)
    CTESTRING       reduce using rule 28 (leftparen -> LPAREN .)
    TRUE            reduce using rule 28 (leftparen -> LPAREN .)
    FALSE           reduce using rule 28 (leftparen -> LPAREN .)


state 53

    (116) ctefloat -> CTEFLOAT .

    TIMES           reduce using rule 116 (ctefloat -> CTEFLOAT .)
    DIVIDE          reduce using rule 116 (ctefloat -> CTEFLOAT .)
    PLUS            reduce using rule 116 (ctefloat -> CTEFLOAT .)
    MINUS           reduce using rule 116 (ctefloat -> CTEFLOAT .)
    MORETHAN        reduce using rule 116 (ctefloat -> CTEFLOAT .)
    LESSTHAN        reduce using rule 116 (ctefloat -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 116 (ctefloat -> CTEFLOAT .)
    ISEQUALTO       reduce using rule 116 (ctefloat -> CTEFLOAT .)
    MORETHANEQUAL   reduce using rule 116 (ctefloat -> CTEFLOAT .)
    LESSTHANEQUAL   reduce using rule 116 (ctefloat -> CTEFLOAT .)
    AND             reduce using rule 116 (ctefloat -> CTEFLOAT .)
    OR              reduce using rule 116 (ctefloat -> CTEFLOAT .)
    COMMA           reduce using rule 116 (ctefloat -> CTEFLOAT .)
    RPAREN          reduce using rule 116 (ctefloat -> CTEFLOAT .)
    SEMICOLON       reduce using rule 116 (ctefloat -> CTEFLOAT .)
    RSQBRACKET      reduce using rule 116 (ctefloat -> CTEFLOAT .)


state 54

    (37) exp -> termino . masexp
    (38) masexp -> . addQPPM exp
    (39) masexp -> . empty
    (40) addQPPM -> . PLUS
    (41) addQPPM -> . MINUS
    (121) empty -> .

    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    MORETHAN        reduce using rule 121 (empty -> .)
    LESSTHAN        reduce using rule 121 (empty -> .)
    NOTEQUAL        reduce using rule 121 (empty -> .)
    ISEQUALTO       reduce using rule 121 (empty -> .)
    MORETHANEQUAL   reduce using rule 121 (empty -> .)
    LESSTHANEQUAL   reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    RSQBRACKET      reduce using rule 121 (empty -> .)

    empty                          shift and go to state 86
    masexp                         shift and go to state 87
    addQPPM                        shift and go to state 90

state 55

    (26) factor -> varid .

    TIMES           reduce using rule 26 (factor -> varid .)
    DIVIDE          reduce using rule 26 (factor -> varid .)
    PLUS            reduce using rule 26 (factor -> varid .)
    MINUS           reduce using rule 26 (factor -> varid .)
    MORETHAN        reduce using rule 26 (factor -> varid .)
    LESSTHAN        reduce using rule 26 (factor -> varid .)
    NOTEQUAL        reduce using rule 26 (factor -> varid .)
    ISEQUALTO       reduce using rule 26 (factor -> varid .)
    MORETHANEQUAL   reduce using rule 26 (factor -> varid .)
    LESSTHANEQUAL   reduce using rule 26 (factor -> varid .)
    AND             reduce using rule 26 (factor -> varid .)
    OR              reduce using rule 26 (factor -> varid .)
    COMMA           reduce using rule 26 (factor -> varid .)
    RPAREN          reduce using rule 26 (factor -> varid .)
    SEMICOLON       reduce using rule 26 (factor -> varid .)
    RSQBRACKET      reduce using rule 26 (factor -> varid .)


state 56

    (85) initvar -> ID EQUALS expresion .

    COMMA           reduce using rule 85 (initvar -> ID EQUALS expresion .)
    SEMICOLON       reduce using rule 85 (initvar -> ID EQUALS expresion .)


state 57

    (44) expresion -> expcomp . masexpresion
    (47) masexpresion -> . addQPAO expresion
    (48) masexpresion -> . empty
    (45) addQPAO -> . AND
    (46) addQPAO -> . OR
    (121) empty -> .

    AND             shift and go to state 94
    OR              shift and go to state 93
    COMMA           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    RSQBRACKET      reduce using rule 121 (empty -> .)

    masexpresion                   shift and go to state 91
    addQPAO                        shift and go to state 95
    empty                          shift and go to state 92

state 58

    (112) varcte -> ctechar .

    TIMES           reduce using rule 112 (varcte -> ctechar .)
    DIVIDE          reduce using rule 112 (varcte -> ctechar .)
    PLUS            reduce using rule 112 (varcte -> ctechar .)
    MINUS           reduce using rule 112 (varcte -> ctechar .)
    MORETHAN        reduce using rule 112 (varcte -> ctechar .)
    LESSTHAN        reduce using rule 112 (varcte -> ctechar .)
    NOTEQUAL        reduce using rule 112 (varcte -> ctechar .)
    ISEQUALTO       reduce using rule 112 (varcte -> ctechar .)
    MORETHANEQUAL   reduce using rule 112 (varcte -> ctechar .)
    LESSTHANEQUAL   reduce using rule 112 (varcte -> ctechar .)
    AND             reduce using rule 112 (varcte -> ctechar .)
    OR              reduce using rule 112 (varcte -> ctechar .)
    RPAREN          reduce using rule 112 (varcte -> ctechar .)
    COMMA           reduce using rule 112 (varcte -> ctechar .)
    SEMICOLON       reduce using rule 112 (varcte -> ctechar .)
    RSQBRACKET      reduce using rule 112 (varcte -> ctechar .)


state 59

    (24) factor -> leftparen . expresion rightparen
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 96
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 60

    (91) masid -> COMMA listaid .

    SEMICOLON       reduce using rule 91 (masid -> COMMA listaid .)


state 61

    (82) vars -> VAR tipo listaid SEMICOLON vars .

    COMMENT         reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    CPPCOMMENT      reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    ID              reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    IF              reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    READ            reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    VAR             reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    WHILE           reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    PRINT           reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    RBRACKET        reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    RETURN          reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    FUNCTION        reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    MAIN            reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)
    ELSE            reduce using rule 82 (vars -> VAR tipo listaid SEMICOLON vars .)


state 62

    (9) bloque -> LBRACKET . masestatuto RBRACKET
    (80) masestatuto -> . estatuto masestatuto
    (81) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (121) empty -> .
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    RBRACKET        reduce using rule 121 (empty -> .)
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    estatuto                       shift and go to state 100
    print                          shift and go to state 102
    lectura                        shift and go to state 99
    while                          shift and go to state 106
    masestatuto                    shift and go to state 110
    escritura                      shift and go to state 108
    idarray                        shift and go to state 105
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 113
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 63

    (1) programa -> prog ID SEMICOLON vars eramain funcs main bloque .

    $end            reduce using rule 1 (programa -> prog ID SEMICOLON vars eramain funcs main bloque .)


state 64

    (99) funcaux -> tipo ID .

    LPAREN          reduce using rule 99 (funcaux -> tipo ID .)


state 65

    (93) funcs -> FUNCTION funcaux LPAREN . args masargs RPAREN bloquefunc funcs
    (94) funcs -> FUNCTION funcaux LPAREN . RPAREN bloquefunc funcs
    (100) args -> . tipo ID
    (101) args -> . empty
    (104) tipo -> . INT
    (105) tipo -> . FLOAT
    (106) tipo -> . CHAR
    (107) tipo -> . BOOL
    (108) tipo -> . STRING
    (109) tipo -> . VOID
    (121) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 118
    INT             shift and go to state 15
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14
    VOID            shift and go to state 11
    COMMA           reduce using rule 121 (empty -> .)

  ! RPAREN          [ reduce using rule 121 (empty -> .) ]

    empty                          shift and go to state 119
    tipo                           shift and go to state 117
    args                           shift and go to state 120

state 66

    (86) initvar -> ID LSQBRACKET dims RSQBRACKET .

    COMMA           reduce using rule 86 (initvar -> ID LSQBRACKET dims RSQBRACKET .)
    SEMICOLON       reduce using rule 86 (initvar -> ID LSQBRACKET dims RSQBRACKET .)


state 67

    (89) masdims -> COMMA . dims
    (88) dims -> . CTEINT masdims

    CTEINT          shift and go to state 35

    dims                           shift and go to state 121

state 68

    (90) masdims -> empty .

    RSQBRACKET      reduce using rule 90 (masdims -> empty .)


state 69

    (88) dims -> CTEINT masdims .

    RSQBRACKET      reduce using rule 88 (dims -> CTEINT masdims .)


state 70

    (53) masterminos -> empty .

    PLUS            reduce using rule 53 (masterminos -> empty .)
    MINUS           reduce using rule 53 (masterminos -> empty .)
    MORETHAN        reduce using rule 53 (masterminos -> empty .)
    LESSTHAN        reduce using rule 53 (masterminos -> empty .)
    NOTEQUAL        reduce using rule 53 (masterminos -> empty .)
    ISEQUALTO       reduce using rule 53 (masterminos -> empty .)
    MORETHANEQUAL   reduce using rule 53 (masterminos -> empty .)
    LESSTHANEQUAL   reduce using rule 53 (masterminos -> empty .)
    AND             reduce using rule 53 (masterminos -> empty .)
    OR              reduce using rule 53 (masterminos -> empty .)
    COMMA           reduce using rule 53 (masterminos -> empty .)
    SEMICOLON       reduce using rule 53 (masterminos -> empty .)
    RPAREN          reduce using rule 53 (masterminos -> empty .)
    RSQBRACKET      reduce using rule 53 (masterminos -> empty .)


state 71

    (49) termino -> factor masterminos .

    PLUS            reduce using rule 49 (termino -> factor masterminos .)
    MINUS           reduce using rule 49 (termino -> factor masterminos .)
    MORETHAN        reduce using rule 49 (termino -> factor masterminos .)
    LESSTHAN        reduce using rule 49 (termino -> factor masterminos .)
    NOTEQUAL        reduce using rule 49 (termino -> factor masterminos .)
    ISEQUALTO       reduce using rule 49 (termino -> factor masterminos .)
    MORETHANEQUAL   reduce using rule 49 (termino -> factor masterminos .)
    LESSTHANEQUAL   reduce using rule 49 (termino -> factor masterminos .)
    AND             reduce using rule 49 (termino -> factor masterminos .)
    OR              reduce using rule 49 (termino -> factor masterminos .)
    COMMA           reduce using rule 49 (termino -> factor masterminos .)
    SEMICOLON       reduce using rule 49 (termino -> factor masterminos .)
    RSQBRACKET      reduce using rule 49 (termino -> factor masterminos .)
    RPAREN          reduce using rule 49 (termino -> factor masterminos .)


state 72

    (51) addQTD -> DIVIDE .

    LPAREN          reduce using rule 51 (addQTD -> DIVIDE .)
    ID              reduce using rule 51 (addQTD -> DIVIDE .)
    CTEINT          reduce using rule 51 (addQTD -> DIVIDE .)
    CTEFLOAT        reduce using rule 51 (addQTD -> DIVIDE .)
    CTECHAR         reduce using rule 51 (addQTD -> DIVIDE .)
    CTESTRING       reduce using rule 51 (addQTD -> DIVIDE .)
    TRUE            reduce using rule 51 (addQTD -> DIVIDE .)
    FALSE           reduce using rule 51 (addQTD -> DIVIDE .)


state 73

    (52) masterminos -> addQTD . termino
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    cteint                         shift and go to state 38
    ctestring                      shift and go to state 41
    ctefloat                       shift and go to state 37
    factor                         shift and go to state 40
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    idarray                        shift and go to state 46
    ctechar                        shift and go to state 58
    termino                        shift and go to state 122
    varid                          shift and go to state 55
    leftparen                      shift and go to state 59

state 74

    (50) addQTD -> TIMES .

    LPAREN          reduce using rule 50 (addQTD -> TIMES .)
    ID              reduce using rule 50 (addQTD -> TIMES .)
    CTEINT          reduce using rule 50 (addQTD -> TIMES .)
    CTEFLOAT        reduce using rule 50 (addQTD -> TIMES .)
    CTECHAR         reduce using rule 50 (addQTD -> TIMES .)
    CTESTRING       reduce using rule 50 (addQTD -> TIMES .)
    TRUE            reduce using rule 50 (addQTD -> TIMES .)
    FALSE           reduce using rule 50 (addQTD -> TIMES .)


state 75

    (62) expcompcontinuo -> empty .

    AND             reduce using rule 62 (expcompcontinuo -> empty .)
    OR              reduce using rule 62 (expcompcontinuo -> empty .)
    COMMA           reduce using rule 62 (expcompcontinuo -> empty .)
    SEMICOLON       reduce using rule 62 (expcompcontinuo -> empty .)
    RPAREN          reduce using rule 62 (expcompcontinuo -> empty .)
    RSQBRACKET      reduce using rule 62 (expcompcontinuo -> empty .)


state 76

    (58) addQPComp -> ISEQUALTO .

    LPAREN          reduce using rule 58 (addQPComp -> ISEQUALTO .)
    ID              reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTEINT          reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTEFLOAT        reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTECHAR         reduce using rule 58 (addQPComp -> ISEQUALTO .)
    CTESTRING       reduce using rule 58 (addQPComp -> ISEQUALTO .)
    TRUE            reduce using rule 58 (addQPComp -> ISEQUALTO .)
    FALSE           reduce using rule 58 (addQPComp -> ISEQUALTO .)


state 77

    (61) expcompcontinuo -> addQPComp . expcomp
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    cteint                         shift and go to state 38
    ctefloat                       shift and go to state 37
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 123

state 78

    (60) addQPComp -> LESSTHANEQUAL .

    LPAREN          reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    ID              reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTEINT          reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTEFLOAT        reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTECHAR         reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    CTESTRING       reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    TRUE            reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)
    FALSE           reduce using rule 60 (addQPComp -> LESSTHANEQUAL .)


state 79

    (56) addQPComp -> LESSTHAN .

    LPAREN          reduce using rule 56 (addQPComp -> LESSTHAN .)
    ID              reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTEINT          reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTEFLOAT        reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTECHAR         reduce using rule 56 (addQPComp -> LESSTHAN .)
    CTESTRING       reduce using rule 56 (addQPComp -> LESSTHAN .)
    TRUE            reduce using rule 56 (addQPComp -> LESSTHAN .)
    FALSE           reduce using rule 56 (addQPComp -> LESSTHAN .)


state 80

    (59) addQPComp -> MORETHANEQUAL .

    LPAREN          reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    ID              reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTEINT          reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTEFLOAT        reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTECHAR         reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    CTESTRING       reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    TRUE            reduce using rule 59 (addQPComp -> MORETHANEQUAL .)
    FALSE           reduce using rule 59 (addQPComp -> MORETHANEQUAL .)


state 81

    (55) addQPComp -> MORETHAN .

    LPAREN          reduce using rule 55 (addQPComp -> MORETHAN .)
    ID              reduce using rule 55 (addQPComp -> MORETHAN .)
    CTEINT          reduce using rule 55 (addQPComp -> MORETHAN .)
    CTEFLOAT        reduce using rule 55 (addQPComp -> MORETHAN .)
    CTECHAR         reduce using rule 55 (addQPComp -> MORETHAN .)
    CTESTRING       reduce using rule 55 (addQPComp -> MORETHAN .)
    TRUE            reduce using rule 55 (addQPComp -> MORETHAN .)
    FALSE           reduce using rule 55 (addQPComp -> MORETHAN .)


state 82

    (54) expcomp -> exp expcompcontinuo .

    AND             reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    OR              reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    COMMA           reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    RPAREN          reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    RSQBRACKET      reduce using rule 54 (expcomp -> exp expcompcontinuo .)
    SEMICOLON       reduce using rule 54 (expcomp -> exp expcompcontinuo .)


state 83

    (57) addQPComp -> NOTEQUAL .

    LPAREN          reduce using rule 57 (addQPComp -> NOTEQUAL .)
    ID              reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTEINT          reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTECHAR         reduce using rule 57 (addQPComp -> NOTEQUAL .)
    CTESTRING       reduce using rule 57 (addQPComp -> NOTEQUAL .)
    TRUE            reduce using rule 57 (addQPComp -> NOTEQUAL .)
    FALSE           reduce using rule 57 (addQPComp -> NOTEQUAL .)


state 84

    (31) varid -> idarray LSQBRACKET . dimsvar RSQBRACKET
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    idarray                        shift and go to state 46
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    expdimvar                      shift and go to state 124
    ctefloat                       shift and go to state 37
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    dimsvar                        shift and go to state 125
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 126
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 85

    (73) llamafunc -> idfunc LPAREN . funcargs RPAREN
    (75) funcargs -> . expresion listafuncargs checarparams
    (76) funcargs -> . empty
    (44) expresion -> . expcomp masexpresion
    (121) empty -> .
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    RPAREN          reduce using rule 121 (empty -> .)
    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    termino                        shift and go to state 54
    cteint                         shift and go to state 38
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    empty                          shift and go to state 128
    ctechar                        shift and go to state 58
    funcargs                       shift and go to state 127
    factor                         shift and go to state 40
    varid                          shift and go to state 55
    expresion                      shift and go to state 129
    expcomp                        shift and go to state 57
    leftparen                      shift and go to state 59

state 86

    (39) masexp -> empty .

    MORETHAN        reduce using rule 39 (masexp -> empty .)
    LESSTHAN        reduce using rule 39 (masexp -> empty .)
    NOTEQUAL        reduce using rule 39 (masexp -> empty .)
    ISEQUALTO       reduce using rule 39 (masexp -> empty .)
    MORETHANEQUAL   reduce using rule 39 (masexp -> empty .)
    LESSTHANEQUAL   reduce using rule 39 (masexp -> empty .)
    AND             reduce using rule 39 (masexp -> empty .)
    OR              reduce using rule 39 (masexp -> empty .)
    COMMA           reduce using rule 39 (masexp -> empty .)
    SEMICOLON       reduce using rule 39 (masexp -> empty .)
    RPAREN          reduce using rule 39 (masexp -> empty .)
    RSQBRACKET      reduce using rule 39 (masexp -> empty .)


state 87

    (37) exp -> termino masexp .

    MORETHAN        reduce using rule 37 (exp -> termino masexp .)
    LESSTHAN        reduce using rule 37 (exp -> termino masexp .)
    NOTEQUAL        reduce using rule 37 (exp -> termino masexp .)
    ISEQUALTO       reduce using rule 37 (exp -> termino masexp .)
    MORETHANEQUAL   reduce using rule 37 (exp -> termino masexp .)
    LESSTHANEQUAL   reduce using rule 37 (exp -> termino masexp .)
    AND             reduce using rule 37 (exp -> termino masexp .)
    OR              reduce using rule 37 (exp -> termino masexp .)
    COMMA           reduce using rule 37 (exp -> termino masexp .)
    RPAREN          reduce using rule 37 (exp -> termino masexp .)
    SEMICOLON       reduce using rule 37 (exp -> termino masexp .)
    RSQBRACKET      reduce using rule 37 (exp -> termino masexp .)


state 88

    (40) addQPPM -> PLUS .

    LPAREN          reduce using rule 40 (addQPPM -> PLUS .)
    ID              reduce using rule 40 (addQPPM -> PLUS .)
    CTEINT          reduce using rule 40 (addQPPM -> PLUS .)
    CTEFLOAT        reduce using rule 40 (addQPPM -> PLUS .)
    CTECHAR         reduce using rule 40 (addQPPM -> PLUS .)
    CTESTRING       reduce using rule 40 (addQPPM -> PLUS .)
    TRUE            reduce using rule 40 (addQPPM -> PLUS .)
    FALSE           reduce using rule 40 (addQPPM -> PLUS .)


state 89

    (41) addQPPM -> MINUS .

    LPAREN          reduce using rule 41 (addQPPM -> MINUS .)
    ID              reduce using rule 41 (addQPPM -> MINUS .)
    CTEINT          reduce using rule 41 (addQPPM -> MINUS .)
    CTEFLOAT        reduce using rule 41 (addQPPM -> MINUS .)
    CTECHAR         reduce using rule 41 (addQPPM -> MINUS .)
    CTESTRING       reduce using rule 41 (addQPPM -> MINUS .)
    TRUE            reduce using rule 41 (addQPPM -> MINUS .)
    FALSE           reduce using rule 41 (addQPPM -> MINUS .)


state 90

    (38) masexp -> addQPPM . exp
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    cteint                         shift and go to state 38
    ctestring                      shift and go to state 41
    ctefloat                       shift and go to state 37
    termino                        shift and go to state 54
    idarray                        shift and go to state 46
    factor                         shift and go to state 40
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    ctechar                        shift and go to state 58
    exp                            shift and go to state 130
    varid                          shift and go to state 55
    leftparen                      shift and go to state 59

state 91

    (44) expresion -> expcomp masexpresion .

    RPAREN          reduce using rule 44 (expresion -> expcomp masexpresion .)
    SEMICOLON       reduce using rule 44 (expresion -> expcomp masexpresion .)
    COMMA           reduce using rule 44 (expresion -> expcomp masexpresion .)
    RSQBRACKET      reduce using rule 44 (expresion -> expcomp masexpresion .)


state 92

    (48) masexpresion -> empty .

    COMMA           reduce using rule 48 (masexpresion -> empty .)
    SEMICOLON       reduce using rule 48 (masexpresion -> empty .)
    RPAREN          reduce using rule 48 (masexpresion -> empty .)
    RSQBRACKET      reduce using rule 48 (masexpresion -> empty .)


state 93

    (46) addQPAO -> OR .

    LPAREN          reduce using rule 46 (addQPAO -> OR .)
    ID              reduce using rule 46 (addQPAO -> OR .)
    CTEINT          reduce using rule 46 (addQPAO -> OR .)
    CTEFLOAT        reduce using rule 46 (addQPAO -> OR .)
    CTECHAR         reduce using rule 46 (addQPAO -> OR .)
    CTESTRING       reduce using rule 46 (addQPAO -> OR .)
    TRUE            reduce using rule 46 (addQPAO -> OR .)
    FALSE           reduce using rule 46 (addQPAO -> OR .)


state 94

    (45) addQPAO -> AND .

    LPAREN          reduce using rule 45 (addQPAO -> AND .)
    ID              reduce using rule 45 (addQPAO -> AND .)
    CTEINT          reduce using rule 45 (addQPAO -> AND .)
    CTEFLOAT        reduce using rule 45 (addQPAO -> AND .)
    CTECHAR         reduce using rule 45 (addQPAO -> AND .)
    CTESTRING       reduce using rule 45 (addQPAO -> AND .)
    TRUE            reduce using rule 45 (addQPAO -> AND .)
    FALSE           reduce using rule 45 (addQPAO -> AND .)


state 95

    (47) masexpresion -> addQPAO . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 131
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 96

    (24) factor -> leftparen expresion . rightparen
    (29) rightparen -> . RPAREN

    RPAREN          shift and go to state 132

    rightparen                     shift and go to state 133

state 97

    (70) estatuto -> COMMENT .

    COMMENT         reduce using rule 70 (estatuto -> COMMENT .)
    CPPCOMMENT      reduce using rule 70 (estatuto -> COMMENT .)
    ID              reduce using rule 70 (estatuto -> COMMENT .)
    IF              reduce using rule 70 (estatuto -> COMMENT .)
    READ            reduce using rule 70 (estatuto -> COMMENT .)
    VAR             reduce using rule 70 (estatuto -> COMMENT .)
    WHILE           reduce using rule 70 (estatuto -> COMMENT .)
    PRINT           reduce using rule 70 (estatuto -> COMMENT .)
    RBRACKET        reduce using rule 70 (estatuto -> COMMENT .)
    RETURN          reduce using rule 70 (estatuto -> COMMENT .)
    ELSE            reduce using rule 70 (estatuto -> COMMENT .)


state 98

    (64) estatuto -> condicion .

    COMMENT         reduce using rule 64 (estatuto -> condicion .)
    CPPCOMMENT      reduce using rule 64 (estatuto -> condicion .)
    ID              reduce using rule 64 (estatuto -> condicion .)
    IF              reduce using rule 64 (estatuto -> condicion .)
    READ            reduce using rule 64 (estatuto -> condicion .)
    VAR             reduce using rule 64 (estatuto -> condicion .)
    WHILE           reduce using rule 64 (estatuto -> condicion .)
    PRINT           reduce using rule 64 (estatuto -> condicion .)
    RBRACKET        reduce using rule 64 (estatuto -> condicion .)
    RETURN          reduce using rule 64 (estatuto -> condicion .)
    ELSE            reduce using rule 64 (estatuto -> condicion .)


state 99

    (67) estatuto -> lectura .

    COMMENT         reduce using rule 67 (estatuto -> lectura .)
    CPPCOMMENT      reduce using rule 67 (estatuto -> lectura .)
    ID              reduce using rule 67 (estatuto -> lectura .)
    IF              reduce using rule 67 (estatuto -> lectura .)
    READ            reduce using rule 67 (estatuto -> lectura .)
    VAR             reduce using rule 67 (estatuto -> lectura .)
    WHILE           reduce using rule 67 (estatuto -> lectura .)
    PRINT           reduce using rule 67 (estatuto -> lectura .)
    RBRACKET        reduce using rule 67 (estatuto -> lectura .)
    RETURN          reduce using rule 67 (estatuto -> lectura .)
    ELSE            reduce using rule 67 (estatuto -> lectura .)


state 100

    (80) masestatuto -> estatuto . masestatuto
    (80) masestatuto -> . estatuto masestatuto
    (81) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (121) empty -> .
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    estatuto                       shift and go to state 100
    print                          shift and go to state 102
    lectura                        shift and go to state 99
    while                          shift and go to state 106
    masestatuto                    shift and go to state 134
    escritura                      shift and go to state 108
    idarray                        shift and go to state 105
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 113
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 101

    (16) print -> PRINT .

    LPAREN          reduce using rule 16 (print -> PRINT .)


state 102

    (15) escritura -> print . LPAREN listaprint RPAREN SEMICOLON

    LPAREN          shift and go to state 135


state 103

    (72) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 136


state 104

    (14) while -> WHILE .

    LPAREN          reduce using rule 14 (while -> WHILE .)


state 105

    (23) asignacion -> idarray . LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON

    LSQBRACKET      shift and go to state 137


state 106

    (13) ciclo -> while . LPAREN expresion RPAREN gotoF estatutobloque goto

    LPAREN          shift and go to state 138


state 107

    (5) condicion -> IF . LPAREN expresion RPAREN gotoF estatutobloque masbloque

    LPAREN          shift and go to state 139


state 108

    (66) estatuto -> escritura .

    COMMENT         reduce using rule 66 (estatuto -> escritura .)
    CPPCOMMENT      reduce using rule 66 (estatuto -> escritura .)
    ID              reduce using rule 66 (estatuto -> escritura .)
    IF              reduce using rule 66 (estatuto -> escritura .)
    READ            reduce using rule 66 (estatuto -> escritura .)
    VAR             reduce using rule 66 (estatuto -> escritura .)
    WHILE           reduce using rule 66 (estatuto -> escritura .)
    PRINT           reduce using rule 66 (estatuto -> escritura .)
    RBRACKET        reduce using rule 66 (estatuto -> escritura .)
    RETURN          reduce using rule 66 (estatuto -> escritura .)
    ELSE            reduce using rule 66 (estatuto -> escritura .)


state 109

    (22) asignacion -> ID . EQUALS expresion SEMICOLON
    (32) idarray -> ID .
    (74) idfunc -> ID .

    EQUALS          shift and go to state 140
    LSQBRACKET      reduce using rule 32 (idarray -> ID .)
    LPAREN          reduce using rule 74 (idfunc -> ID .)


state 110

    (9) bloque -> LBRACKET masestatuto . RBRACKET

    RBRACKET        shift and go to state 141


state 111

    (69) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 142


state 112

    (65) estatuto -> ciclo .

    COMMENT         reduce using rule 65 (estatuto -> ciclo .)
    CPPCOMMENT      reduce using rule 65 (estatuto -> ciclo .)
    ID              reduce using rule 65 (estatuto -> ciclo .)
    IF              reduce using rule 65 (estatuto -> ciclo .)
    READ            reduce using rule 65 (estatuto -> ciclo .)
    VAR             reduce using rule 65 (estatuto -> ciclo .)
    WHILE           reduce using rule 65 (estatuto -> ciclo .)
    PRINT           reduce using rule 65 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 65 (estatuto -> ciclo .)
    RETURN          reduce using rule 65 (estatuto -> ciclo .)
    ELSE            reduce using rule 65 (estatuto -> ciclo .)


state 113

    (81) masestatuto -> empty .
    (83) vars -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (masestatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 81 (masestatuto -> empty .)
    RETURN          reduce using rule 81 (masestatuto -> empty .)
    RBRACKET        reduce using rule 81 (masestatuto -> empty .)
    COMMENT         reduce using rule 83 (vars -> empty .)
    CPPCOMMENT      reduce using rule 83 (vars -> empty .)
    ID              reduce using rule 83 (vars -> empty .)
    IF              reduce using rule 83 (vars -> empty .)
    READ            reduce using rule 83 (vars -> empty .)
    VAR             reduce using rule 83 (vars -> empty .)
    WHILE           reduce using rule 83 (vars -> empty .)
    PRINT           reduce using rule 83 (vars -> empty .)

  ! RBRACKET        [ reduce using rule 83 (vars -> empty .) ]
  ! RETURN          [ reduce using rule 83 (vars -> empty .) ]


state 114

    (68) estatuto -> vars .

    COMMENT         reduce using rule 68 (estatuto -> vars .)
    CPPCOMMENT      reduce using rule 68 (estatuto -> vars .)
    ID              reduce using rule 68 (estatuto -> vars .)
    IF              reduce using rule 68 (estatuto -> vars .)
    READ            reduce using rule 68 (estatuto -> vars .)
    VAR             reduce using rule 68 (estatuto -> vars .)
    WHILE           reduce using rule 68 (estatuto -> vars .)
    PRINT           reduce using rule 68 (estatuto -> vars .)
    RBRACKET        reduce using rule 68 (estatuto -> vars .)
    RETURN          reduce using rule 68 (estatuto -> vars .)
    ELSE            reduce using rule 68 (estatuto -> vars .)


state 115

    (71) estatuto -> CPPCOMMENT .

    COMMENT         reduce using rule 71 (estatuto -> CPPCOMMENT .)
    CPPCOMMENT      reduce using rule 71 (estatuto -> CPPCOMMENT .)
    ID              reduce using rule 71 (estatuto -> CPPCOMMENT .)
    IF              reduce using rule 71 (estatuto -> CPPCOMMENT .)
    READ            reduce using rule 71 (estatuto -> CPPCOMMENT .)
    VAR             reduce using rule 71 (estatuto -> CPPCOMMENT .)
    WHILE           reduce using rule 71 (estatuto -> CPPCOMMENT .)
    PRINT           reduce using rule 71 (estatuto -> CPPCOMMENT .)
    RBRACKET        reduce using rule 71 (estatuto -> CPPCOMMENT .)
    RETURN          reduce using rule 71 (estatuto -> CPPCOMMENT .)
    ELSE            reduce using rule 71 (estatuto -> CPPCOMMENT .)


state 116

    (63) estatuto -> asignacion .

    COMMENT         reduce using rule 63 (estatuto -> asignacion .)
    CPPCOMMENT      reduce using rule 63 (estatuto -> asignacion .)
    ID              reduce using rule 63 (estatuto -> asignacion .)
    IF              reduce using rule 63 (estatuto -> asignacion .)
    READ            reduce using rule 63 (estatuto -> asignacion .)
    VAR             reduce using rule 63 (estatuto -> asignacion .)
    WHILE           reduce using rule 63 (estatuto -> asignacion .)
    PRINT           reduce using rule 63 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 63 (estatuto -> asignacion .)
    RETURN          reduce using rule 63 (estatuto -> asignacion .)
    ELSE            reduce using rule 63 (estatuto -> asignacion .)


state 117

    (100) args -> tipo . ID

    ID              shift and go to state 143


state 118

    (94) funcs -> FUNCTION funcaux LPAREN RPAREN . bloquefunc funcs
    (96) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 145

    bloquefunc                     shift and go to state 144

state 119

    (101) args -> empty .

    COMMA           reduce using rule 101 (args -> empty .)
    RPAREN          reduce using rule 101 (args -> empty .)


state 120

    (93) funcs -> FUNCTION funcaux LPAREN args . masargs RPAREN bloquefunc funcs
    (102) masargs -> . COMMA args masargs
    (103) masargs -> . empty
    (121) empty -> .

    COMMA           shift and go to state 148
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 147
    masargs                        shift and go to state 146

state 121

    (89) masdims -> COMMA dims .

    RSQBRACKET      reduce using rule 89 (masdims -> COMMA dims .)


state 122

    (52) masterminos -> addQTD termino .

    PLUS            reduce using rule 52 (masterminos -> addQTD termino .)
    MINUS           reduce using rule 52 (masterminos -> addQTD termino .)
    MORETHAN        reduce using rule 52 (masterminos -> addQTD termino .)
    LESSTHAN        reduce using rule 52 (masterminos -> addQTD termino .)
    NOTEQUAL        reduce using rule 52 (masterminos -> addQTD termino .)
    ISEQUALTO       reduce using rule 52 (masterminos -> addQTD termino .)
    MORETHANEQUAL   reduce using rule 52 (masterminos -> addQTD termino .)
    LESSTHANEQUAL   reduce using rule 52 (masterminos -> addQTD termino .)
    AND             reduce using rule 52 (masterminos -> addQTD termino .)
    OR              reduce using rule 52 (masterminos -> addQTD termino .)
    COMMA           reduce using rule 52 (masterminos -> addQTD termino .)
    SEMICOLON       reduce using rule 52 (masterminos -> addQTD termino .)
    RPAREN          reduce using rule 52 (masterminos -> addQTD termino .)
    RSQBRACKET      reduce using rule 52 (masterminos -> addQTD termino .)


state 123

    (61) expcompcontinuo -> addQPComp expcomp .

    AND             reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    OR              reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    COMMA           reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    SEMICOLON       reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    RPAREN          reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)
    RSQBRACKET      reduce using rule 61 (expcompcontinuo -> addQPComp expcomp .)


state 124

    (33) dimsvar -> expdimvar . masdimsvar
    (35) masdimsvar -> . COMMA dimsvar
    (36) masdimsvar -> . empty
    (121) empty -> .

    COMMA           shift and go to state 149
    RSQBRACKET      reduce using rule 121 (empty -> .)

    empty                          shift and go to state 151
    masdimsvar                     shift and go to state 150

state 125

    (31) varid -> idarray LSQBRACKET dimsvar . RSQBRACKET

    RSQBRACKET      shift and go to state 152


state 126

    (34) expdimvar -> expresion .

    COMMA           reduce using rule 34 (expdimvar -> expresion .)
    RSQBRACKET      reduce using rule 34 (expdimvar -> expresion .)


state 127

    (73) llamafunc -> idfunc LPAREN funcargs . RPAREN

    RPAREN          shift and go to state 153


state 128

    (76) funcargs -> empty .

    RPAREN          reduce using rule 76 (funcargs -> empty .)


state 129

    (75) funcargs -> expresion . listafuncargs checarparams
    (77) listafuncargs -> . COMMA expresion listafuncargs
    (78) listafuncargs -> . empty
    (121) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 156
    listafuncargs                  shift and go to state 155

state 130

    (38) masexp -> addQPPM exp .

    MORETHAN        reduce using rule 38 (masexp -> addQPPM exp .)
    LESSTHAN        reduce using rule 38 (masexp -> addQPPM exp .)
    NOTEQUAL        reduce using rule 38 (masexp -> addQPPM exp .)
    ISEQUALTO       reduce using rule 38 (masexp -> addQPPM exp .)
    MORETHANEQUAL   reduce using rule 38 (masexp -> addQPPM exp .)
    LESSTHANEQUAL   reduce using rule 38 (masexp -> addQPPM exp .)
    AND             reduce using rule 38 (masexp -> addQPPM exp .)
    OR              reduce using rule 38 (masexp -> addQPPM exp .)
    COMMA           reduce using rule 38 (masexp -> addQPPM exp .)
    SEMICOLON       reduce using rule 38 (masexp -> addQPPM exp .)
    RPAREN          reduce using rule 38 (masexp -> addQPPM exp .)
    RSQBRACKET      reduce using rule 38 (masexp -> addQPPM exp .)


state 131

    (47) masexpresion -> addQPAO expresion .

    COMMA           reduce using rule 47 (masexpresion -> addQPAO expresion .)
    SEMICOLON       reduce using rule 47 (masexpresion -> addQPAO expresion .)
    RPAREN          reduce using rule 47 (masexpresion -> addQPAO expresion .)
    RSQBRACKET      reduce using rule 47 (masexpresion -> addQPAO expresion .)


state 132

    (29) rightparen -> RPAREN .

    TIMES           reduce using rule 29 (rightparen -> RPAREN .)
    DIVIDE          reduce using rule 29 (rightparen -> RPAREN .)
    PLUS            reduce using rule 29 (rightparen -> RPAREN .)
    MINUS           reduce using rule 29 (rightparen -> RPAREN .)
    MORETHAN        reduce using rule 29 (rightparen -> RPAREN .)
    LESSTHAN        reduce using rule 29 (rightparen -> RPAREN .)
    NOTEQUAL        reduce using rule 29 (rightparen -> RPAREN .)
    ISEQUALTO       reduce using rule 29 (rightparen -> RPAREN .)
    MORETHANEQUAL   reduce using rule 29 (rightparen -> RPAREN .)
    LESSTHANEQUAL   reduce using rule 29 (rightparen -> RPAREN .)
    AND             reduce using rule 29 (rightparen -> RPAREN .)
    OR              reduce using rule 29 (rightparen -> RPAREN .)
    COMMA           reduce using rule 29 (rightparen -> RPAREN .)
    SEMICOLON       reduce using rule 29 (rightparen -> RPAREN .)
    RPAREN          reduce using rule 29 (rightparen -> RPAREN .)
    RSQBRACKET      reduce using rule 29 (rightparen -> RPAREN .)


state 133

    (24) factor -> leftparen expresion rightparen .

    TIMES           reduce using rule 24 (factor -> leftparen expresion rightparen .)
    DIVIDE          reduce using rule 24 (factor -> leftparen expresion rightparen .)
    PLUS            reduce using rule 24 (factor -> leftparen expresion rightparen .)
    MINUS           reduce using rule 24 (factor -> leftparen expresion rightparen .)
    MORETHAN        reduce using rule 24 (factor -> leftparen expresion rightparen .)
    LESSTHAN        reduce using rule 24 (factor -> leftparen expresion rightparen .)
    NOTEQUAL        reduce using rule 24 (factor -> leftparen expresion rightparen .)
    ISEQUALTO       reduce using rule 24 (factor -> leftparen expresion rightparen .)
    MORETHANEQUAL   reduce using rule 24 (factor -> leftparen expresion rightparen .)
    LESSTHANEQUAL   reduce using rule 24 (factor -> leftparen expresion rightparen .)
    AND             reduce using rule 24 (factor -> leftparen expresion rightparen .)
    OR              reduce using rule 24 (factor -> leftparen expresion rightparen .)
    COMMA           reduce using rule 24 (factor -> leftparen expresion rightparen .)
    RPAREN          reduce using rule 24 (factor -> leftparen expresion rightparen .)
    SEMICOLON       reduce using rule 24 (factor -> leftparen expresion rightparen .)
    RSQBRACKET      reduce using rule 24 (factor -> leftparen expresion rightparen .)


state 134

    (80) masestatuto -> estatuto masestatuto .

    RETURN          reduce using rule 80 (masestatuto -> estatuto masestatuto .)
    RBRACKET        reduce using rule 80 (masestatuto -> estatuto masestatuto .)


state 135

    (15) escritura -> print LPAREN . listaprint RPAREN SEMICOLON
    (17) listaprint -> . expresion masprint
    (18) listaprint -> . ctestring masprint
    (44) expresion -> . expcomp masexpresion
    (118) ctestring -> . CTESTRING
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    CTESTRING       shift and go to state 45
    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    ctestring                      shift and go to state 157
    exp                            shift and go to state 42
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 158
    listaprint                     shift and go to state 159
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 136

    (72) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 160


state 137

    (23) asignacion -> idarray LSQBRACKET . dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    idarray                        shift and go to state 46
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    expdimvar                      shift and go to state 124
    ctefloat                       shift and go to state 37
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    dimsvar                        shift and go to state 161
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 126
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 138

    (13) ciclo -> while LPAREN . expresion RPAREN gotoF estatutobloque goto
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    exp                            shift and go to state 42
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    ctestring                      shift and go to state 41
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 162
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 139

    (5) condicion -> IF LPAREN . expresion RPAREN gotoF estatutobloque masbloque
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 163
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 140

    (22) asignacion -> ID EQUALS . expresion SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 164
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 141

    (9) bloque -> LBRACKET masestatuto RBRACKET .

    COMMENT         reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    CPPCOMMENT      reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    ID              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    IF              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    READ            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    VAR             reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    WHILE           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    PRINT           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RBRACKET        reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RETURN          reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    ELSE            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    $end            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)


state 142

    (69) estatuto -> llamafunc SEMICOLON .

    COMMENT         reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    CPPCOMMENT      reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    READ            reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    VAR             reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    RBRACKET        reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    RETURN          reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    ELSE            reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)


state 143

    (100) args -> tipo ID .

    COMMA           reduce using rule 100 (args -> tipo ID .)
    RPAREN          reduce using rule 100 (args -> tipo ID .)


state 144

    (94) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc . funcs
    (93) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (94) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (95) funcs -> . empty
    (121) empty -> .

    FUNCTION        shift and go to state 23
    MAIN            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 21
    funcs                          shift and go to state 165

state 145

    (96) bloquefunc -> LBRACKET . masestatuto retorno RBRACKET
    (80) masestatuto -> . estatuto masestatuto
    (81) masestatuto -> . empty
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (121) empty -> .
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    RETURN          reduce using rule 121 (empty -> .)
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    lectura                        shift and go to state 99
    estatuto                       shift and go to state 100
    print                          shift and go to state 102
    idarray                        shift and go to state 105
    while                          shift and go to state 106
    masestatuto                    shift and go to state 166
    escritura                      shift and go to state 108
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 113
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 146

    (93) funcs -> FUNCTION funcaux LPAREN args masargs . RPAREN bloquefunc funcs

    RPAREN          shift and go to state 167


state 147

    (103) masargs -> empty .

    RPAREN          reduce using rule 103 (masargs -> empty .)


state 148

    (102) masargs -> COMMA . args masargs
    (100) args -> . tipo ID
    (101) args -> . empty
    (104) tipo -> . INT
    (105) tipo -> . FLOAT
    (106) tipo -> . CHAR
    (107) tipo -> . BOOL
    (108) tipo -> . STRING
    (109) tipo -> . VOID
    (121) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14
    VOID            shift and go to state 11
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 119
    tipo                           shift and go to state 117
    args                           shift and go to state 168

state 149

    (35) masdimsvar -> COMMA . dimsvar
    (33) dimsvar -> . expdimvar masdimsvar
    (34) expdimvar -> . expresion
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    expdimvar                      shift and go to state 124
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    dimsvar                        shift and go to state 169
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 126
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 150

    (33) dimsvar -> expdimvar masdimsvar .

    RSQBRACKET      reduce using rule 33 (dimsvar -> expdimvar masdimsvar .)


state 151

    (36) masdimsvar -> empty .

    RSQBRACKET      reduce using rule 36 (masdimsvar -> empty .)


state 152

    (31) varid -> idarray LSQBRACKET dimsvar RSQBRACKET .

    TIMES           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    DIVIDE          reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    PLUS            reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MINUS           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHAN        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHAN        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    NOTEQUAL        reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    ISEQUALTO       reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHANEQUAL   reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHANEQUAL   reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    AND             reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    OR              reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    COMMA           reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    SEMICOLON       reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RPAREN          reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RSQBRACKET      reduce using rule 31 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)


state 153

    (73) llamafunc -> idfunc LPAREN funcargs RPAREN .

    TIMES           reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    DIVIDE          reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    PLUS            reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MINUS           reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHAN        reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHAN        reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    NOTEQUAL        reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    ISEQUALTO       reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHANEQUAL   reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHANEQUAL   reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    AND             reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    OR              reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RPAREN          reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    SEMICOLON       reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    COMMA           reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RSQBRACKET      reduce using rule 73 (llamafunc -> idfunc LPAREN funcargs RPAREN .)


state 154

    (77) listafuncargs -> COMMA . expresion listafuncargs
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 170
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 155

    (75) funcargs -> expresion listafuncargs . checarparams
    (79) checarparams -> . empty
    (121) empty -> .

    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 171
    checarparams                   shift and go to state 172

state 156

    (78) listafuncargs -> empty .

    RPAREN          reduce using rule 78 (listafuncargs -> empty .)


state 157

    (18) listaprint -> ctestring . masprint
    (113) varcte -> ctestring .
    (19) masprint -> . addQPP listaprint
    (20) masprint -> . empty
    (21) addQPP -> . COMMA
    (121) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 113 (varcte -> ctestring .)
    TIMES           reduce using rule 113 (varcte -> ctestring .)
    DIVIDE          reduce using rule 113 (varcte -> ctestring .)
    PLUS            reduce using rule 113 (varcte -> ctestring .)
    MINUS           reduce using rule 113 (varcte -> ctestring .)
    MORETHAN        reduce using rule 113 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 113 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 113 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 113 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 113 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 113 (varcte -> ctestring .)
    AND             reduce using rule 113 (varcte -> ctestring .)
    OR              reduce using rule 113 (varcte -> ctestring .)
    RPAREN          reduce using rule 113 (varcte -> ctestring .)
    COMMA           shift and go to state 174

  ! COMMA           [ reduce using rule 113 (varcte -> ctestring .) ]
  ! RPAREN          [ reduce using rule 121 (empty -> .) ]

    addQPP                         shift and go to state 175
    empty                          shift and go to state 173
    masprint                       shift and go to state 176

state 158

    (17) listaprint -> expresion . masprint
    (19) masprint -> . addQPP listaprint
    (20) masprint -> . empty
    (21) addQPP -> . COMMA
    (121) empty -> .

    COMMA           shift and go to state 174
    RPAREN          reduce using rule 121 (empty -> .)

    addQPP                         shift and go to state 175
    masprint                       shift and go to state 177
    empty                          shift and go to state 173

state 159

    (15) escritura -> print LPAREN listaprint . RPAREN SEMICOLON

    RPAREN          shift and go to state 178


state 160

    (72) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 161

    (23) asignacion -> idarray LSQBRACKET dimsvar . RSQBRACKET EQUALS expresion SEMICOLON

    RSQBRACKET      shift and go to state 180


state 162

    (13) ciclo -> while LPAREN expresion . RPAREN gotoF estatutobloque goto

    RPAREN          shift and go to state 181


state 163

    (5) condicion -> IF LPAREN expresion . RPAREN gotoF estatutobloque masbloque

    RPAREN          shift and go to state 182


state 164

    (22) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 183


state 165

    (94) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .

    MAIN            reduce using rule 94 (funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .)


state 166

    (96) bloquefunc -> LBRACKET masestatuto . retorno RBRACKET
    (97) retorno -> . RETURN expresion SEMICOLON
    (98) retorno -> . RETURN SEMICOLON

    RETURN          shift and go to state 184

    retorno                        shift and go to state 185

state 167

    (93) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN . bloquefunc funcs
    (96) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 145

    bloquefunc                     shift and go to state 186

state 168

    (102) masargs -> COMMA args . masargs
    (102) masargs -> . COMMA args masargs
    (103) masargs -> . empty
    (121) empty -> .

    COMMA           shift and go to state 148
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 147
    masargs                        shift and go to state 187

state 169

    (35) masdimsvar -> COMMA dimsvar .

    RSQBRACKET      reduce using rule 35 (masdimsvar -> COMMA dimsvar .)


state 170

    (77) listafuncargs -> COMMA expresion . listafuncargs
    (77) listafuncargs -> . COMMA expresion listafuncargs
    (78) listafuncargs -> . empty
    (121) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 156
    listafuncargs                  shift and go to state 188

state 171

    (79) checarparams -> empty .

    RPAREN          reduce using rule 79 (checarparams -> empty .)


state 172

    (75) funcargs -> expresion listafuncargs checarparams .

    RPAREN          reduce using rule 75 (funcargs -> expresion listafuncargs checarparams .)


state 173

    (20) masprint -> empty .

    RPAREN          reduce using rule 20 (masprint -> empty .)


state 174

    (21) addQPP -> COMMA .

    CTESTRING       reduce using rule 21 (addQPP -> COMMA .)
    LPAREN          reduce using rule 21 (addQPP -> COMMA .)
    ID              reduce using rule 21 (addQPP -> COMMA .)
    CTEINT          reduce using rule 21 (addQPP -> COMMA .)
    CTEFLOAT        reduce using rule 21 (addQPP -> COMMA .)
    CTECHAR         reduce using rule 21 (addQPP -> COMMA .)
    TRUE            reduce using rule 21 (addQPP -> COMMA .)
    FALSE           reduce using rule 21 (addQPP -> COMMA .)


state 175

    (19) masprint -> addQPP . listaprint
    (17) listaprint -> . expresion masprint
    (18) listaprint -> . ctestring masprint
    (44) expresion -> . expcomp masexpresion
    (118) ctestring -> . CTESTRING
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    CTESTRING       shift and go to state 45
    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    ctestring                      shift and go to state 157
    exp                            shift and go to state 42
    idarray                        shift and go to state 46
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 158
    listaprint                     shift and go to state 189
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 176

    (18) listaprint -> ctestring masprint .

    RPAREN          reduce using rule 18 (listaprint -> ctestring masprint .)


state 177

    (17) listaprint -> expresion masprint .

    RPAREN          reduce using rule 17 (listaprint -> expresion masprint .)


state 178

    (15) escritura -> print LPAREN listaprint RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 179

    (72) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 180

    (23) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 192


state 181

    (13) ciclo -> while LPAREN expresion RPAREN . gotoF estatutobloque goto
    (8) gotoF -> . empty
    (121) empty -> .

    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    LBRACKET        reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 193
    gotoF                          shift and go to state 194

state 182

    (5) condicion -> IF LPAREN expresion RPAREN . gotoF estatutobloque masbloque
    (8) gotoF -> . empty
    (121) empty -> .

    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    LBRACKET        reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 193
    gotoF                          shift and go to state 195

state 183

    (22) asignacion -> ID EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    READ            reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 184

    (97) retorno -> RETURN . expresion SEMICOLON
    (98) retorno -> RETURN . SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    SEMICOLON       shift and go to state 197
    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    ctefloat                       shift and go to state 37
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    idarray                        shift and go to state 46
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 196
    leftparen                      shift and go to state 59
    ctechar                        shift and go to state 58
    expcomp                        shift and go to state 57

state 185

    (96) bloquefunc -> LBRACKET masestatuto retorno . RBRACKET

    RBRACKET        shift and go to state 198


state 186

    (93) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc . funcs
    (93) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (94) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (95) funcs -> . empty
    (121) empty -> .

    FUNCTION        shift and go to state 23
    MAIN            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 21
    funcs                          shift and go to state 199

state 187

    (102) masargs -> COMMA args masargs .

    RPAREN          reduce using rule 102 (masargs -> COMMA args masargs .)


state 188

    (77) listafuncargs -> COMMA expresion listafuncargs .

    RPAREN          reduce using rule 77 (listafuncargs -> COMMA expresion listafuncargs .)


state 189

    (19) masprint -> addQPP listaprint .

    RPAREN          reduce using rule 19 (masprint -> addQPP listaprint .)


state 190

    (15) escritura -> print LPAREN listaprint RPAREN SEMICOLON .

    COMMENT         reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ID              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    IF              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    READ            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    VAR             reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ELSE            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)


state 191

    (72) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    COMMENT         reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ELSE            reduce using rule 72 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 192

    (23) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS . expresion SEMICOLON
    (44) expresion -> . expcomp masexpresion
    (54) expcomp -> . exp expcompcontinuo
    (37) exp -> . termino masexp
    (49) termino -> . factor masterminos
    (24) factor -> . leftparen expresion rightparen
    (25) factor -> . varcte
    (26) factor -> . varid
    (27) factor -> . llamafunc
    (28) leftparen -> . LPAREN
    (110) varcte -> . cteint
    (111) varcte -> . ctefloat
    (112) varcte -> . ctechar
    (113) varcte -> . ctestring
    (114) varcte -> . ctebool
    (30) varid -> . ID
    (31) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (115) cteint -> . CTEINT
    (116) ctefloat -> . CTEFLOAT
    (117) ctechar -> . CTECHAR
    (118) ctestring -> . CTESTRING
    (119) ctebool -> . TRUE
    (120) ctebool -> . FALSE
    (32) idarray -> . ID
    (74) idfunc -> . ID

    LPAREN          shift and go to state 52
    ID              shift and go to state 44
    CTEINT          shift and go to state 48
    CTEFLOAT        shift and go to state 53
    CTECHAR         shift and go to state 43
    CTESTRING       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 47

    varcte                         shift and go to state 36
    idarray                        shift and go to state 46
    cteint                         shift and go to state 38
    factor                         shift and go to state 40
    ctefloat                       shift and go to state 37
    ctestring                      shift and go to state 41
    exp                            shift and go to state 42
    llamafunc                      shift and go to state 49
    idfunc                         shift and go to state 50
    ctebool                        shift and go to state 51
    termino                        shift and go to state 54
    varid                          shift and go to state 55
    expresion                      shift and go to state 200
    expcomp                        shift and go to state 57
    ctechar                        shift and go to state 58
    leftparen                      shift and go to state 59

state 193

    (8) gotoF -> empty .

    COMMENT         reduce using rule 8 (gotoF -> empty .)
    CPPCOMMENT      reduce using rule 8 (gotoF -> empty .)
    LBRACKET        reduce using rule 8 (gotoF -> empty .)
    ID              reduce using rule 8 (gotoF -> empty .)
    IF              reduce using rule 8 (gotoF -> empty .)
    READ            reduce using rule 8 (gotoF -> empty .)
    VAR             reduce using rule 8 (gotoF -> empty .)
    WHILE           reduce using rule 8 (gotoF -> empty .)
    PRINT           reduce using rule 8 (gotoF -> empty .)
    RBRACKET        reduce using rule 8 (gotoF -> empty .)
    RETURN          reduce using rule 8 (gotoF -> empty .)
    ELSE            reduce using rule 8 (gotoF -> empty .)


state 194

    (13) ciclo -> while LPAREN expresion RPAREN gotoF . estatutobloque goto
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (121) empty -> .
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 62
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    bloque                         shift and go to state 201
    estatuto                       shift and go to state 202
    print                          shift and go to state 102
    lectura                        shift and go to state 99
    while                          shift and go to state 106
    escritura                      shift and go to state 108
    idarray                        shift and go to state 105
    estatutobloque                 shift and go to state 203
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 6
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 195

    (5) condicion -> IF LPAREN expresion RPAREN gotoF . estatutobloque masbloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (121) empty -> .
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 62
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    bloque                         shift and go to state 201
    estatuto                       shift and go to state 202
    print                          shift and go to state 102
    lectura                        shift and go to state 99
    while                          shift and go to state 106
    escritura                      shift and go to state 108
    idarray                        shift and go to state 105
    estatutobloque                 shift and go to state 204
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 6
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 196

    (97) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 205


state 197

    (98) retorno -> RETURN SEMICOLON .

    RBRACKET        reduce using rule 98 (retorno -> RETURN SEMICOLON .)


state 198

    (96) bloquefunc -> LBRACKET masestatuto retorno RBRACKET .

    FUNCTION        reduce using rule 96 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)
    MAIN            reduce using rule 96 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)


state 199

    (93) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .

    MAIN            reduce using rule 93 (funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .)


state 200

    (23) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 206


state 201

    (7) estatutobloque -> bloque .

    COMMENT         reduce using rule 7 (estatutobloque -> bloque .)
    CPPCOMMENT      reduce using rule 7 (estatutobloque -> bloque .)
    ID              reduce using rule 7 (estatutobloque -> bloque .)
    IF              reduce using rule 7 (estatutobloque -> bloque .)
    READ            reduce using rule 7 (estatutobloque -> bloque .)
    VAR             reduce using rule 7 (estatutobloque -> bloque .)
    WHILE           reduce using rule 7 (estatutobloque -> bloque .)
    PRINT           reduce using rule 7 (estatutobloque -> bloque .)
    RBRACKET        reduce using rule 7 (estatutobloque -> bloque .)
    RETURN          reduce using rule 7 (estatutobloque -> bloque .)
    ELSE            reduce using rule 7 (estatutobloque -> bloque .)


state 202

    (6) estatutobloque -> estatuto .

    COMMENT         reduce using rule 6 (estatutobloque -> estatuto .)
    CPPCOMMENT      reduce using rule 6 (estatutobloque -> estatuto .)
    ID              reduce using rule 6 (estatutobloque -> estatuto .)
    IF              reduce using rule 6 (estatutobloque -> estatuto .)
    READ            reduce using rule 6 (estatutobloque -> estatuto .)
    VAR             reduce using rule 6 (estatutobloque -> estatuto .)
    WHILE           reduce using rule 6 (estatutobloque -> estatuto .)
    PRINT           reduce using rule 6 (estatutobloque -> estatuto .)
    RBRACKET        reduce using rule 6 (estatutobloque -> estatuto .)
    RETURN          reduce using rule 6 (estatutobloque -> estatuto .)
    ELSE            reduce using rule 6 (estatutobloque -> estatuto .)


state 203

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque . goto
    (12) goto -> . empty
    (121) empty -> .

    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 207
    goto                           shift and go to state 208

state 204

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque . masbloque
    (10) masbloque -> . ELSE goto estatutobloque
    (11) masbloque -> . empty
    (121) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 210
    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)

  ! ELSE            [ reduce using rule 121 (empty -> .) ]

    empty                          shift and go to state 209
    masbloque                      shift and go to state 211

state 205

    (97) retorno -> RETURN expresion SEMICOLON .

    RBRACKET        reduce using rule 97 (retorno -> RETURN expresion SEMICOLON .)


state 206

    (23) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ID              reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    IF              reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    READ            reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 23 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)


state 207

    (12) goto -> empty .

    COMMENT         reduce using rule 12 (goto -> empty .)
    CPPCOMMENT      reduce using rule 12 (goto -> empty .)
    ID              reduce using rule 12 (goto -> empty .)
    IF              reduce using rule 12 (goto -> empty .)
    READ            reduce using rule 12 (goto -> empty .)
    VAR             reduce using rule 12 (goto -> empty .)
    WHILE           reduce using rule 12 (goto -> empty .)
    PRINT           reduce using rule 12 (goto -> empty .)
    RBRACKET        reduce using rule 12 (goto -> empty .)
    RETURN          reduce using rule 12 (goto -> empty .)
    ELSE            reduce using rule 12 (goto -> empty .)
    LBRACKET        reduce using rule 12 (goto -> empty .)


state 208

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .

    COMMENT         reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    CPPCOMMENT      reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ID              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    IF              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    READ            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    VAR             reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    WHILE           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    PRINT           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RETURN          reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RBRACKET        reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ELSE            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)


state 209

    (11) masbloque -> empty .

    COMMENT         reduce using rule 11 (masbloque -> empty .)
    CPPCOMMENT      reduce using rule 11 (masbloque -> empty .)
    ID              reduce using rule 11 (masbloque -> empty .)
    IF              reduce using rule 11 (masbloque -> empty .)
    READ            reduce using rule 11 (masbloque -> empty .)
    VAR             reduce using rule 11 (masbloque -> empty .)
    WHILE           reduce using rule 11 (masbloque -> empty .)
    PRINT           reduce using rule 11 (masbloque -> empty .)
    RBRACKET        reduce using rule 11 (masbloque -> empty .)
    RETURN          reduce using rule 11 (masbloque -> empty .)
    ELSE            reduce using rule 11 (masbloque -> empty .)


state 210

    (10) masbloque -> ELSE . goto estatutobloque
    (12) goto -> . empty
    (121) empty -> .

    COMMENT         reduce using rule 121 (empty -> .)
    CPPCOMMENT      reduce using rule 121 (empty -> .)
    LBRACKET        reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 207
    goto                           shift and go to state 212

state 211

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .

    COMMENT         reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    CPPCOMMENT      reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ID              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    IF              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    READ            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    VAR             reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    WHILE           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    PRINT           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RBRACKET        reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RETURN          reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ELSE            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)


state 212

    (10) masbloque -> ELSE goto . estatutobloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (63) estatuto -> . asignacion
    (64) estatuto -> . condicion
    (65) estatuto -> . ciclo
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . vars
    (69) estatuto -> . llamafunc SEMICOLON
    (70) estatuto -> . COMMENT
    (71) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (22) asignacion -> . ID EQUALS expresion SEMICOLON
    (23) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (72) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (82) vars -> . VAR tipo listaid SEMICOLON vars
    (83) vars -> . empty
    (73) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (32) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (121) empty -> .
    (74) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 97
    CPPCOMMENT      shift and go to state 115
    LBRACKET        shift and go to state 62
    ID              shift and go to state 109
    IF              shift and go to state 107
    READ            shift and go to state 103
    VAR             shift and go to state 7
    WHILE           shift and go to state 104
    PRINT           shift and go to state 101
    RBRACKET        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)

  ! COMMENT         [ reduce using rule 121 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 121 (empty -> .) ]
  ! ID              [ reduce using rule 121 (empty -> .) ]
  ! IF              [ reduce using rule 121 (empty -> .) ]
  ! READ            [ reduce using rule 121 (empty -> .) ]
  ! VAR             [ reduce using rule 121 (empty -> .) ]
  ! WHILE           [ reduce using rule 121 (empty -> .) ]
  ! PRINT           [ reduce using rule 121 (empty -> .) ]

    condicion                      shift and go to state 98
    bloque                         shift and go to state 201
    estatuto                       shift and go to state 202
    print                          shift and go to state 102
    lectura                        shift and go to state 99
    while                          shift and go to state 106
    escritura                      shift and go to state 108
    idarray                        shift and go to state 105
    estatutobloque                 shift and go to state 213
    llamafunc                      shift and go to state 111
    idfunc                         shift and go to state 50
    empty                          shift and go to state 6
    vars                           shift and go to state 114
    ciclo                          shift and go to state 112
    asignacion                     shift and go to state 116

state 213

    (10) masbloque -> ELSE goto estatutobloque .

    COMMENT         reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    CPPCOMMENT      reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    ID              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    IF              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    READ            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    VAR             reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    WHILE           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    PRINT           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RBRACKET        reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RETURN          reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    ELSE            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)

