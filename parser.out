Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> prog ID SEMICOLON vars eramain funcs main bloque
Rule 2     prog -> PROGRAM
Rule 3     eramain -> empty
Rule 4     main -> MAIN
Rule 5     condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
Rule 6     estatutobloque -> estatuto
Rule 7     estatutobloque -> bloque
Rule 8     gotoF -> empty
Rule 9     bloque -> LBRACKET masestatuto RBRACKET
Rule 10    masbloque -> ELSE goto estatutobloque
Rule 11    masbloque -> empty
Rule 12    goto -> empty
Rule 13    ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto
Rule 14    while -> WHILE
Rule 15    escritura -> print LPAREN listaprint RPAREN SEMICOLON
Rule 16    print -> PRINT
Rule 17    listaprint -> expresion masprint
Rule 18    masprint -> addQPP listaprint
Rule 19    masprint -> empty
Rule 20    addQPP -> COMMA
Rule 21    asignacion -> ID EQUALS expresion SEMICOLON
Rule 22    asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
Rule 23    factor -> leftparen expresion rightparen
Rule 24    factor -> varcte
Rule 25    factor -> varid
Rule 26    factor -> llamafunc
Rule 27    leftparen -> LPAREN
Rule 28    rightparen -> RPAREN
Rule 29    varid -> ID
Rule 30    varid -> idarray LSQBRACKET dimsvar RSQBRACKET
Rule 31    idarray -> ID
Rule 32    dimsvar -> expdimvar masdimsvar
Rule 33    expdimvar -> expresion
Rule 34    masdimsvar -> COMMA dimsvar
Rule 35    masdimsvar -> empty
Rule 36    exp -> termino masexp
Rule 37    masexp -> addQPPM exp
Rule 38    masexp -> empty
Rule 39    addQPPM -> PLUS
Rule 40    addQPPM -> MINUS
Rule 41    comaexpresion -> COMMA expresion comaexpresion
Rule 42    comaexpresion -> empty
Rule 43    expresion -> expcomp masexpresion
Rule 44    addQPAO -> AND
Rule 45    addQPAO -> OR
Rule 46    masexpresion -> addQPAO expresion
Rule 47    masexpresion -> empty
Rule 48    termino -> factor masterminos
Rule 49    addQTD -> TIMES
Rule 50    addQTD -> DIVIDE
Rule 51    masterminos -> addQTD termino
Rule 52    masterminos -> empty
Rule 53    expcomp -> exp expcompcontinuo
Rule 54    addQPComp -> MORETHAN
Rule 55    addQPComp -> LESSTHAN
Rule 56    addQPComp -> NOTEQUAL
Rule 57    addQPComp -> ISEQUALTO
Rule 58    addQPComp -> MORETHANEQUAL
Rule 59    addQPComp -> LESSTHANEQUAL
Rule 60    expcompcontinuo -> addQPComp expcomp
Rule 61    expcompcontinuo -> empty
Rule 62    estatuto -> asignacion
Rule 63    estatuto -> condicion
Rule 64    estatuto -> ciclo
Rule 65    estatuto -> escritura
Rule 66    estatuto -> lectura
Rule 67    estatuto -> vars
Rule 68    estatuto -> llamafunc SEMICOLON
Rule 69    estatuto -> COMMENT
Rule 70    estatuto -> CPPCOMMENT
Rule 71    lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 72    llamafunc -> idfunc LPAREN funcargs RPAREN
Rule 73    idfunc -> ID
Rule 74    funcargs -> expresion listafuncargs checarparams
Rule 75    funcargs -> empty
Rule 76    listafuncargs -> COMMA expresion listafuncargs
Rule 77    listafuncargs -> empty
Rule 78    checarparams -> empty
Rule 79    masestatuto -> estatuto masestatuto
Rule 80    masestatuto -> empty
Rule 81    vars -> VAR tipo listaid SEMICOLON vars
Rule 82    vars -> empty
Rule 83    listaid -> initvar masid
Rule 84    initvar -> ID EQUALS expresion
Rule 85    initvar -> ID LSQBRACKET dims RSQBRACKET
Rule 86    initvar -> ID
Rule 87    dims -> CTEINT masdims
Rule 88    masdims -> COMMA dims
Rule 89    masdims -> empty
Rule 90    masid -> COMMA listaid
Rule 91    masid -> empty
Rule 92    funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
Rule 93    funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
Rule 94    funcs -> empty
Rule 95    bloquefunc -> LBRACKET masestatuto retorno RBRACKET
Rule 96    retorno -> RETURN expresion SEMICOLON
Rule 97    retorno -> RETURN SEMICOLON
Rule 98    funcaux -> tipo ID
Rule 99    args -> tipo ID
Rule 100   args -> empty
Rule 101   masargs -> COMMA args masargs
Rule 102   masargs -> empty
Rule 103   tipo -> INT
Rule 104   tipo -> FLOAT
Rule 105   tipo -> CHAR
Rule 106   tipo -> BOOL
Rule 107   tipo -> STRING
Rule 108   tipo -> VOID
Rule 109   varcte -> cteint
Rule 110   varcte -> ctefloat
Rule 111   varcte -> ctechar
Rule 112   varcte -> ctestring
Rule 113   varcte -> ctebool
Rule 114   cteint -> CTEINT
Rule 115   ctefloat -> CTEFLOAT
Rule 116   ctechar -> CTECHAR
Rule 117   ctestring -> CTESTRING
Rule 118   ctebool -> TRUE
Rule 119   ctebool -> FALSE
Rule 120   empty -> <empty>

Terminals, with rules where they appear

AND                  : 44
BOOL                 : 106
CHAR                 : 105
COMMA                : 20 34 41 76 88 90 101
COMMENT              : 69
CPPCOMMENT           : 70
CTECHAR              : 116
CTEFLOAT             : 115
CTEINT               : 87 114
CTESTRING            : 117
DIVIDE               : 50
ELSE                 : 10
EQUALS               : 21 22 84
FALSE                : 119
FLOAT                : 104
FUNCTION             : 92 93
ID                   : 1 21 29 31 71 73 84 85 86 98 99
IF                   : 5
INT                  : 103
ISEQUALTO            : 57
LBRACKET             : 9 95
LESSTHAN             : 55
LESSTHANEQUAL        : 59
LPAREN               : 5 13 15 27 71 72 92 93
LSQBRACKET           : 22 30 85
MAIN                 : 4
MINUS                : 40
MORETHAN             : 54
MORETHANEQUAL        : 58
NOTEQUAL             : 56
OR                   : 45
PLUS                 : 39
PRINT                : 16
PROGRAM              : 2
RBRACKET             : 9 95
READ                 : 71
RETURN               : 96 97
RPAREN               : 5 13 15 28 71 72 92 93
RSQBRACKET           : 22 30 85
SEMICOLON            : 1 15 21 22 68 71 81 96 97
STRING               : 107
TIMES                : 49
TRUE                 : 118
VAR                  : 81
VOID                 : 108
WHILE                : 14
error                : 

Nonterminals, with rules where they appear

addQPAO              : 46
addQPComp            : 60
addQPP               : 18
addQPPM              : 37
addQTD               : 51
args                 : 92 101
asignacion           : 62
bloque               : 1 7
bloquefunc           : 92 93
checarparams         : 74
ciclo                : 64
comaexpresion        : 41
condicion            : 63
ctebool              : 113
ctechar              : 111
ctefloat             : 110
cteint               : 109
ctestring            : 112
dims                 : 85 88
dimsvar              : 22 30 34
empty                : 3 8 11 12 19 35 38 42 47 52 61 75 77 78 80 82 89 91 94 100 102
eramain              : 1
escritura            : 65
estatuto             : 6 79
estatutobloque       : 5 10 13
exp                  : 37 53
expcomp              : 43 60
expcompcontinuo      : 53
expdimvar            : 32
expresion            : 5 13 17 21 22 23 33 41 46 74 76 84 96
factor               : 48
funcargs             : 72
funcaux              : 92 93
funcs                : 1 92 93
goto                 : 10 13
gotoF                : 5 13
idarray              : 22 30
idfunc               : 72
initvar              : 83
lectura              : 66
leftparen            : 23
listafuncargs        : 74 76
listaid              : 81 90
listaprint           : 15 18
llamafunc            : 26 68
main                 : 1
masargs              : 92 101
masbloque            : 5
masdims              : 87
masdimsvar           : 32
masestatuto          : 9 79 95
masexp               : 36
masexpresion         : 43
masid                : 83
masprint             : 17
masterminos          : 48
print                : 15
prog                 : 1
programa             : 0
retorno              : 95
rightparen           : 23
termino              : 36 51
tipo                 : 81 98 99
varcte               : 24
varid                : 25
vars                 : 1 67 81
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . prog ID SEMICOLON vars eramain funcs main bloque
    (2) prog -> . PROGRAM

    PROGRAM         shift and go to state 1

    prog                           shift and go to state 3
    programa                       shift and go to state 2

state 1

    (2) prog -> PROGRAM .

    ID              reduce using rule 2 (prog -> PROGRAM .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> prog . ID SEMICOLON vars eramain funcs main bloque

    ID              shift and go to state 4


state 4

    (1) programa -> prog ID . SEMICOLON vars eramain funcs main bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> prog ID SEMICOLON . vars eramain funcs main bloque
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (120) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)

    vars                           shift and go to state 7
    empty                          shift and go to state 6

state 6

    (82) vars -> empty .

    COMMENT         reduce using rule 82 (vars -> empty .)
    CPPCOMMENT      reduce using rule 82 (vars -> empty .)
    ID              reduce using rule 82 (vars -> empty .)
    IF              reduce using rule 82 (vars -> empty .)
    READ            reduce using rule 82 (vars -> empty .)
    VAR             reduce using rule 82 (vars -> empty .)
    WHILE           reduce using rule 82 (vars -> empty .)
    PRINT           reduce using rule 82 (vars -> empty .)
    RBRACKET        reduce using rule 82 (vars -> empty .)
    RETURN          reduce using rule 82 (vars -> empty .)
    ELSE            reduce using rule 82 (vars -> empty .)
    FUNCTION        reduce using rule 82 (vars -> empty .)
    MAIN            reduce using rule 82 (vars -> empty .)


state 7

    (1) programa -> prog ID SEMICOLON vars . eramain funcs main bloque
    (3) eramain -> . empty
    (120) empty -> .

    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)

    eramain                        shift and go to state 10
    empty                          shift and go to state 9

state 8

    (81) vars -> VAR . tipo listaid SEMICOLON vars
    (103) tipo -> . INT
    (104) tipo -> . FLOAT
    (105) tipo -> . CHAR
    (106) tipo -> . BOOL
    (107) tipo -> . STRING
    (108) tipo -> . VOID

    INT             shift and go to state 13
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 15
    BOOL            shift and go to state 14
    STRING          shift and go to state 11
    VOID            shift and go to state 16

    tipo                           shift and go to state 17

state 9

    (3) eramain -> empty .

    FUNCTION        reduce using rule 3 (eramain -> empty .)
    MAIN            reduce using rule 3 (eramain -> empty .)


state 10

    (1) programa -> prog ID SEMICOLON vars eramain . funcs main bloque
    (92) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (93) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (94) funcs -> . empty
    (120) empty -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 120 (empty -> .)

    empty                          shift and go to state 20
    funcs                          shift and go to state 18

state 11

    (107) tipo -> STRING .

    ID              reduce using rule 107 (tipo -> STRING .)


state 12

    (104) tipo -> FLOAT .

    ID              reduce using rule 104 (tipo -> FLOAT .)


state 13

    (103) tipo -> INT .

    ID              reduce using rule 103 (tipo -> INT .)


state 14

    (106) tipo -> BOOL .

    ID              reduce using rule 106 (tipo -> BOOL .)


state 15

    (105) tipo -> CHAR .

    ID              reduce using rule 105 (tipo -> CHAR .)


state 16

    (108) tipo -> VOID .

    ID              reduce using rule 108 (tipo -> VOID .)


state 17

    (81) vars -> VAR tipo . listaid SEMICOLON vars
    (83) listaid -> . initvar masid
    (84) initvar -> . ID EQUALS expresion
    (85) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (86) initvar -> . ID

    ID              shift and go to state 23

    listaid                        shift and go to state 21
    initvar                        shift and go to state 22

state 18

    (1) programa -> prog ID SEMICOLON vars eramain funcs . main bloque
    (4) main -> . MAIN

    MAIN            shift and go to state 25

    main                           shift and go to state 24

state 19

    (92) funcs -> FUNCTION . funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (93) funcs -> FUNCTION . funcaux LPAREN RPAREN bloquefunc funcs
    (98) funcaux -> . tipo ID
    (103) tipo -> . INT
    (104) tipo -> . FLOAT
    (105) tipo -> . CHAR
    (106) tipo -> . BOOL
    (107) tipo -> . STRING
    (108) tipo -> . VOID

    INT             shift and go to state 13
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 15
    BOOL            shift and go to state 14
    STRING          shift and go to state 11
    VOID            shift and go to state 16

    funcaux                        shift and go to state 27
    tipo                           shift and go to state 26

state 20

    (94) funcs -> empty .

    MAIN            reduce using rule 94 (funcs -> empty .)


state 21

    (81) vars -> VAR tipo listaid . SEMICOLON vars

    SEMICOLON       shift and go to state 28


state 22

    (83) listaid -> initvar . masid
    (90) masid -> . COMMA listaid
    (91) masid -> . empty
    (120) empty -> .

    COMMA           shift and go to state 30
    SEMICOLON       reduce using rule 120 (empty -> .)

    empty                          shift and go to state 29
    masid                          shift and go to state 31

state 23

    (84) initvar -> ID . EQUALS expresion
    (85) initvar -> ID . LSQBRACKET dims RSQBRACKET
    (86) initvar -> ID .

    EQUALS          shift and go to state 32
    LSQBRACKET      shift and go to state 33
    COMMA           reduce using rule 86 (initvar -> ID .)
    SEMICOLON       reduce using rule 86 (initvar -> ID .)


state 24

    (1) programa -> prog ID SEMICOLON vars eramain funcs main . bloque
    (9) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 34

    bloque                         shift and go to state 35

state 25

    (4) main -> MAIN .

    LBRACKET        reduce using rule 4 (main -> MAIN .)


state 26

    (98) funcaux -> tipo . ID

    ID              shift and go to state 36


state 27

    (92) funcs -> FUNCTION funcaux . LPAREN args masargs RPAREN bloquefunc funcs
    (93) funcs -> FUNCTION funcaux . LPAREN RPAREN bloquefunc funcs

    LPAREN          shift and go to state 37


state 28

    (81) vars -> VAR tipo listaid SEMICOLON . vars
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (120) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    FUNCTION        reduce using rule 120 (empty -> .)
    MAIN            reduce using rule 120 (empty -> .)
    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

  ! VAR             [ reduce using rule 120 (empty -> .) ]

    vars                           shift and go to state 38
    empty                          shift and go to state 6

state 29

    (91) masid -> empty .

    SEMICOLON       reduce using rule 91 (masid -> empty .)


state 30

    (90) masid -> COMMA . listaid
    (83) listaid -> . initvar masid
    (84) initvar -> . ID EQUALS expresion
    (85) initvar -> . ID LSQBRACKET dims RSQBRACKET
    (86) initvar -> . ID

    ID              shift and go to state 23

    listaid                        shift and go to state 39
    initvar                        shift and go to state 22

state 31

    (83) listaid -> initvar masid .

    SEMICOLON       reduce using rule 83 (listaid -> initvar masid .)


state 32

    (84) initvar -> ID EQUALS . expresion
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 40
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 33

    (85) initvar -> ID LSQBRACKET . dims RSQBRACKET
    (87) dims -> . CTEINT masdims

    CTEINT          shift and go to state 65

    dims                           shift and go to state 64

state 34

    (9) bloque -> LBRACKET . masestatuto RBRACKET
    (79) masestatuto -> . estatuto masestatuto
    (80) masestatuto -> . empty
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (120) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    RBRACKET        reduce using rule 120 (empty -> .)
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    escritura                      shift and go to state 74
    lectura                        shift and go to state 68
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 70
    idarray                        shift and go to state 73
    estatuto                       shift and go to state 76
    while                          shift and go to state 71
    print                          shift and go to state 77
    idfunc                         shift and go to state 57
    asignacion                     shift and go to state 85
    vars                           shift and go to state 82
    masestatuto                    shift and go to state 84
    condicion                      shift and go to state 81

state 35

    (1) programa -> prog ID SEMICOLON vars eramain funcs main bloque .

    $end            reduce using rule 1 (programa -> prog ID SEMICOLON vars eramain funcs main bloque .)


state 36

    (98) funcaux -> tipo ID .

    LPAREN          reduce using rule 98 (funcaux -> tipo ID .)


state 37

    (92) funcs -> FUNCTION funcaux LPAREN . args masargs RPAREN bloquefunc funcs
    (93) funcs -> FUNCTION funcaux LPAREN . RPAREN bloquefunc funcs
    (99) args -> . tipo ID
    (100) args -> . empty
    (103) tipo -> . INT
    (104) tipo -> . FLOAT
    (105) tipo -> . CHAR
    (106) tipo -> . BOOL
    (107) tipo -> . STRING
    (108) tipo -> . VOID
    (120) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 88
    INT             shift and go to state 13
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 15
    BOOL            shift and go to state 14
    STRING          shift and go to state 11
    VOID            shift and go to state 16
    COMMA           reduce using rule 120 (empty -> .)

  ! RPAREN          [ reduce using rule 120 (empty -> .) ]

    args                           shift and go to state 89
    empty                          shift and go to state 87
    tipo                           shift and go to state 86

state 38

    (81) vars -> VAR tipo listaid SEMICOLON vars .

    COMMENT         reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    CPPCOMMENT      reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    ID              reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    IF              reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    READ            reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    VAR             reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    WHILE           reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    PRINT           reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    RBRACKET        reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    RETURN          reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    ELSE            reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    FUNCTION        reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)
    MAIN            reduce using rule 81 (vars -> VAR tipo listaid SEMICOLON vars .)


state 39

    (90) masid -> COMMA listaid .

    SEMICOLON       reduce using rule 90 (masid -> COMMA listaid .)


state 40

    (84) initvar -> ID EQUALS expresion .

    COMMA           reduce using rule 84 (initvar -> ID EQUALS expresion .)
    SEMICOLON       reduce using rule 84 (initvar -> ID EQUALS expresion .)


state 41

    (118) ctebool -> TRUE .

    TIMES           reduce using rule 118 (ctebool -> TRUE .)
    DIVIDE          reduce using rule 118 (ctebool -> TRUE .)
    PLUS            reduce using rule 118 (ctebool -> TRUE .)
    MINUS           reduce using rule 118 (ctebool -> TRUE .)
    MORETHAN        reduce using rule 118 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 118 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 118 (ctebool -> TRUE .)
    ISEQUALTO       reduce using rule 118 (ctebool -> TRUE .)
    MORETHANEQUAL   reduce using rule 118 (ctebool -> TRUE .)
    LESSTHANEQUAL   reduce using rule 118 (ctebool -> TRUE .)
    AND             reduce using rule 118 (ctebool -> TRUE .)
    OR              reduce using rule 118 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 118 (ctebool -> TRUE .)
    COMMA           reduce using rule 118 (ctebool -> TRUE .)
    RSQBRACKET      reduce using rule 118 (ctebool -> TRUE .)
    RPAREN          reduce using rule 118 (ctebool -> TRUE .)


state 42

    (109) varcte -> cteint .

    TIMES           reduce using rule 109 (varcte -> cteint .)
    DIVIDE          reduce using rule 109 (varcte -> cteint .)
    PLUS            reduce using rule 109 (varcte -> cteint .)
    MINUS           reduce using rule 109 (varcte -> cteint .)
    MORETHAN        reduce using rule 109 (varcte -> cteint .)
    LESSTHAN        reduce using rule 109 (varcte -> cteint .)
    NOTEQUAL        reduce using rule 109 (varcte -> cteint .)
    ISEQUALTO       reduce using rule 109 (varcte -> cteint .)
    MORETHANEQUAL   reduce using rule 109 (varcte -> cteint .)
    LESSTHANEQUAL   reduce using rule 109 (varcte -> cteint .)
    AND             reduce using rule 109 (varcte -> cteint .)
    OR              reduce using rule 109 (varcte -> cteint .)
    COMMA           reduce using rule 109 (varcte -> cteint .)
    RPAREN          reduce using rule 109 (varcte -> cteint .)
    SEMICOLON       reduce using rule 109 (varcte -> cteint .)
    RSQBRACKET      reduce using rule 109 (varcte -> cteint .)


state 43

    (24) factor -> varcte .

    TIMES           reduce using rule 24 (factor -> varcte .)
    DIVIDE          reduce using rule 24 (factor -> varcte .)
    PLUS            reduce using rule 24 (factor -> varcte .)
    MINUS           reduce using rule 24 (factor -> varcte .)
    MORETHAN        reduce using rule 24 (factor -> varcte .)
    LESSTHAN        reduce using rule 24 (factor -> varcte .)
    NOTEQUAL        reduce using rule 24 (factor -> varcte .)
    ISEQUALTO       reduce using rule 24 (factor -> varcte .)
    MORETHANEQUAL   reduce using rule 24 (factor -> varcte .)
    LESSTHANEQUAL   reduce using rule 24 (factor -> varcte .)
    AND             reduce using rule 24 (factor -> varcte .)
    OR              reduce using rule 24 (factor -> varcte .)
    SEMICOLON       reduce using rule 24 (factor -> varcte .)
    COMMA           reduce using rule 24 (factor -> varcte .)
    RSQBRACKET      reduce using rule 24 (factor -> varcte .)
    RPAREN          reduce using rule 24 (factor -> varcte .)


state 44

    (26) factor -> llamafunc .

    TIMES           reduce using rule 26 (factor -> llamafunc .)
    DIVIDE          reduce using rule 26 (factor -> llamafunc .)
    PLUS            reduce using rule 26 (factor -> llamafunc .)
    MINUS           reduce using rule 26 (factor -> llamafunc .)
    MORETHAN        reduce using rule 26 (factor -> llamafunc .)
    LESSTHAN        reduce using rule 26 (factor -> llamafunc .)
    NOTEQUAL        reduce using rule 26 (factor -> llamafunc .)
    ISEQUALTO       reduce using rule 26 (factor -> llamafunc .)
    MORETHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    LESSTHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    AND             reduce using rule 26 (factor -> llamafunc .)
    OR              reduce using rule 26 (factor -> llamafunc .)
    SEMICOLON       reduce using rule 26 (factor -> llamafunc .)
    COMMA           reduce using rule 26 (factor -> llamafunc .)
    RSQBRACKET      reduce using rule 26 (factor -> llamafunc .)
    RPAREN          reduce using rule 26 (factor -> llamafunc .)


state 45

    (110) varcte -> ctefloat .

    TIMES           reduce using rule 110 (varcte -> ctefloat .)
    DIVIDE          reduce using rule 110 (varcte -> ctefloat .)
    PLUS            reduce using rule 110 (varcte -> ctefloat .)
    MINUS           reduce using rule 110 (varcte -> ctefloat .)
    MORETHAN        reduce using rule 110 (varcte -> ctefloat .)
    LESSTHAN        reduce using rule 110 (varcte -> ctefloat .)
    NOTEQUAL        reduce using rule 110 (varcte -> ctefloat .)
    ISEQUALTO       reduce using rule 110 (varcte -> ctefloat .)
    MORETHANEQUAL   reduce using rule 110 (varcte -> ctefloat .)
    LESSTHANEQUAL   reduce using rule 110 (varcte -> ctefloat .)
    AND             reduce using rule 110 (varcte -> ctefloat .)
    OR              reduce using rule 110 (varcte -> ctefloat .)
    COMMA           reduce using rule 110 (varcte -> ctefloat .)
    RPAREN          reduce using rule 110 (varcte -> ctefloat .)
    SEMICOLON       reduce using rule 110 (varcte -> ctefloat .)
    RSQBRACKET      reduce using rule 110 (varcte -> ctefloat .)


state 46

    (29) varid -> ID .
    (31) idarray -> ID .
    (73) idfunc -> ID .

    TIMES           reduce using rule 29 (varid -> ID .)
    DIVIDE          reduce using rule 29 (varid -> ID .)
    PLUS            reduce using rule 29 (varid -> ID .)
    MINUS           reduce using rule 29 (varid -> ID .)
    MORETHAN        reduce using rule 29 (varid -> ID .)
    LESSTHAN        reduce using rule 29 (varid -> ID .)
    NOTEQUAL        reduce using rule 29 (varid -> ID .)
    ISEQUALTO       reduce using rule 29 (varid -> ID .)
    MORETHANEQUAL   reduce using rule 29 (varid -> ID .)
    LESSTHANEQUAL   reduce using rule 29 (varid -> ID .)
    AND             reduce using rule 29 (varid -> ID .)
    OR              reduce using rule 29 (varid -> ID .)
    COMMA           reduce using rule 29 (varid -> ID .)
    RPAREN          reduce using rule 29 (varid -> ID .)
    SEMICOLON       reduce using rule 29 (varid -> ID .)
    RSQBRACKET      reduce using rule 29 (varid -> ID .)
    LSQBRACKET      reduce using rule 31 (idarray -> ID .)
    LPAREN          reduce using rule 73 (idfunc -> ID .)


state 47

    (53) expcomp -> exp . expcompcontinuo
    (60) expcompcontinuo -> . addQPComp expcomp
    (61) expcompcontinuo -> . empty
    (54) addQPComp -> . MORETHAN
    (55) addQPComp -> . LESSTHAN
    (56) addQPComp -> . NOTEQUAL
    (57) addQPComp -> . ISEQUALTO
    (58) addQPComp -> . MORETHANEQUAL
    (59) addQPComp -> . LESSTHANEQUAL
    (120) empty -> .

    MORETHAN        shift and go to state 92
    LESSTHAN        shift and go to state 97
    NOTEQUAL        shift and go to state 95
    ISEQUALTO       shift and go to state 93
    MORETHANEQUAL   shift and go to state 91
    LESSTHANEQUAL   shift and go to state 90
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    RSQBRACKET      reduce using rule 120 (empty -> .)

    addQPComp                      shift and go to state 94
    empty                          shift and go to state 98
    expcompcontinuo                shift and go to state 96

state 48

    (30) varid -> idarray . LSQBRACKET dimsvar RSQBRACKET

    LSQBRACKET      shift and go to state 99


state 49

    (23) factor -> leftparen . expresion rightparen
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 100
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 50

    (25) factor -> varid .

    TIMES           reduce using rule 25 (factor -> varid .)
    DIVIDE          reduce using rule 25 (factor -> varid .)
    PLUS            reduce using rule 25 (factor -> varid .)
    MINUS           reduce using rule 25 (factor -> varid .)
    MORETHAN        reduce using rule 25 (factor -> varid .)
    LESSTHAN        reduce using rule 25 (factor -> varid .)
    NOTEQUAL        reduce using rule 25 (factor -> varid .)
    ISEQUALTO       reduce using rule 25 (factor -> varid .)
    MORETHANEQUAL   reduce using rule 25 (factor -> varid .)
    LESSTHANEQUAL   reduce using rule 25 (factor -> varid .)
    AND             reduce using rule 25 (factor -> varid .)
    OR              reduce using rule 25 (factor -> varid .)
    SEMICOLON       reduce using rule 25 (factor -> varid .)
    COMMA           reduce using rule 25 (factor -> varid .)
    RSQBRACKET      reduce using rule 25 (factor -> varid .)
    RPAREN          reduce using rule 25 (factor -> varid .)


state 51

    (27) leftparen -> LPAREN .

    LPAREN          reduce using rule 27 (leftparen -> LPAREN .)
    ID              reduce using rule 27 (leftparen -> LPAREN .)
    CTEINT          reduce using rule 27 (leftparen -> LPAREN .)
    CTEFLOAT        reduce using rule 27 (leftparen -> LPAREN .)
    CTECHAR         reduce using rule 27 (leftparen -> LPAREN .)
    CTESTRING       reduce using rule 27 (leftparen -> LPAREN .)
    TRUE            reduce using rule 27 (leftparen -> LPAREN .)
    FALSE           reduce using rule 27 (leftparen -> LPAREN .)


state 52

    (114) cteint -> CTEINT .

    TIMES           reduce using rule 114 (cteint -> CTEINT .)
    DIVIDE          reduce using rule 114 (cteint -> CTEINT .)
    PLUS            reduce using rule 114 (cteint -> CTEINT .)
    MINUS           reduce using rule 114 (cteint -> CTEINT .)
    MORETHAN        reduce using rule 114 (cteint -> CTEINT .)
    LESSTHAN        reduce using rule 114 (cteint -> CTEINT .)
    NOTEQUAL        reduce using rule 114 (cteint -> CTEINT .)
    ISEQUALTO       reduce using rule 114 (cteint -> CTEINT .)
    MORETHANEQUAL   reduce using rule 114 (cteint -> CTEINT .)
    LESSTHANEQUAL   reduce using rule 114 (cteint -> CTEINT .)
    AND             reduce using rule 114 (cteint -> CTEINT .)
    OR              reduce using rule 114 (cteint -> CTEINT .)
    COMMA           reduce using rule 114 (cteint -> CTEINT .)
    RPAREN          reduce using rule 114 (cteint -> CTEINT .)
    RSQBRACKET      reduce using rule 114 (cteint -> CTEINT .)
    SEMICOLON       reduce using rule 114 (cteint -> CTEINT .)


state 53

    (111) varcte -> ctechar .

    TIMES           reduce using rule 111 (varcte -> ctechar .)
    DIVIDE          reduce using rule 111 (varcte -> ctechar .)
    PLUS            reduce using rule 111 (varcte -> ctechar .)
    MINUS           reduce using rule 111 (varcte -> ctechar .)
    MORETHAN        reduce using rule 111 (varcte -> ctechar .)
    LESSTHAN        reduce using rule 111 (varcte -> ctechar .)
    NOTEQUAL        reduce using rule 111 (varcte -> ctechar .)
    ISEQUALTO       reduce using rule 111 (varcte -> ctechar .)
    MORETHANEQUAL   reduce using rule 111 (varcte -> ctechar .)
    LESSTHANEQUAL   reduce using rule 111 (varcte -> ctechar .)
    AND             reduce using rule 111 (varcte -> ctechar .)
    OR              reduce using rule 111 (varcte -> ctechar .)
    COMMA           reduce using rule 111 (varcte -> ctechar .)
    RPAREN          reduce using rule 111 (varcte -> ctechar .)
    SEMICOLON       reduce using rule 111 (varcte -> ctechar .)
    RSQBRACKET      reduce using rule 111 (varcte -> ctechar .)


state 54

    (116) ctechar -> CTECHAR .

    TIMES           reduce using rule 116 (ctechar -> CTECHAR .)
    DIVIDE          reduce using rule 116 (ctechar -> CTECHAR .)
    PLUS            reduce using rule 116 (ctechar -> CTECHAR .)
    MINUS           reduce using rule 116 (ctechar -> CTECHAR .)
    MORETHAN        reduce using rule 116 (ctechar -> CTECHAR .)
    LESSTHAN        reduce using rule 116 (ctechar -> CTECHAR .)
    NOTEQUAL        reduce using rule 116 (ctechar -> CTECHAR .)
    ISEQUALTO       reduce using rule 116 (ctechar -> CTECHAR .)
    MORETHANEQUAL   reduce using rule 116 (ctechar -> CTECHAR .)
    LESSTHANEQUAL   reduce using rule 116 (ctechar -> CTECHAR .)
    AND             reduce using rule 116 (ctechar -> CTECHAR .)
    OR              reduce using rule 116 (ctechar -> CTECHAR .)
    RPAREN          reduce using rule 116 (ctechar -> CTECHAR .)
    COMMA           reduce using rule 116 (ctechar -> CTECHAR .)
    RSQBRACKET      reduce using rule 116 (ctechar -> CTECHAR .)
    SEMICOLON       reduce using rule 116 (ctechar -> CTECHAR .)


state 55

    (117) ctestring -> CTESTRING .

    TIMES           reduce using rule 117 (ctestring -> CTESTRING .)
    DIVIDE          reduce using rule 117 (ctestring -> CTESTRING .)
    PLUS            reduce using rule 117 (ctestring -> CTESTRING .)
    MINUS           reduce using rule 117 (ctestring -> CTESTRING .)
    MORETHAN        reduce using rule 117 (ctestring -> CTESTRING .)
    LESSTHAN        reduce using rule 117 (ctestring -> CTESTRING .)
    NOTEQUAL        reduce using rule 117 (ctestring -> CTESTRING .)
    ISEQUALTO       reduce using rule 117 (ctestring -> CTESTRING .)
    MORETHANEQUAL   reduce using rule 117 (ctestring -> CTESTRING .)
    LESSTHANEQUAL   reduce using rule 117 (ctestring -> CTESTRING .)
    AND             reduce using rule 117 (ctestring -> CTESTRING .)
    OR              reduce using rule 117 (ctestring -> CTESTRING .)
    COMMA           reduce using rule 117 (ctestring -> CTESTRING .)
    RPAREN          reduce using rule 117 (ctestring -> CTESTRING .)
    SEMICOLON       reduce using rule 117 (ctestring -> CTESTRING .)
    RSQBRACKET      reduce using rule 117 (ctestring -> CTESTRING .)


state 56

    (115) ctefloat -> CTEFLOAT .

    TIMES           reduce using rule 115 (ctefloat -> CTEFLOAT .)
    DIVIDE          reduce using rule 115 (ctefloat -> CTEFLOAT .)
    PLUS            reduce using rule 115 (ctefloat -> CTEFLOAT .)
    MINUS           reduce using rule 115 (ctefloat -> CTEFLOAT .)
    MORETHAN        reduce using rule 115 (ctefloat -> CTEFLOAT .)
    LESSTHAN        reduce using rule 115 (ctefloat -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 115 (ctefloat -> CTEFLOAT .)
    ISEQUALTO       reduce using rule 115 (ctefloat -> CTEFLOAT .)
    MORETHANEQUAL   reduce using rule 115 (ctefloat -> CTEFLOAT .)
    LESSTHANEQUAL   reduce using rule 115 (ctefloat -> CTEFLOAT .)
    AND             reduce using rule 115 (ctefloat -> CTEFLOAT .)
    OR              reduce using rule 115 (ctefloat -> CTEFLOAT .)
    RPAREN          reduce using rule 115 (ctefloat -> CTEFLOAT .)
    COMMA           reduce using rule 115 (ctefloat -> CTEFLOAT .)
    RSQBRACKET      reduce using rule 115 (ctefloat -> CTEFLOAT .)
    SEMICOLON       reduce using rule 115 (ctefloat -> CTEFLOAT .)


state 57

    (72) llamafunc -> idfunc . LPAREN funcargs RPAREN

    LPAREN          shift and go to state 101


state 58

    (43) expresion -> expcomp . masexpresion
    (46) masexpresion -> . addQPAO expresion
    (47) masexpresion -> . empty
    (44) addQPAO -> . AND
    (45) addQPAO -> . OR
    (120) empty -> .

    AND             shift and go to state 105
    OR              shift and go to state 102
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    RSQBRACKET      reduce using rule 120 (empty -> .)

    empty                          shift and go to state 106
    addQPAO                        shift and go to state 104
    masexpresion                   shift and go to state 103

state 59

    (119) ctebool -> FALSE .

    TIMES           reduce using rule 119 (ctebool -> FALSE .)
    DIVIDE          reduce using rule 119 (ctebool -> FALSE .)
    PLUS            reduce using rule 119 (ctebool -> FALSE .)
    MINUS           reduce using rule 119 (ctebool -> FALSE .)
    MORETHAN        reduce using rule 119 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 119 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 119 (ctebool -> FALSE .)
    ISEQUALTO       reduce using rule 119 (ctebool -> FALSE .)
    MORETHANEQUAL   reduce using rule 119 (ctebool -> FALSE .)
    LESSTHANEQUAL   reduce using rule 119 (ctebool -> FALSE .)
    AND             reduce using rule 119 (ctebool -> FALSE .)
    OR              reduce using rule 119 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 119 (ctebool -> FALSE .)
    COMMA           reduce using rule 119 (ctebool -> FALSE .)
    RSQBRACKET      reduce using rule 119 (ctebool -> FALSE .)
    RPAREN          reduce using rule 119 (ctebool -> FALSE .)


state 60

    (48) termino -> factor . masterminos
    (51) masterminos -> . addQTD termino
    (52) masterminos -> . empty
    (49) addQTD -> . TIMES
    (50) addQTD -> . DIVIDE
    (120) empty -> .

    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 110
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    MORETHAN        reduce using rule 120 (empty -> .)
    LESSTHAN        reduce using rule 120 (empty -> .)
    NOTEQUAL        reduce using rule 120 (empty -> .)
    ISEQUALTO       reduce using rule 120 (empty -> .)
    MORETHANEQUAL   reduce using rule 120 (empty -> .)
    LESSTHANEQUAL   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    RSQBRACKET      reduce using rule 120 (empty -> .)

    masterminos                    shift and go to state 109
    empty                          shift and go to state 111
    addQTD                         shift and go to state 108

state 61

    (112) varcte -> ctestring .

    TIMES           reduce using rule 112 (varcte -> ctestring .)
    DIVIDE          reduce using rule 112 (varcte -> ctestring .)
    PLUS            reduce using rule 112 (varcte -> ctestring .)
    MINUS           reduce using rule 112 (varcte -> ctestring .)
    MORETHAN        reduce using rule 112 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 112 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 112 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 112 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 112 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 112 (varcte -> ctestring .)
    AND             reduce using rule 112 (varcte -> ctestring .)
    OR              reduce using rule 112 (varcte -> ctestring .)
    COMMA           reduce using rule 112 (varcte -> ctestring .)
    RPAREN          reduce using rule 112 (varcte -> ctestring .)
    SEMICOLON       reduce using rule 112 (varcte -> ctestring .)
    RSQBRACKET      reduce using rule 112 (varcte -> ctestring .)


state 62

    (36) exp -> termino . masexp
    (37) masexp -> . addQPPM exp
    (38) masexp -> . empty
    (39) addQPPM -> . PLUS
    (40) addQPPM -> . MINUS
    (120) empty -> .

    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    MORETHAN        reduce using rule 120 (empty -> .)
    LESSTHAN        reduce using rule 120 (empty -> .)
    NOTEQUAL        reduce using rule 120 (empty -> .)
    ISEQUALTO       reduce using rule 120 (empty -> .)
    MORETHANEQUAL   reduce using rule 120 (empty -> .)
    LESSTHANEQUAL   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    RSQBRACKET      reduce using rule 120 (empty -> .)

    empty                          shift and go to state 116
    masexp                         shift and go to state 112
    addQPPM                        shift and go to state 113

state 63

    (113) varcte -> ctebool .

    TIMES           reduce using rule 113 (varcte -> ctebool .)
    DIVIDE          reduce using rule 113 (varcte -> ctebool .)
    PLUS            reduce using rule 113 (varcte -> ctebool .)
    MINUS           reduce using rule 113 (varcte -> ctebool .)
    MORETHAN        reduce using rule 113 (varcte -> ctebool .)
    LESSTHAN        reduce using rule 113 (varcte -> ctebool .)
    NOTEQUAL        reduce using rule 113 (varcte -> ctebool .)
    ISEQUALTO       reduce using rule 113 (varcte -> ctebool .)
    MORETHANEQUAL   reduce using rule 113 (varcte -> ctebool .)
    LESSTHANEQUAL   reduce using rule 113 (varcte -> ctebool .)
    AND             reduce using rule 113 (varcte -> ctebool .)
    OR              reduce using rule 113 (varcte -> ctebool .)
    COMMA           reduce using rule 113 (varcte -> ctebool .)
    RPAREN          reduce using rule 113 (varcte -> ctebool .)
    SEMICOLON       reduce using rule 113 (varcte -> ctebool .)
    RSQBRACKET      reduce using rule 113 (varcte -> ctebool .)


state 64

    (85) initvar -> ID LSQBRACKET dims . RSQBRACKET

    RSQBRACKET      shift and go to state 117


state 65

    (87) dims -> CTEINT . masdims
    (88) masdims -> . COMMA dims
    (89) masdims -> . empty
    (120) empty -> .

    COMMA           shift and go to state 118
    RSQBRACKET      reduce using rule 120 (empty -> .)

    masdims                        shift and go to state 119
    empty                          shift and go to state 120

state 66

    (64) estatuto -> ciclo .

    COMMENT         reduce using rule 64 (estatuto -> ciclo .)
    CPPCOMMENT      reduce using rule 64 (estatuto -> ciclo .)
    ID              reduce using rule 64 (estatuto -> ciclo .)
    IF              reduce using rule 64 (estatuto -> ciclo .)
    READ            reduce using rule 64 (estatuto -> ciclo .)
    VAR             reduce using rule 64 (estatuto -> ciclo .)
    WHILE           reduce using rule 64 (estatuto -> ciclo .)
    PRINT           reduce using rule 64 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 64 (estatuto -> ciclo .)
    RETURN          reduce using rule 64 (estatuto -> ciclo .)
    ELSE            reduce using rule 64 (estatuto -> ciclo .)


state 67

    (16) print -> PRINT .

    LPAREN          reduce using rule 16 (print -> PRINT .)


state 68

    (66) estatuto -> lectura .

    COMMENT         reduce using rule 66 (estatuto -> lectura .)
    CPPCOMMENT      reduce using rule 66 (estatuto -> lectura .)
    ID              reduce using rule 66 (estatuto -> lectura .)
    IF              reduce using rule 66 (estatuto -> lectura .)
    READ            reduce using rule 66 (estatuto -> lectura .)
    VAR             reduce using rule 66 (estatuto -> lectura .)
    WHILE           reduce using rule 66 (estatuto -> lectura .)
    PRINT           reduce using rule 66 (estatuto -> lectura .)
    RBRACKET        reduce using rule 66 (estatuto -> lectura .)
    RETURN          reduce using rule 66 (estatuto -> lectura .)
    ELSE            reduce using rule 66 (estatuto -> lectura .)


state 69

    (68) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 121


state 70

    (80) masestatuto -> empty .
    (82) vars -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 80 (masestatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 80 (masestatuto -> empty .)
    RETURN          reduce using rule 80 (masestatuto -> empty .)
    RBRACKET        reduce using rule 80 (masestatuto -> empty .)
    COMMENT         reduce using rule 82 (vars -> empty .)
    CPPCOMMENT      reduce using rule 82 (vars -> empty .)
    ID              reduce using rule 82 (vars -> empty .)
    IF              reduce using rule 82 (vars -> empty .)
    READ            reduce using rule 82 (vars -> empty .)
    VAR             reduce using rule 82 (vars -> empty .)
    WHILE           reduce using rule 82 (vars -> empty .)
    PRINT           reduce using rule 82 (vars -> empty .)

  ! RBRACKET        [ reduce using rule 82 (vars -> empty .) ]
  ! RETURN          [ reduce using rule 82 (vars -> empty .) ]


state 71

    (13) ciclo -> while . LPAREN expresion RPAREN gotoF estatutobloque goto

    LPAREN          shift and go to state 122


state 72

    (14) while -> WHILE .

    LPAREN          reduce using rule 14 (while -> WHILE .)


state 73

    (22) asignacion -> idarray . LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON

    LSQBRACKET      shift and go to state 123


state 74

    (65) estatuto -> escritura .

    COMMENT         reduce using rule 65 (estatuto -> escritura .)
    CPPCOMMENT      reduce using rule 65 (estatuto -> escritura .)
    ID              reduce using rule 65 (estatuto -> escritura .)
    IF              reduce using rule 65 (estatuto -> escritura .)
    READ            reduce using rule 65 (estatuto -> escritura .)
    VAR             reduce using rule 65 (estatuto -> escritura .)
    WHILE           reduce using rule 65 (estatuto -> escritura .)
    PRINT           reduce using rule 65 (estatuto -> escritura .)
    RBRACKET        reduce using rule 65 (estatuto -> escritura .)
    RETURN          reduce using rule 65 (estatuto -> escritura .)
    ELSE            reduce using rule 65 (estatuto -> escritura .)


state 75

    (70) estatuto -> CPPCOMMENT .

    COMMENT         reduce using rule 70 (estatuto -> CPPCOMMENT .)
    CPPCOMMENT      reduce using rule 70 (estatuto -> CPPCOMMENT .)
    ID              reduce using rule 70 (estatuto -> CPPCOMMENT .)
    IF              reduce using rule 70 (estatuto -> CPPCOMMENT .)
    READ            reduce using rule 70 (estatuto -> CPPCOMMENT .)
    VAR             reduce using rule 70 (estatuto -> CPPCOMMENT .)
    WHILE           reduce using rule 70 (estatuto -> CPPCOMMENT .)
    PRINT           reduce using rule 70 (estatuto -> CPPCOMMENT .)
    RBRACKET        reduce using rule 70 (estatuto -> CPPCOMMENT .)
    RETURN          reduce using rule 70 (estatuto -> CPPCOMMENT .)
    ELSE            reduce using rule 70 (estatuto -> CPPCOMMENT .)


state 76

    (79) masestatuto -> estatuto . masestatuto
    (79) masestatuto -> . estatuto masestatuto
    (80) masestatuto -> . empty
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (120) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    escritura                      shift and go to state 74
    lectura                        shift and go to state 68
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 70
    idarray                        shift and go to state 73
    estatuto                       shift and go to state 76
    while                          shift and go to state 71
    print                          shift and go to state 77
    idfunc                         shift and go to state 57
    asignacion                     shift and go to state 85
    vars                           shift and go to state 82
    masestatuto                    shift and go to state 124
    condicion                      shift and go to state 81

state 77

    (15) escritura -> print . LPAREN listaprint RPAREN SEMICOLON

    LPAREN          shift and go to state 125


state 78

    (69) estatuto -> COMMENT .

    COMMENT         reduce using rule 69 (estatuto -> COMMENT .)
    CPPCOMMENT      reduce using rule 69 (estatuto -> COMMENT .)
    ID              reduce using rule 69 (estatuto -> COMMENT .)
    IF              reduce using rule 69 (estatuto -> COMMENT .)
    READ            reduce using rule 69 (estatuto -> COMMENT .)
    VAR             reduce using rule 69 (estatuto -> COMMENT .)
    WHILE           reduce using rule 69 (estatuto -> COMMENT .)
    PRINT           reduce using rule 69 (estatuto -> COMMENT .)
    RBRACKET        reduce using rule 69 (estatuto -> COMMENT .)
    RETURN          reduce using rule 69 (estatuto -> COMMENT .)
    ELSE            reduce using rule 69 (estatuto -> COMMENT .)


state 79

    (71) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 126


state 80

    (21) asignacion -> ID . EQUALS expresion SEMICOLON
    (31) idarray -> ID .
    (73) idfunc -> ID .

    EQUALS          shift and go to state 127
    LSQBRACKET      reduce using rule 31 (idarray -> ID .)
    LPAREN          reduce using rule 73 (idfunc -> ID .)


state 81

    (63) estatuto -> condicion .

    COMMENT         reduce using rule 63 (estatuto -> condicion .)
    CPPCOMMENT      reduce using rule 63 (estatuto -> condicion .)
    ID              reduce using rule 63 (estatuto -> condicion .)
    IF              reduce using rule 63 (estatuto -> condicion .)
    READ            reduce using rule 63 (estatuto -> condicion .)
    VAR             reduce using rule 63 (estatuto -> condicion .)
    WHILE           reduce using rule 63 (estatuto -> condicion .)
    PRINT           reduce using rule 63 (estatuto -> condicion .)
    RBRACKET        reduce using rule 63 (estatuto -> condicion .)
    RETURN          reduce using rule 63 (estatuto -> condicion .)
    ELSE            reduce using rule 63 (estatuto -> condicion .)


state 82

    (67) estatuto -> vars .

    COMMENT         reduce using rule 67 (estatuto -> vars .)
    CPPCOMMENT      reduce using rule 67 (estatuto -> vars .)
    ID              reduce using rule 67 (estatuto -> vars .)
    IF              reduce using rule 67 (estatuto -> vars .)
    READ            reduce using rule 67 (estatuto -> vars .)
    VAR             reduce using rule 67 (estatuto -> vars .)
    WHILE           reduce using rule 67 (estatuto -> vars .)
    PRINT           reduce using rule 67 (estatuto -> vars .)
    RBRACKET        reduce using rule 67 (estatuto -> vars .)
    RETURN          reduce using rule 67 (estatuto -> vars .)
    ELSE            reduce using rule 67 (estatuto -> vars .)


state 83

    (5) condicion -> IF . LPAREN expresion RPAREN gotoF estatutobloque masbloque

    LPAREN          shift and go to state 128


state 84

    (9) bloque -> LBRACKET masestatuto . RBRACKET

    RBRACKET        shift and go to state 129


state 85

    (62) estatuto -> asignacion .

    COMMENT         reduce using rule 62 (estatuto -> asignacion .)
    CPPCOMMENT      reduce using rule 62 (estatuto -> asignacion .)
    ID              reduce using rule 62 (estatuto -> asignacion .)
    IF              reduce using rule 62 (estatuto -> asignacion .)
    READ            reduce using rule 62 (estatuto -> asignacion .)
    VAR             reduce using rule 62 (estatuto -> asignacion .)
    WHILE           reduce using rule 62 (estatuto -> asignacion .)
    PRINT           reduce using rule 62 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 62 (estatuto -> asignacion .)
    RETURN          reduce using rule 62 (estatuto -> asignacion .)
    ELSE            reduce using rule 62 (estatuto -> asignacion .)


state 86

    (99) args -> tipo . ID

    ID              shift and go to state 130


state 87

    (100) args -> empty .

    COMMA           reduce using rule 100 (args -> empty .)
    RPAREN          reduce using rule 100 (args -> empty .)


state 88

    (93) funcs -> FUNCTION funcaux LPAREN RPAREN . bloquefunc funcs
    (95) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 131

    bloquefunc                     shift and go to state 132

state 89

    (92) funcs -> FUNCTION funcaux LPAREN args . masargs RPAREN bloquefunc funcs
    (101) masargs -> . COMMA args masargs
    (102) masargs -> . empty
    (120) empty -> .

    COMMA           shift and go to state 133
    RPAREN          reduce using rule 120 (empty -> .)

    empty                          shift and go to state 134
    masargs                        shift and go to state 135

state 90

    (59) addQPComp -> LESSTHANEQUAL .

    LPAREN          reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    ID              reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    CTEINT          reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    CTEFLOAT        reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    CTECHAR         reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    CTESTRING       reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    TRUE            reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)
    FALSE           reduce using rule 59 (addQPComp -> LESSTHANEQUAL .)


state 91

    (58) addQPComp -> MORETHANEQUAL .

    LPAREN          reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    ID              reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    CTEINT          reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    CTEFLOAT        reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    CTECHAR         reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    CTESTRING       reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    TRUE            reduce using rule 58 (addQPComp -> MORETHANEQUAL .)
    FALSE           reduce using rule 58 (addQPComp -> MORETHANEQUAL .)


state 92

    (54) addQPComp -> MORETHAN .

    LPAREN          reduce using rule 54 (addQPComp -> MORETHAN .)
    ID              reduce using rule 54 (addQPComp -> MORETHAN .)
    CTEINT          reduce using rule 54 (addQPComp -> MORETHAN .)
    CTEFLOAT        reduce using rule 54 (addQPComp -> MORETHAN .)
    CTECHAR         reduce using rule 54 (addQPComp -> MORETHAN .)
    CTESTRING       reduce using rule 54 (addQPComp -> MORETHAN .)
    TRUE            reduce using rule 54 (addQPComp -> MORETHAN .)
    FALSE           reduce using rule 54 (addQPComp -> MORETHAN .)


state 93

    (57) addQPComp -> ISEQUALTO .

    LPAREN          reduce using rule 57 (addQPComp -> ISEQUALTO .)
    ID              reduce using rule 57 (addQPComp -> ISEQUALTO .)
    CTEINT          reduce using rule 57 (addQPComp -> ISEQUALTO .)
    CTEFLOAT        reduce using rule 57 (addQPComp -> ISEQUALTO .)
    CTECHAR         reduce using rule 57 (addQPComp -> ISEQUALTO .)
    CTESTRING       reduce using rule 57 (addQPComp -> ISEQUALTO .)
    TRUE            reduce using rule 57 (addQPComp -> ISEQUALTO .)
    FALSE           reduce using rule 57 (addQPComp -> ISEQUALTO .)


state 94

    (60) expcompcontinuo -> addQPComp . expcomp
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    ctechar                        shift and go to state 53
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    termino                        shift and go to state 62
    expcomp                        shift and go to state 136
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    ctebool                        shift and go to state 63

state 95

    (56) addQPComp -> NOTEQUAL .

    LPAREN          reduce using rule 56 (addQPComp -> NOTEQUAL .)
    ID              reduce using rule 56 (addQPComp -> NOTEQUAL .)
    CTEINT          reduce using rule 56 (addQPComp -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 56 (addQPComp -> NOTEQUAL .)
    CTECHAR         reduce using rule 56 (addQPComp -> NOTEQUAL .)
    CTESTRING       reduce using rule 56 (addQPComp -> NOTEQUAL .)
    TRUE            reduce using rule 56 (addQPComp -> NOTEQUAL .)
    FALSE           reduce using rule 56 (addQPComp -> NOTEQUAL .)


state 96

    (53) expcomp -> exp expcompcontinuo .

    AND             reduce using rule 53 (expcomp -> exp expcompcontinuo .)
    OR              reduce using rule 53 (expcomp -> exp expcompcontinuo .)
    COMMA           reduce using rule 53 (expcomp -> exp expcompcontinuo .)
    SEMICOLON       reduce using rule 53 (expcomp -> exp expcompcontinuo .)
    RPAREN          reduce using rule 53 (expcomp -> exp expcompcontinuo .)
    RSQBRACKET      reduce using rule 53 (expcomp -> exp expcompcontinuo .)


state 97

    (55) addQPComp -> LESSTHAN .

    LPAREN          reduce using rule 55 (addQPComp -> LESSTHAN .)
    ID              reduce using rule 55 (addQPComp -> LESSTHAN .)
    CTEINT          reduce using rule 55 (addQPComp -> LESSTHAN .)
    CTEFLOAT        reduce using rule 55 (addQPComp -> LESSTHAN .)
    CTECHAR         reduce using rule 55 (addQPComp -> LESSTHAN .)
    CTESTRING       reduce using rule 55 (addQPComp -> LESSTHAN .)
    TRUE            reduce using rule 55 (addQPComp -> LESSTHAN .)
    FALSE           reduce using rule 55 (addQPComp -> LESSTHAN .)


state 98

    (61) expcompcontinuo -> empty .

    AND             reduce using rule 61 (expcompcontinuo -> empty .)
    OR              reduce using rule 61 (expcompcontinuo -> empty .)
    COMMA           reduce using rule 61 (expcompcontinuo -> empty .)
    SEMICOLON       reduce using rule 61 (expcompcontinuo -> empty .)
    RPAREN          reduce using rule 61 (expcompcontinuo -> empty .)
    RSQBRACKET      reduce using rule 61 (expcompcontinuo -> empty .)


state 99

    (30) varid -> idarray LSQBRACKET . dimsvar RSQBRACKET
    (32) dimsvar -> . expdimvar masdimsvar
    (33) expdimvar -> . expresion
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 137
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    expdimvar                      shift and go to state 138
    ctechar                        shift and go to state 53
    dimsvar                        shift and go to state 139
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 100

    (23) factor -> leftparen expresion . rightparen
    (28) rightparen -> . RPAREN

    RPAREN          shift and go to state 141

    rightparen                     shift and go to state 140

state 101

    (72) llamafunc -> idfunc LPAREN . funcargs RPAREN
    (74) funcargs -> . expresion listafuncargs checarparams
    (75) funcargs -> . empty
    (43) expresion -> . expcomp masexpresion
    (120) empty -> .
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    RPAREN          reduce using rule 120 (empty -> .)
    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 142
    funcargs                       shift and go to state 143
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    empty                          shift and go to state 144
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    termino                        shift and go to state 62
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    ctebool                        shift and go to state 63

state 102

    (45) addQPAO -> OR .

    LPAREN          reduce using rule 45 (addQPAO -> OR .)
    ID              reduce using rule 45 (addQPAO -> OR .)
    CTEINT          reduce using rule 45 (addQPAO -> OR .)
    CTEFLOAT        reduce using rule 45 (addQPAO -> OR .)
    CTECHAR         reduce using rule 45 (addQPAO -> OR .)
    CTESTRING       reduce using rule 45 (addQPAO -> OR .)
    TRUE            reduce using rule 45 (addQPAO -> OR .)
    FALSE           reduce using rule 45 (addQPAO -> OR .)


state 103

    (43) expresion -> expcomp masexpresion .

    COMMA           reduce using rule 43 (expresion -> expcomp masexpresion .)
    RPAREN          reduce using rule 43 (expresion -> expcomp masexpresion .)
    SEMICOLON       reduce using rule 43 (expresion -> expcomp masexpresion .)
    RSQBRACKET      reduce using rule 43 (expresion -> expcomp masexpresion .)


state 104

    (46) masexpresion -> addQPAO . expresion
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 145
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 105

    (44) addQPAO -> AND .

    LPAREN          reduce using rule 44 (addQPAO -> AND .)
    ID              reduce using rule 44 (addQPAO -> AND .)
    CTEINT          reduce using rule 44 (addQPAO -> AND .)
    CTEFLOAT        reduce using rule 44 (addQPAO -> AND .)
    CTECHAR         reduce using rule 44 (addQPAO -> AND .)
    CTESTRING       reduce using rule 44 (addQPAO -> AND .)
    TRUE            reduce using rule 44 (addQPAO -> AND .)
    FALSE           reduce using rule 44 (addQPAO -> AND .)


state 106

    (47) masexpresion -> empty .

    COMMA           reduce using rule 47 (masexpresion -> empty .)
    SEMICOLON       reduce using rule 47 (masexpresion -> empty .)
    RPAREN          reduce using rule 47 (masexpresion -> empty .)
    RSQBRACKET      reduce using rule 47 (masexpresion -> empty .)


state 107

    (49) addQTD -> TIMES .

    LPAREN          reduce using rule 49 (addQTD -> TIMES .)
    ID              reduce using rule 49 (addQTD -> TIMES .)
    CTEINT          reduce using rule 49 (addQTD -> TIMES .)
    CTEFLOAT        reduce using rule 49 (addQTD -> TIMES .)
    CTECHAR         reduce using rule 49 (addQTD -> TIMES .)
    CTESTRING       reduce using rule 49 (addQTD -> TIMES .)
    TRUE            reduce using rule 49 (addQTD -> TIMES .)
    FALSE           reduce using rule 49 (addQTD -> TIMES .)


state 108

    (51) masterminos -> addQTD . termino
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    idarray                        shift and go to state 48
    ctechar                        shift and go to state 53
    ctestring                      shift and go to state 61
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    idfunc                         shift and go to state 57
    leftparen                      shift and go to state 49
    factor                         shift and go to state 60
    varid                          shift and go to state 50
    ctebool                        shift and go to state 63
    termino                        shift and go to state 146

state 109

    (48) termino -> factor masterminos .

    PLUS            reduce using rule 48 (termino -> factor masterminos .)
    MINUS           reduce using rule 48 (termino -> factor masterminos .)
    MORETHAN        reduce using rule 48 (termino -> factor masterminos .)
    LESSTHAN        reduce using rule 48 (termino -> factor masterminos .)
    NOTEQUAL        reduce using rule 48 (termino -> factor masterminos .)
    ISEQUALTO       reduce using rule 48 (termino -> factor masterminos .)
    MORETHANEQUAL   reduce using rule 48 (termino -> factor masterminos .)
    LESSTHANEQUAL   reduce using rule 48 (termino -> factor masterminos .)
    AND             reduce using rule 48 (termino -> factor masterminos .)
    OR              reduce using rule 48 (termino -> factor masterminos .)
    SEMICOLON       reduce using rule 48 (termino -> factor masterminos .)
    COMMA           reduce using rule 48 (termino -> factor masterminos .)
    RPAREN          reduce using rule 48 (termino -> factor masterminos .)
    RSQBRACKET      reduce using rule 48 (termino -> factor masterminos .)


state 110

    (50) addQTD -> DIVIDE .

    LPAREN          reduce using rule 50 (addQTD -> DIVIDE .)
    ID              reduce using rule 50 (addQTD -> DIVIDE .)
    CTEINT          reduce using rule 50 (addQTD -> DIVIDE .)
    CTEFLOAT        reduce using rule 50 (addQTD -> DIVIDE .)
    CTECHAR         reduce using rule 50 (addQTD -> DIVIDE .)
    CTESTRING       reduce using rule 50 (addQTD -> DIVIDE .)
    TRUE            reduce using rule 50 (addQTD -> DIVIDE .)
    FALSE           reduce using rule 50 (addQTD -> DIVIDE .)


state 111

    (52) masterminos -> empty .

    PLUS            reduce using rule 52 (masterminos -> empty .)
    MINUS           reduce using rule 52 (masterminos -> empty .)
    MORETHAN        reduce using rule 52 (masterminos -> empty .)
    LESSTHAN        reduce using rule 52 (masterminos -> empty .)
    NOTEQUAL        reduce using rule 52 (masterminos -> empty .)
    ISEQUALTO       reduce using rule 52 (masterminos -> empty .)
    MORETHANEQUAL   reduce using rule 52 (masterminos -> empty .)
    LESSTHANEQUAL   reduce using rule 52 (masterminos -> empty .)
    AND             reduce using rule 52 (masterminos -> empty .)
    OR              reduce using rule 52 (masterminos -> empty .)
    COMMA           reduce using rule 52 (masterminos -> empty .)
    SEMICOLON       reduce using rule 52 (masterminos -> empty .)
    RPAREN          reduce using rule 52 (masterminos -> empty .)
    RSQBRACKET      reduce using rule 52 (masterminos -> empty .)


state 112

    (36) exp -> termino masexp .

    MORETHAN        reduce using rule 36 (exp -> termino masexp .)
    LESSTHAN        reduce using rule 36 (exp -> termino masexp .)
    NOTEQUAL        reduce using rule 36 (exp -> termino masexp .)
    ISEQUALTO       reduce using rule 36 (exp -> termino masexp .)
    MORETHANEQUAL   reduce using rule 36 (exp -> termino masexp .)
    LESSTHANEQUAL   reduce using rule 36 (exp -> termino masexp .)
    AND             reduce using rule 36 (exp -> termino masexp .)
    OR              reduce using rule 36 (exp -> termino masexp .)
    COMMA           reduce using rule 36 (exp -> termino masexp .)
    RSQBRACKET      reduce using rule 36 (exp -> termino masexp .)
    SEMICOLON       reduce using rule 36 (exp -> termino masexp .)
    RPAREN          reduce using rule 36 (exp -> termino masexp .)


state 113

    (37) masexp -> addQPPM . exp
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    ctechar                        shift and go to state 53
    ctestring                      shift and go to state 61
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    idfunc                         shift and go to state 57
    exp                            shift and go to state 147
    leftparen                      shift and go to state 49
    factor                         shift and go to state 60
    varid                          shift and go to state 50
    idarray                        shift and go to state 48
    ctebool                        shift and go to state 63
    termino                        shift and go to state 62

state 114

    (39) addQPPM -> PLUS .

    LPAREN          reduce using rule 39 (addQPPM -> PLUS .)
    ID              reduce using rule 39 (addQPPM -> PLUS .)
    CTEINT          reduce using rule 39 (addQPPM -> PLUS .)
    CTEFLOAT        reduce using rule 39 (addQPPM -> PLUS .)
    CTECHAR         reduce using rule 39 (addQPPM -> PLUS .)
    CTESTRING       reduce using rule 39 (addQPPM -> PLUS .)
    TRUE            reduce using rule 39 (addQPPM -> PLUS .)
    FALSE           reduce using rule 39 (addQPPM -> PLUS .)


state 115

    (40) addQPPM -> MINUS .

    LPAREN          reduce using rule 40 (addQPPM -> MINUS .)
    ID              reduce using rule 40 (addQPPM -> MINUS .)
    CTEINT          reduce using rule 40 (addQPPM -> MINUS .)
    CTEFLOAT        reduce using rule 40 (addQPPM -> MINUS .)
    CTECHAR         reduce using rule 40 (addQPPM -> MINUS .)
    CTESTRING       reduce using rule 40 (addQPPM -> MINUS .)
    TRUE            reduce using rule 40 (addQPPM -> MINUS .)
    FALSE           reduce using rule 40 (addQPPM -> MINUS .)


state 116

    (38) masexp -> empty .

    MORETHAN        reduce using rule 38 (masexp -> empty .)
    LESSTHAN        reduce using rule 38 (masexp -> empty .)
    NOTEQUAL        reduce using rule 38 (masexp -> empty .)
    ISEQUALTO       reduce using rule 38 (masexp -> empty .)
    MORETHANEQUAL   reduce using rule 38 (masexp -> empty .)
    LESSTHANEQUAL   reduce using rule 38 (masexp -> empty .)
    AND             reduce using rule 38 (masexp -> empty .)
    OR              reduce using rule 38 (masexp -> empty .)
    COMMA           reduce using rule 38 (masexp -> empty .)
    SEMICOLON       reduce using rule 38 (masexp -> empty .)
    RPAREN          reduce using rule 38 (masexp -> empty .)
    RSQBRACKET      reduce using rule 38 (masexp -> empty .)


state 117

    (85) initvar -> ID LSQBRACKET dims RSQBRACKET .

    COMMA           reduce using rule 85 (initvar -> ID LSQBRACKET dims RSQBRACKET .)
    SEMICOLON       reduce using rule 85 (initvar -> ID LSQBRACKET dims RSQBRACKET .)


state 118

    (88) masdims -> COMMA . dims
    (87) dims -> . CTEINT masdims

    CTEINT          shift and go to state 65

    dims                           shift and go to state 148

state 119

    (87) dims -> CTEINT masdims .

    RSQBRACKET      reduce using rule 87 (dims -> CTEINT masdims .)


state 120

    (89) masdims -> empty .

    RSQBRACKET      reduce using rule 89 (masdims -> empty .)


state 121

    (68) estatuto -> llamafunc SEMICOLON .

    COMMENT         reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    CPPCOMMENT      reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    READ            reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    VAR             reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    RBRACKET        reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    RETURN          reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)
    ELSE            reduce using rule 68 (estatuto -> llamafunc SEMICOLON .)


state 122

    (13) ciclo -> while LPAREN . expresion RPAREN gotoF estatutobloque goto
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 149
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 123

    (22) asignacion -> idarray LSQBRACKET . dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (32) dimsvar -> . expdimvar masdimsvar
    (33) expdimvar -> . expresion
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 137
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    expdimvar                      shift and go to state 138
    ctechar                        shift and go to state 53
    dimsvar                        shift and go to state 150
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 124

    (79) masestatuto -> estatuto masestatuto .

    RETURN          reduce using rule 79 (masestatuto -> estatuto masestatuto .)
    RBRACKET        reduce using rule 79 (masestatuto -> estatuto masestatuto .)


state 125

    (15) escritura -> print LPAREN . listaprint RPAREN SEMICOLON
    (17) listaprint -> . expresion masprint
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 151
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    listaprint                     shift and go to state 152
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 126

    (71) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 153


state 127

    (21) asignacion -> ID EQUALS . expresion SEMICOLON
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 154
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 128

    (5) condicion -> IF LPAREN . expresion RPAREN gotoF estatutobloque masbloque
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 155
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 129

    (9) bloque -> LBRACKET masestatuto RBRACKET .

    COMMENT         reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    CPPCOMMENT      reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    ID              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    IF              reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    READ            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    VAR             reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    WHILE           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    PRINT           reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RBRACKET        reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    RETURN          reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    ELSE            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)
    $end            reduce using rule 9 (bloque -> LBRACKET masestatuto RBRACKET .)


state 130

    (99) args -> tipo ID .

    COMMA           reduce using rule 99 (args -> tipo ID .)
    RPAREN          reduce using rule 99 (args -> tipo ID .)


state 131

    (95) bloquefunc -> LBRACKET . masestatuto retorno RBRACKET
    (79) masestatuto -> . estatuto masestatuto
    (80) masestatuto -> . empty
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (120) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    RETURN          reduce using rule 120 (empty -> .)
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    escritura                      shift and go to state 74
    lectura                        shift and go to state 68
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 70
    idarray                        shift and go to state 73
    estatuto                       shift and go to state 76
    while                          shift and go to state 71
    print                          shift and go to state 77
    idfunc                         shift and go to state 57
    condicion                      shift and go to state 81
    vars                           shift and go to state 82
    masestatuto                    shift and go to state 156
    asignacion                     shift and go to state 85

state 132

    (93) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc . funcs
    (92) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (93) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (94) funcs -> . empty
    (120) empty -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 120 (empty -> .)

    funcs                          shift and go to state 157
    empty                          shift and go to state 20

state 133

    (101) masargs -> COMMA . args masargs
    (99) args -> . tipo ID
    (100) args -> . empty
    (103) tipo -> . INT
    (104) tipo -> . FLOAT
    (105) tipo -> . CHAR
    (106) tipo -> . BOOL
    (107) tipo -> . STRING
    (108) tipo -> . VOID
    (120) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 15
    BOOL            shift and go to state 14
    STRING          shift and go to state 11
    VOID            shift and go to state 16
    COMMA           reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)

    args                           shift and go to state 158
    tipo                           shift and go to state 86
    empty                          shift and go to state 87

state 134

    (102) masargs -> empty .

    RPAREN          reduce using rule 102 (masargs -> empty .)


state 135

    (92) funcs -> FUNCTION funcaux LPAREN args masargs . RPAREN bloquefunc funcs

    RPAREN          shift and go to state 159


state 136

    (60) expcompcontinuo -> addQPComp expcomp .

    AND             reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)
    OR              reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)
    COMMA           reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)
    SEMICOLON       reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)
    RPAREN          reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)
    RSQBRACKET      reduce using rule 60 (expcompcontinuo -> addQPComp expcomp .)


state 137

    (33) expdimvar -> expresion .

    COMMA           reduce using rule 33 (expdimvar -> expresion .)
    RSQBRACKET      reduce using rule 33 (expdimvar -> expresion .)


state 138

    (32) dimsvar -> expdimvar . masdimsvar
    (34) masdimsvar -> . COMMA dimsvar
    (35) masdimsvar -> . empty
    (120) empty -> .

    COMMA           shift and go to state 161
    RSQBRACKET      reduce using rule 120 (empty -> .)

    masdimsvar                     shift and go to state 160
    empty                          shift and go to state 162

state 139

    (30) varid -> idarray LSQBRACKET dimsvar . RSQBRACKET

    RSQBRACKET      shift and go to state 163


state 140

    (23) factor -> leftparen expresion rightparen .

    TIMES           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    DIVIDE          reduce using rule 23 (factor -> leftparen expresion rightparen .)
    PLUS            reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MINUS           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    NOTEQUAL        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    ISEQUALTO       reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    AND             reduce using rule 23 (factor -> leftparen expresion rightparen .)
    OR              reduce using rule 23 (factor -> leftparen expresion rightparen .)
    SEMICOLON       reduce using rule 23 (factor -> leftparen expresion rightparen .)
    COMMA           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RSQBRACKET      reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RPAREN          reduce using rule 23 (factor -> leftparen expresion rightparen .)


state 141

    (28) rightparen -> RPAREN .

    TIMES           reduce using rule 28 (rightparen -> RPAREN .)
    DIVIDE          reduce using rule 28 (rightparen -> RPAREN .)
    PLUS            reduce using rule 28 (rightparen -> RPAREN .)
    MINUS           reduce using rule 28 (rightparen -> RPAREN .)
    MORETHAN        reduce using rule 28 (rightparen -> RPAREN .)
    LESSTHAN        reduce using rule 28 (rightparen -> RPAREN .)
    NOTEQUAL        reduce using rule 28 (rightparen -> RPAREN .)
    ISEQUALTO       reduce using rule 28 (rightparen -> RPAREN .)
    MORETHANEQUAL   reduce using rule 28 (rightparen -> RPAREN .)
    LESSTHANEQUAL   reduce using rule 28 (rightparen -> RPAREN .)
    AND             reduce using rule 28 (rightparen -> RPAREN .)
    OR              reduce using rule 28 (rightparen -> RPAREN .)
    COMMA           reduce using rule 28 (rightparen -> RPAREN .)
    SEMICOLON       reduce using rule 28 (rightparen -> RPAREN .)
    RPAREN          reduce using rule 28 (rightparen -> RPAREN .)
    RSQBRACKET      reduce using rule 28 (rightparen -> RPAREN .)


state 142

    (74) funcargs -> expresion . listafuncargs checarparams
    (76) listafuncargs -> . COMMA expresion listafuncargs
    (77) listafuncargs -> . empty
    (120) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 120 (empty -> .)

    listafuncargs                  shift and go to state 165
    empty                          shift and go to state 166

state 143

    (72) llamafunc -> idfunc LPAREN funcargs . RPAREN

    RPAREN          shift and go to state 167


state 144

    (75) funcargs -> empty .

    RPAREN          reduce using rule 75 (funcargs -> empty .)


state 145

    (46) masexpresion -> addQPAO expresion .

    COMMA           reduce using rule 46 (masexpresion -> addQPAO expresion .)
    SEMICOLON       reduce using rule 46 (masexpresion -> addQPAO expresion .)
    RPAREN          reduce using rule 46 (masexpresion -> addQPAO expresion .)
    RSQBRACKET      reduce using rule 46 (masexpresion -> addQPAO expresion .)


state 146

    (51) masterminos -> addQTD termino .

    PLUS            reduce using rule 51 (masterminos -> addQTD termino .)
    MINUS           reduce using rule 51 (masterminos -> addQTD termino .)
    MORETHAN        reduce using rule 51 (masterminos -> addQTD termino .)
    LESSTHAN        reduce using rule 51 (masterminos -> addQTD termino .)
    NOTEQUAL        reduce using rule 51 (masterminos -> addQTD termino .)
    ISEQUALTO       reduce using rule 51 (masterminos -> addQTD termino .)
    MORETHANEQUAL   reduce using rule 51 (masterminos -> addQTD termino .)
    LESSTHANEQUAL   reduce using rule 51 (masterminos -> addQTD termino .)
    AND             reduce using rule 51 (masterminos -> addQTD termino .)
    OR              reduce using rule 51 (masterminos -> addQTD termino .)
    COMMA           reduce using rule 51 (masterminos -> addQTD termino .)
    SEMICOLON       reduce using rule 51 (masterminos -> addQTD termino .)
    RPAREN          reduce using rule 51 (masterminos -> addQTD termino .)
    RSQBRACKET      reduce using rule 51 (masterminos -> addQTD termino .)


state 147

    (37) masexp -> addQPPM exp .

    MORETHAN        reduce using rule 37 (masexp -> addQPPM exp .)
    LESSTHAN        reduce using rule 37 (masexp -> addQPPM exp .)
    NOTEQUAL        reduce using rule 37 (masexp -> addQPPM exp .)
    ISEQUALTO       reduce using rule 37 (masexp -> addQPPM exp .)
    MORETHANEQUAL   reduce using rule 37 (masexp -> addQPPM exp .)
    LESSTHANEQUAL   reduce using rule 37 (masexp -> addQPPM exp .)
    AND             reduce using rule 37 (masexp -> addQPPM exp .)
    OR              reduce using rule 37 (masexp -> addQPPM exp .)
    COMMA           reduce using rule 37 (masexp -> addQPPM exp .)
    SEMICOLON       reduce using rule 37 (masexp -> addQPPM exp .)
    RPAREN          reduce using rule 37 (masexp -> addQPPM exp .)
    RSQBRACKET      reduce using rule 37 (masexp -> addQPPM exp .)


state 148

    (88) masdims -> COMMA dims .

    RSQBRACKET      reduce using rule 88 (masdims -> COMMA dims .)


state 149

    (13) ciclo -> while LPAREN expresion . RPAREN gotoF estatutobloque goto

    RPAREN          shift and go to state 168


state 150

    (22) asignacion -> idarray LSQBRACKET dimsvar . RSQBRACKET EQUALS expresion SEMICOLON

    RSQBRACKET      shift and go to state 169


state 151

    (17) listaprint -> expresion . masprint
    (18) masprint -> . addQPP listaprint
    (19) masprint -> . empty
    (20) addQPP -> . COMMA
    (120) empty -> .

    COMMA           shift and go to state 171
    RPAREN          reduce using rule 120 (empty -> .)

    addQPP                         shift and go to state 170
    masprint                       shift and go to state 172
    empty                          shift and go to state 173

state 152

    (15) escritura -> print LPAREN listaprint . RPAREN SEMICOLON

    RPAREN          shift and go to state 174


state 153

    (71) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 175


state 154

    (21) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 176


state 155

    (5) condicion -> IF LPAREN expresion . RPAREN gotoF estatutobloque masbloque

    RPAREN          shift and go to state 177


state 156

    (95) bloquefunc -> LBRACKET masestatuto . retorno RBRACKET
    (96) retorno -> . RETURN expresion SEMICOLON
    (97) retorno -> . RETURN SEMICOLON

    RETURN          shift and go to state 178

    retorno                        shift and go to state 179

state 157

    (93) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .

    MAIN            reduce using rule 93 (funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .)


state 158

    (101) masargs -> COMMA args . masargs
    (101) masargs -> . COMMA args masargs
    (102) masargs -> . empty
    (120) empty -> .

    COMMA           shift and go to state 133
    RPAREN          reduce using rule 120 (empty -> .)

    masargs                        shift and go to state 180
    empty                          shift and go to state 134

state 159

    (92) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN . bloquefunc funcs
    (95) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 131

    bloquefunc                     shift and go to state 181

state 160

    (32) dimsvar -> expdimvar masdimsvar .

    RSQBRACKET      reduce using rule 32 (dimsvar -> expdimvar masdimsvar .)


state 161

    (34) masdimsvar -> COMMA . dimsvar
    (32) dimsvar -> . expdimvar masdimsvar
    (33) expdimvar -> . expresion
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 137
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    expdimvar                      shift and go to state 138
    ctechar                        shift and go to state 53
    dimsvar                        shift and go to state 182
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 162

    (35) masdimsvar -> empty .

    RSQBRACKET      reduce using rule 35 (masdimsvar -> empty .)


state 163

    (30) varid -> idarray LSQBRACKET dimsvar RSQBRACKET .

    TIMES           reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    DIVIDE          reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    PLUS            reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MINUS           reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHAN        reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHAN        reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    NOTEQUAL        reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    ISEQUALTO       reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    MORETHANEQUAL   reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    LESSTHANEQUAL   reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    AND             reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    OR              reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    COMMA           reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RPAREN          reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    SEMICOLON       reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)
    RSQBRACKET      reduce using rule 30 (varid -> idarray LSQBRACKET dimsvar RSQBRACKET .)


state 164

    (76) listafuncargs -> COMMA . expresion listafuncargs
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 183
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 165

    (74) funcargs -> expresion listafuncargs . checarparams
    (78) checarparams -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)

    checarparams                   shift and go to state 184
    empty                          shift and go to state 185

state 166

    (77) listafuncargs -> empty .

    RPAREN          reduce using rule 77 (listafuncargs -> empty .)


state 167

    (72) llamafunc -> idfunc LPAREN funcargs RPAREN .

    TIMES           reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    DIVIDE          reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    PLUS            reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MINUS           reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHAN        reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHAN        reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    NOTEQUAL        reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    ISEQUALTO       reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHANEQUAL   reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHANEQUAL   reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    AND             reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    OR              reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    COMMA           reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RPAREN          reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    SEMICOLON       reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RSQBRACKET      reduce using rule 72 (llamafunc -> idfunc LPAREN funcargs RPAREN .)


state 168

    (13) ciclo -> while LPAREN expresion RPAREN . gotoF estatutobloque goto
    (8) gotoF -> . empty
    (120) empty -> .

    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

    gotoF                          shift and go to state 187
    empty                          shift and go to state 186

state 169

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 188


state 170

    (18) masprint -> addQPP . listaprint
    (17) listaprint -> . expresion masprint
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 151
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    listaprint                     shift and go to state 189
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 171

    (20) addQPP -> COMMA .

    LPAREN          reduce using rule 20 (addQPP -> COMMA .)
    ID              reduce using rule 20 (addQPP -> COMMA .)
    CTEINT          reduce using rule 20 (addQPP -> COMMA .)
    CTEFLOAT        reduce using rule 20 (addQPP -> COMMA .)
    CTECHAR         reduce using rule 20 (addQPP -> COMMA .)
    CTESTRING       reduce using rule 20 (addQPP -> COMMA .)
    TRUE            reduce using rule 20 (addQPP -> COMMA .)
    FALSE           reduce using rule 20 (addQPP -> COMMA .)


state 172

    (17) listaprint -> expresion masprint .

    RPAREN          reduce using rule 17 (listaprint -> expresion masprint .)


state 173

    (19) masprint -> empty .

    RPAREN          reduce using rule 19 (masprint -> empty .)


state 174

    (15) escritura -> print LPAREN listaprint RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 175

    (71) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 176

    (21) asignacion -> ID EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    READ            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 177

    (5) condicion -> IF LPAREN expresion RPAREN . gotoF estatutobloque masbloque
    (8) gotoF -> . empty
    (120) empty -> .

    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)

    gotoF                          shift and go to state 192
    empty                          shift and go to state 186

state 178

    (96) retorno -> RETURN . expresion SEMICOLON
    (97) retorno -> RETURN . SEMICOLON
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    SEMICOLON       shift and go to state 194
    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 193
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 179

    (95) bloquefunc -> LBRACKET masestatuto retorno . RBRACKET

    RBRACKET        shift and go to state 195


state 180

    (101) masargs -> COMMA args masargs .

    RPAREN          reduce using rule 101 (masargs -> COMMA args masargs .)


state 181

    (92) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc . funcs
    (92) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (93) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (94) funcs -> . empty
    (120) empty -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 120 (empty -> .)

    funcs                          shift and go to state 196
    empty                          shift and go to state 20

state 182

    (34) masdimsvar -> COMMA dimsvar .

    RSQBRACKET      reduce using rule 34 (masdimsvar -> COMMA dimsvar .)


state 183

    (76) listafuncargs -> COMMA expresion . listafuncargs
    (76) listafuncargs -> . COMMA expresion listafuncargs
    (77) listafuncargs -> . empty
    (120) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 120 (empty -> .)

    listafuncargs                  shift and go to state 197
    empty                          shift and go to state 166

state 184

    (74) funcargs -> expresion listafuncargs checarparams .

    RPAREN          reduce using rule 74 (funcargs -> expresion listafuncargs checarparams .)


state 185

    (78) checarparams -> empty .

    RPAREN          reduce using rule 78 (checarparams -> empty .)


state 186

    (8) gotoF -> empty .

    COMMENT         reduce using rule 8 (gotoF -> empty .)
    CPPCOMMENT      reduce using rule 8 (gotoF -> empty .)
    LBRACKET        reduce using rule 8 (gotoF -> empty .)
    ID              reduce using rule 8 (gotoF -> empty .)
    IF              reduce using rule 8 (gotoF -> empty .)
    READ            reduce using rule 8 (gotoF -> empty .)
    VAR             reduce using rule 8 (gotoF -> empty .)
    WHILE           reduce using rule 8 (gotoF -> empty .)
    PRINT           reduce using rule 8 (gotoF -> empty .)
    RBRACKET        reduce using rule 8 (gotoF -> empty .)
    RETURN          reduce using rule 8 (gotoF -> empty .)
    ELSE            reduce using rule 8 (gotoF -> empty .)


state 187

    (13) ciclo -> while LPAREN expresion RPAREN gotoF . estatutobloque goto
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (120) empty -> .
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    LBRACKET        shift and go to state 34
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    bloque                         shift and go to state 199
    estatuto                       shift and go to state 198
    lectura                        shift and go to state 68
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 6
    idarray                        shift and go to state 73
    escritura                      shift and go to state 74
    while                          shift and go to state 71
    print                          shift and go to state 77
    estatutobloque                 shift and go to state 200
    idfunc                         shift and go to state 57
    asignacion                     shift and go to state 85
    vars                           shift and go to state 82
    condicion                      shift and go to state 81

state 188

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS . expresion SEMICOLON
    (43) expresion -> . expcomp masexpresion
    (53) expcomp -> . exp expcompcontinuo
    (36) exp -> . termino masexp
    (48) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (109) varcte -> . cteint
    (110) varcte -> . ctefloat
    (111) varcte -> . ctechar
    (112) varcte -> . ctestring
    (113) varcte -> . ctebool
    (29) varid -> . ID
    (30) varid -> . idarray LSQBRACKET dimsvar RSQBRACKET
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (114) cteint -> . CTEINT
    (115) ctefloat -> . CTEFLOAT
    (116) ctechar -> . CTECHAR
    (117) ctestring -> . CTESTRING
    (118) ctebool -> . TRUE
    (119) ctebool -> . FALSE
    (31) idarray -> . ID
    (73) idfunc -> . ID

    LPAREN          shift and go to state 51
    ID              shift and go to state 46
    CTEINT          shift and go to state 52
    CTEFLOAT        shift and go to state 56
    CTECHAR         shift and go to state 54
    CTESTRING       shift and go to state 55
    TRUE            shift and go to state 41
    FALSE           shift and go to state 59

    expresion                      shift and go to state 201
    cteint                         shift and go to state 42
    varcte                         shift and go to state 43
    llamafunc                      shift and go to state 44
    ctefloat                       shift and go to state 45
    exp                            shift and go to state 47
    idarray                        shift and go to state 48
    leftparen                      shift and go to state 49
    varid                          shift and go to state 50
    ctechar                        shift and go to state 53
    expcomp                        shift and go to state 58
    idfunc                         shift and go to state 57
    factor                         shift and go to state 60
    ctestring                      shift and go to state 61
    termino                        shift and go to state 62
    ctebool                        shift and go to state 63

state 189

    (18) masprint -> addQPP listaprint .

    RPAREN          reduce using rule 18 (masprint -> addQPP listaprint .)


state 190

    (15) escritura -> print LPAREN listaprint RPAREN SEMICOLON .

    COMMENT         reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ID              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    IF              reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    READ            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    VAR             reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ELSE            reduce using rule 15 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)


state 191

    (71) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    COMMENT         reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ELSE            reduce using rule 71 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 192

    (5) condicion -> IF LPAREN expresion RPAREN gotoF . estatutobloque masbloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (120) empty -> .
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    LBRACKET        shift and go to state 34
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    lectura                        shift and go to state 68
    estatuto                       shift and go to state 198
    bloque                         shift and go to state 199
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 6
    escritura                      shift and go to state 74
    while                          shift and go to state 71
    print                          shift and go to state 77
    estatutobloque                 shift and go to state 202
    idfunc                         shift and go to state 57
    asignacion                     shift and go to state 85
    vars                           shift and go to state 82
    condicion                      shift and go to state 81
    idarray                        shift and go to state 73

state 193

    (96) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 203


state 194

    (97) retorno -> RETURN SEMICOLON .

    RBRACKET        reduce using rule 97 (retorno -> RETURN SEMICOLON .)


state 195

    (95) bloquefunc -> LBRACKET masestatuto retorno RBRACKET .

    FUNCTION        reduce using rule 95 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)
    MAIN            reduce using rule 95 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)


state 196

    (92) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .

    MAIN            reduce using rule 92 (funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .)


state 197

    (76) listafuncargs -> COMMA expresion listafuncargs .

    RPAREN          reduce using rule 76 (listafuncargs -> COMMA expresion listafuncargs .)


state 198

    (6) estatutobloque -> estatuto .

    COMMENT         reduce using rule 6 (estatutobloque -> estatuto .)
    CPPCOMMENT      reduce using rule 6 (estatutobloque -> estatuto .)
    ID              reduce using rule 6 (estatutobloque -> estatuto .)
    IF              reduce using rule 6 (estatutobloque -> estatuto .)
    READ            reduce using rule 6 (estatutobloque -> estatuto .)
    VAR             reduce using rule 6 (estatutobloque -> estatuto .)
    WHILE           reduce using rule 6 (estatutobloque -> estatuto .)
    PRINT           reduce using rule 6 (estatutobloque -> estatuto .)
    RBRACKET        reduce using rule 6 (estatutobloque -> estatuto .)
    RETURN          reduce using rule 6 (estatutobloque -> estatuto .)
    ELSE            reduce using rule 6 (estatutobloque -> estatuto .)


state 199

    (7) estatutobloque -> bloque .

    COMMENT         reduce using rule 7 (estatutobloque -> bloque .)
    CPPCOMMENT      reduce using rule 7 (estatutobloque -> bloque .)
    ID              reduce using rule 7 (estatutobloque -> bloque .)
    IF              reduce using rule 7 (estatutobloque -> bloque .)
    READ            reduce using rule 7 (estatutobloque -> bloque .)
    VAR             reduce using rule 7 (estatutobloque -> bloque .)
    WHILE           reduce using rule 7 (estatutobloque -> bloque .)
    PRINT           reduce using rule 7 (estatutobloque -> bloque .)
    RBRACKET        reduce using rule 7 (estatutobloque -> bloque .)
    RETURN          reduce using rule 7 (estatutobloque -> bloque .)
    ELSE            reduce using rule 7 (estatutobloque -> bloque .)


state 200

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque . goto
    (12) goto -> . empty
    (120) empty -> .

    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

    goto                           shift and go to state 204
    empty                          shift and go to state 205

state 201

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 206


state 202

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque . masbloque
    (10) masbloque -> . ELSE goto estatutobloque
    (11) masbloque -> . empty
    (120) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 208
    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)

  ! ELSE            [ reduce using rule 120 (empty -> .) ]

    masbloque                      shift and go to state 207
    empty                          shift and go to state 209

state 203

    (96) retorno -> RETURN expresion SEMICOLON .

    RBRACKET        reduce using rule 96 (retorno -> RETURN expresion SEMICOLON .)


state 204

    (13) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .

    COMMENT         reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    CPPCOMMENT      reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ID              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    IF              reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    READ            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    VAR             reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    WHILE           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    PRINT           reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RBRACKET        reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RETURN          reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ELSE            reduce using rule 13 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)


state 205

    (12) goto -> empty .

    COMMENT         reduce using rule 12 (goto -> empty .)
    CPPCOMMENT      reduce using rule 12 (goto -> empty .)
    LBRACKET        reduce using rule 12 (goto -> empty .)
    ID              reduce using rule 12 (goto -> empty .)
    IF              reduce using rule 12 (goto -> empty .)
    READ            reduce using rule 12 (goto -> empty .)
    VAR             reduce using rule 12 (goto -> empty .)
    WHILE           reduce using rule 12 (goto -> empty .)
    PRINT           reduce using rule 12 (goto -> empty .)
    RBRACKET        reduce using rule 12 (goto -> empty .)
    RETURN          reduce using rule 12 (goto -> empty .)
    ELSE            reduce using rule 12 (goto -> empty .)


state 206

    (22) asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ID              reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    READ            reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON .)


state 207

    (5) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .

    COMMENT         reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    CPPCOMMENT      reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ID              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    IF              reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    READ            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    VAR             reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    WHILE           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    PRINT           reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RBRACKET        reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RETURN          reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ELSE            reduce using rule 5 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)


state 208

    (10) masbloque -> ELSE . goto estatutobloque
    (12) goto -> . empty
    (120) empty -> .

    COMMENT         reduce using rule 120 (empty -> .)
    CPPCOMMENT      reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

    empty                          shift and go to state 205
    goto                           shift and go to state 210

state 209

    (11) masbloque -> empty .

    COMMENT         reduce using rule 11 (masbloque -> empty .)
    CPPCOMMENT      reduce using rule 11 (masbloque -> empty .)
    ID              reduce using rule 11 (masbloque -> empty .)
    IF              reduce using rule 11 (masbloque -> empty .)
    READ            reduce using rule 11 (masbloque -> empty .)
    VAR             reduce using rule 11 (masbloque -> empty .)
    WHILE           reduce using rule 11 (masbloque -> empty .)
    PRINT           reduce using rule 11 (masbloque -> empty .)
    RBRACKET        reduce using rule 11 (masbloque -> empty .)
    RETURN          reduce using rule 11 (masbloque -> empty .)
    ELSE            reduce using rule 11 (masbloque -> empty .)


state 210

    (10) masbloque -> ELSE goto . estatutobloque
    (6) estatutobloque -> . estatuto
    (7) estatutobloque -> . bloque
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . ciclo
    (65) estatuto -> . escritura
    (66) estatuto -> . lectura
    (67) estatuto -> . vars
    (68) estatuto -> . llamafunc SEMICOLON
    (69) estatuto -> . COMMENT
    (70) estatuto -> . CPPCOMMENT
    (9) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON
    (5) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (13) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (15) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (71) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (81) vars -> . VAR tipo listaid SEMICOLON vars
    (82) vars -> . empty
    (72) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (31) idarray -> . ID
    (14) while -> . WHILE
    (16) print -> . PRINT
    (120) empty -> .
    (73) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 78
    CPPCOMMENT      shift and go to state 75
    LBRACKET        shift and go to state 34
    ID              shift and go to state 80
    IF              shift and go to state 83
    READ            shift and go to state 79
    VAR             shift and go to state 8
    WHILE           shift and go to state 72
    PRINT           shift and go to state 67
    RBRACKET        reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    ELSE            reduce using rule 120 (empty -> .)

  ! COMMENT         [ reduce using rule 120 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! READ            [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]
  ! PRINT           [ reduce using rule 120 (empty -> .) ]

    ciclo                          shift and go to state 66
    lectura                        shift and go to state 68
    estatuto                       shift and go to state 198
    bloque                         shift and go to state 199
    llamafunc                      shift and go to state 69
    empty                          shift and go to state 6
    idarray                        shift and go to state 73
    escritura                      shift and go to state 74
    while                          shift and go to state 71
    print                          shift and go to state 77
    estatutobloque                 shift and go to state 211
    idfunc                         shift and go to state 57
    asignacion                     shift and go to state 85
    vars                           shift and go to state 82
    condicion                      shift and go to state 81

state 211

    (10) masbloque -> ELSE goto estatutobloque .

    COMMENT         reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    CPPCOMMENT      reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    ID              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    IF              reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    READ            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    VAR             reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    WHILE           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    PRINT           reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RBRACKET        reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    RETURN          reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)
    ELSE            reduce using rule 10 (masbloque -> ELSE goto estatutobloque .)

