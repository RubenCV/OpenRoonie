Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    EXECUTE
    QUIT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> prog ID SEMICOLON vars funcs main bloque
Rule 2     prog -> PROGRAM
Rule 3     main -> MAIN
Rule 4     condicion -> IF LPAREN expresion RPAREN bloque masbloque
Rule 5     bloque -> LBRACKET masestatuto RBRACKET
Rule 6     masbloque -> ELSE bloque
Rule 7     masbloque -> empty
Rule 8     ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 9     escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON
Rule 10    listaprint -> expresion masprint
Rule 11    listaprint -> ctestring masprint
Rule 12    masprint -> COMMA listaprint
Rule 13    masprint -> empty
Rule 14    asignacion -> ID EQUALS expresion SEMICOLON
Rule 15    asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
Rule 16    factor -> leftparen expresion rightparen
Rule 17    factor -> varcte
Rule 18    factor -> varid
Rule 19    leftparen -> LPAREN
Rule 20    rightparen -> RPAREN
Rule 21    varid -> ID arr
Rule 22    arr -> LSQBRACKET RSQBRACKET
Rule 23    arr -> empty
Rule 24    exp -> termino masexp addquadrupleplusminus
Rule 25    addquadrupleplusminus -> empty
Rule 26    masexp -> PLUS exp
Rule 27    masexp -> MINUS exp
Rule 28    masexp -> empty
Rule 29    comaexpresion -> COMMA expresion comaexpresion
Rule 30    comaexpresion -> empty
Rule 31    expresion -> expcomp masexpresion
Rule 32    masexpresion -> AND expcomp
Rule 33    masexpresion -> OR expcomp
Rule 34    masexpresion -> empty
Rule 35    termino -> factor masterminos addquadrupletimesdivide
Rule 36    addquadrupletimesdivide -> empty
Rule 37    masterminos -> TIMES termino
Rule 38    masterminos -> DIVIDE termino
Rule 39    masterminos -> empty
Rule 40    expcomp -> exp expcompcontinuo
Rule 41    expcompcontinuo -> MORETHAN exp
Rule 42    expcompcontinuo -> LESSTHAN exp
Rule 43    expcompcontinuo -> NOTEQUAL exp
Rule 44    expcompcontinuo -> ISEQUALTO exp
Rule 45    expcompcontinuo -> MORETHANEQUAL exp
Rule 46    expcompcontinuo -> LESSTHANEQUAL exp
Rule 47    expcompcontinuo -> empty
Rule 48    estatuto -> asignacion
Rule 49    estatuto -> condicion
Rule 50    estatuto -> ciclo
Rule 51    estatuto -> escritura
Rule 52    estatuto -> vars
Rule 53    masestatuto -> estatuto masestatuto
Rule 54    masestatuto -> empty
Rule 55    vars -> VAR tipo listaid SEMICOLON vars
Rule 56    vars -> empty
Rule 57    listaid -> ID masid
Rule 58    masid -> COMMA listaid
Rule 59    masid -> empty
Rule 60    funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs
Rule 61    funcs -> empty
Rule 62    funcaux -> tipo ID
Rule 63    args -> tipo ID masargs
Rule 64    args -> empty
Rule 65    masargs -> COMMA args
Rule 66    masargs -> empty
Rule 67    tipo -> INT
Rule 68    tipo -> FLOAT
Rule 69    tipo -> CHAR
Rule 70    tipo -> BOOL
Rule 71    tipo -> STRING
Rule 72    varcte -> cteint
Rule 73    varcte -> ctefloat
Rule 74    varcte -> ctechar
Rule 75    varcte -> ctestring
Rule 76    varcte -> ctebool
Rule 77    cteint -> CTEINT
Rule 78    ctefloat -> CTEFLOAT
Rule 79    ctechar -> CTECHAR
Rule 80    ctestring -> CTESTRING
Rule 81    ctebool -> TRUE
Rule 82    ctebool -> FALSE
Rule 83    empty -> <empty>

Terminals, with rules where they appear

AND                  : 32
BOOL                 : 70
CHAR                 : 69
COMMA                : 12 29 58 65
CTECHAR              : 79
CTEFLOAT             : 78
CTEINT               : 77
CTESTRING            : 80
DIVIDE               : 38
ELSE                 : 6
EQUALS               : 14 15
EXECUTE              : 
FALSE                : 82
FLOAT                : 68
FUNCTION             : 60
ID                   : 1 14 15 21 57 62 63
IF                   : 4
INT                  : 67
ISEQUALTO            : 44
LBRACKET             : 5
LESSTHAN             : 42
LESSTHANEQUAL        : 46
LPAREN               : 4 8 9 19 60
LSQBRACKET           : 15 15 22
MAIN                 : 3
MINUS                : 27
MORETHAN             : 41
MORETHANEQUAL        : 45
NOTEQUAL             : 43
OR                   : 33
PLUS                 : 26
PRINT                : 9
PROGRAM              : 2
QUIT                 : 
RBRACKET             : 5
RPAREN               : 4 8 9 20 60
RSQBRACKET           : 15 15 22
SEMICOLON            : 1 9 14 15 55
STRING               : 71
TIMES                : 37
TRUE                 : 81
VAR                  : 55
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

addquadrupleplusminus : 24
addquadrupletimesdivide : 35
args                 : 60 65
arr                  : 21
asignacion           : 48
bloque               : 1 4 6 8 60
ciclo                : 50
comaexpresion        : 15 29
condicion            : 49
ctebool              : 76
ctechar              : 74
ctefloat             : 73
cteint               : 72
ctestring            : 11 75
empty                : 7 13 23 25 28 30 34 36 39 47 54 56 59 61 64 66
escritura            : 51
estatuto             : 53
exp                  : 26 27 40 41 42 43 44 45 46
expcomp              : 31 32 33
expcompcontinuo      : 40
expresion            : 4 8 10 14 15 16 29
factor               : 35
funcaux              : 60
funcs                : 1 60
leftparen            : 16
listaid              : 55 58
listaprint           : 9 12
main                 : 1
masargs              : 63
masbloque            : 4
masestatuto          : 5 53
masexp               : 24
masexpresion         : 31
masid                : 57
masprint             : 10 11
masterminos          : 35
prog                 : 1
programa             : 0
rightparen           : 16
termino              : 24 37 38
tipo                 : 55 62 63
varcte               : 17
varid                : 18
vars                 : 1 52 55

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . prog ID SEMICOLON vars funcs main bloque
    (2) prog -> . PROGRAM

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1
    programa                       shift and go to state 3

state 1

    (1) programa -> prog . ID SEMICOLON vars funcs main bloque

    ID              shift and go to state 4


state 2

    (2) prog -> PROGRAM .

    ID              reduce using rule 2 (prog -> PROGRAM .)


state 3

    (0) S' -> programa .



state 4

    (1) programa -> prog ID . SEMICOLON vars funcs main bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> prog ID SEMICOLON . vars funcs main bloque
    (55) vars -> . VAR tipo listaid SEMICOLON vars
    (56) vars -> . empty
    (83) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> prog ID SEMICOLON vars . funcs main bloque
    (60) funcs -> . FUNCTION funcaux LPAREN args RPAREN bloque funcs
    (61) funcs -> . empty
    (83) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 83 (empty -> .)

    empty                          shift and go to state 9
    funcs                          shift and go to state 11

state 7

    (56) vars -> empty .

    FUNCTION        reduce using rule 56 (vars -> empty .)
    MAIN            reduce using rule 56 (vars -> empty .)
    ID              reduce using rule 56 (vars -> empty .)
    IF              reduce using rule 56 (vars -> empty .)
    WHILE           reduce using rule 56 (vars -> empty .)
    PRINT           reduce using rule 56 (vars -> empty .)
    VAR             reduce using rule 56 (vars -> empty .)
    RBRACKET        reduce using rule 56 (vars -> empty .)


state 8

    (55) vars -> VAR . tipo listaid SEMICOLON vars
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (70) tipo -> . BOOL
    (71) tipo -> . STRING

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    BOOL            shift and go to state 15
    STRING          shift and go to state 13

    tipo                           shift and go to state 17

state 9

    (61) funcs -> empty .

    MAIN            reduce using rule 61 (funcs -> empty .)


state 10

    (60) funcs -> FUNCTION . funcaux LPAREN args RPAREN bloque funcs
    (62) funcaux -> . tipo ID
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (70) tipo -> . BOOL
    (71) tipo -> . STRING

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    BOOL            shift and go to state 15
    STRING          shift and go to state 13

    funcaux                        shift and go to state 19
    tipo                           shift and go to state 18

state 11

    (1) programa -> prog ID SEMICOLON vars funcs . main bloque
    (3) main -> . MAIN

    MAIN            shift and go to state 20

    main                           shift and go to state 21

state 12

    (67) tipo -> INT .

    ID              reduce using rule 67 (tipo -> INT .)


state 13

    (71) tipo -> STRING .

    ID              reduce using rule 71 (tipo -> STRING .)


state 14

    (68) tipo -> FLOAT .

    ID              reduce using rule 68 (tipo -> FLOAT .)


state 15

    (70) tipo -> BOOL .

    ID              reduce using rule 70 (tipo -> BOOL .)


state 16

    (69) tipo -> CHAR .

    ID              reduce using rule 69 (tipo -> CHAR .)


state 17

    (55) vars -> VAR tipo . listaid SEMICOLON vars
    (57) listaid -> . ID masid

    ID              shift and go to state 22

    listaid                        shift and go to state 23

state 18

    (62) funcaux -> tipo . ID

    ID              shift and go to state 24


state 19

    (60) funcs -> FUNCTION funcaux . LPAREN args RPAREN bloque funcs

    LPAREN          shift and go to state 25


state 20

    (3) main -> MAIN .

    LBRACKET        reduce using rule 3 (main -> MAIN .)


state 21

    (1) programa -> prog ID SEMICOLON vars funcs main . bloque
    (5) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 27

    bloque                         shift and go to state 26

state 22

    (57) listaid -> ID . masid
    (58) masid -> . COMMA listaid
    (59) masid -> . empty
    (83) empty -> .

    COMMA           shift and go to state 29
    SEMICOLON       reduce using rule 83 (empty -> .)

    empty                          shift and go to state 28
    masid                          shift and go to state 30

state 23

    (55) vars -> VAR tipo listaid . SEMICOLON vars

    SEMICOLON       shift and go to state 31


state 24

    (62) funcaux -> tipo ID .

    LPAREN          reduce using rule 62 (funcaux -> tipo ID .)


state 25

    (60) funcs -> FUNCTION funcaux LPAREN . args RPAREN bloque funcs
    (63) args -> . tipo ID masargs
    (64) args -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (70) tipo -> . BOOL
    (71) tipo -> . STRING
    (83) empty -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    BOOL            shift and go to state 15
    STRING          shift and go to state 13
    RPAREN          reduce using rule 83 (empty -> .)

    empty                          shift and go to state 34
    args                           shift and go to state 33
    tipo                           shift and go to state 32

state 26

    (1) programa -> prog ID SEMICOLON vars funcs main bloque .

    $end            reduce using rule 1 (programa -> prog ID SEMICOLON vars funcs main bloque .)


state 27

    (5) bloque -> LBRACKET . masestatuto RBRACKET
    (53) masestatuto -> . estatuto masestatuto
    (54) masestatuto -> . empty
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . ciclo
    (51) estatuto -> . escritura
    (52) estatuto -> . vars
    (83) empty -> .
    (14) asignacion -> . ID EQUALS expresion SEMICOLON
    (15) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN bloque masbloque
    (8) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (9) escritura -> . PRINT LPAREN listaprint RPAREN SEMICOLON
    (55) vars -> . VAR tipo listaid SEMICOLON vars
    (56) vars -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 44
    IF              shift and go to state 38
    WHILE           shift and go to state 43
    PRINT           shift and go to state 36
    VAR             shift and go to state 8

  ! ID              [ reduce using rule 83 (empty -> .) ]
  ! IF              [ reduce using rule 83 (empty -> .) ]
  ! WHILE           [ reduce using rule 83 (empty -> .) ]
  ! PRINT           [ reduce using rule 83 (empty -> .) ]
  ! VAR             [ reduce using rule 83 (empty -> .) ]

    escritura                      shift and go to state 46
    condicion                      shift and go to state 40
    masestatuto                    shift and go to state 35
    empty                          shift and go to state 45
    asignacion                     shift and go to state 42
    estatuto                       shift and go to state 41
    ciclo                          shift and go to state 39
    vars                           shift and go to state 37

state 28

    (59) masid -> empty .

    SEMICOLON       reduce using rule 59 (masid -> empty .)


state 29

    (58) masid -> COMMA . listaid
    (57) listaid -> . ID masid

    ID              shift and go to state 22

    listaid                        shift and go to state 47

state 30

    (57) listaid -> ID masid .

    SEMICOLON       reduce using rule 57 (listaid -> ID masid .)


state 31

    (55) vars -> VAR tipo listaid SEMICOLON . vars
    (55) vars -> . VAR tipo listaid SEMICOLON vars
    (56) vars -> . empty
    (83) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    FUNCTION        reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)
    RBRACKET        reduce using rule 83 (empty -> .)

  ! VAR             [ reduce using rule 83 (empty -> .) ]

    empty                          shift and go to state 7
    vars                           shift and go to state 48

state 32

    (63) args -> tipo . ID masargs

    ID              shift and go to state 49


state 33

    (60) funcs -> FUNCTION funcaux LPAREN args . RPAREN bloque funcs

    RPAREN          shift and go to state 50


state 34

    (64) args -> empty .

    RPAREN          reduce using rule 64 (args -> empty .)


state 35

    (5) bloque -> LBRACKET masestatuto . RBRACKET

    RBRACKET        shift and go to state 51


state 36

    (9) escritura -> PRINT . LPAREN listaprint RPAREN SEMICOLON

    LPAREN          shift and go to state 52


state 37

    (52) estatuto -> vars .

    ID              reduce using rule 52 (estatuto -> vars .)
    IF              reduce using rule 52 (estatuto -> vars .)
    WHILE           reduce using rule 52 (estatuto -> vars .)
    PRINT           reduce using rule 52 (estatuto -> vars .)
    VAR             reduce using rule 52 (estatuto -> vars .)
    RBRACKET        reduce using rule 52 (estatuto -> vars .)


state 38

    (4) condicion -> IF . LPAREN expresion RPAREN bloque masbloque

    LPAREN          shift and go to state 53


state 39

    (50) estatuto -> ciclo .

    ID              reduce using rule 50 (estatuto -> ciclo .)
    IF              reduce using rule 50 (estatuto -> ciclo .)
    WHILE           reduce using rule 50 (estatuto -> ciclo .)
    PRINT           reduce using rule 50 (estatuto -> ciclo .)
    VAR             reduce using rule 50 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 50 (estatuto -> ciclo .)


state 40

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    IF              reduce using rule 49 (estatuto -> condicion .)
    WHILE           reduce using rule 49 (estatuto -> condicion .)
    PRINT           reduce using rule 49 (estatuto -> condicion .)
    VAR             reduce using rule 49 (estatuto -> condicion .)
    RBRACKET        reduce using rule 49 (estatuto -> condicion .)


state 41

    (53) masestatuto -> estatuto . masestatuto
    (53) masestatuto -> . estatuto masestatuto
    (54) masestatuto -> . empty
    (48) estatuto -> . asignacion
    (49) estatuto -> . condicion
    (50) estatuto -> . ciclo
    (51) estatuto -> . escritura
    (52) estatuto -> . vars
    (83) empty -> .
    (14) asignacion -> . ID EQUALS expresion SEMICOLON
    (15) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN bloque masbloque
    (8) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (9) escritura -> . PRINT LPAREN listaprint RPAREN SEMICOLON
    (55) vars -> . VAR tipo listaid SEMICOLON vars
    (56) vars -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 44
    IF              shift and go to state 38
    WHILE           shift and go to state 43
    PRINT           shift and go to state 36
    VAR             shift and go to state 8

  ! ID              [ reduce using rule 83 (empty -> .) ]
  ! IF              [ reduce using rule 83 (empty -> .) ]
  ! WHILE           [ reduce using rule 83 (empty -> .) ]
  ! PRINT           [ reduce using rule 83 (empty -> .) ]
  ! VAR             [ reduce using rule 83 (empty -> .) ]

    escritura                      shift and go to state 46
    condicion                      shift and go to state 40
    masestatuto                    shift and go to state 54
    empty                          shift and go to state 45
    asignacion                     shift and go to state 42
    estatuto                       shift and go to state 41
    ciclo                          shift and go to state 39
    vars                           shift and go to state 37

state 42

    (48) estatuto -> asignacion .

    ID              reduce using rule 48 (estatuto -> asignacion .)
    IF              reduce using rule 48 (estatuto -> asignacion .)
    WHILE           reduce using rule 48 (estatuto -> asignacion .)
    PRINT           reduce using rule 48 (estatuto -> asignacion .)
    VAR             reduce using rule 48 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 48 (estatuto -> asignacion .)


state 43

    (8) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 55


state 44

    (14) asignacion -> ID . EQUALS expresion SEMICOLON
    (15) asignacion -> ID . LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    EQUALS          shift and go to state 57
    LSQBRACKET      shift and go to state 56


state 45

    (54) masestatuto -> empty .
    (56) vars -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 54 (masestatuto -> empty .)
    RBRACKET        reduce using rule 54 (masestatuto -> empty .)
    ID              reduce using rule 56 (vars -> empty .)
    IF              reduce using rule 56 (vars -> empty .)
    WHILE           reduce using rule 56 (vars -> empty .)
    PRINT           reduce using rule 56 (vars -> empty .)
    VAR             reduce using rule 56 (vars -> empty .)

  ! RBRACKET        [ reduce using rule 56 (vars -> empty .) ]


state 46

    (51) estatuto -> escritura .

    ID              reduce using rule 51 (estatuto -> escritura .)
    IF              reduce using rule 51 (estatuto -> escritura .)
    WHILE           reduce using rule 51 (estatuto -> escritura .)
    PRINT           reduce using rule 51 (estatuto -> escritura .)
    VAR             reduce using rule 51 (estatuto -> escritura .)
    RBRACKET        reduce using rule 51 (estatuto -> escritura .)


state 47

    (58) masid -> COMMA listaid .

    SEMICOLON       reduce using rule 58 (masid -> COMMA listaid .)


state 48

    (55) vars -> VAR tipo listaid SEMICOLON vars .

    FUNCTION        reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    MAIN            reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    ID              reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    IF              reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    WHILE           reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    PRINT           reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    VAR             reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)
    RBRACKET        reduce using rule 55 (vars -> VAR tipo listaid SEMICOLON vars .)


state 49

    (63) args -> tipo ID . masargs
    (65) masargs -> . COMMA args
    (66) masargs -> . empty
    (83) empty -> .

    COMMA           shift and go to state 58
    RPAREN          reduce using rule 83 (empty -> .)

    empty                          shift and go to state 60
    masargs                        shift and go to state 59

state 50

    (60) funcs -> FUNCTION funcaux LPAREN args RPAREN . bloque funcs
    (5) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 27

    bloque                         shift and go to state 61

state 51

    (5) bloque -> LBRACKET masestatuto RBRACKET .

    ID              reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    IF              reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    WHILE           reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    PRINT           reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    VAR             reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    RBRACKET        reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    FUNCTION        reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    MAIN            reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    $end            reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)
    ELSE            reduce using rule 5 (bloque -> LBRACKET masestatuto RBRACKET .)


state 52

    (9) escritura -> PRINT LPAREN . listaprint RPAREN SEMICOLON
    (10) listaprint -> . expresion masprint
    (11) listaprint -> . ctestring masprint
    (31) expresion -> . expcomp masexpresion
    (80) ctestring -> . CTESTRING
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    CTESTRING       shift and go to state 63
    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 68
    termino                        shift and go to state 64
    ctebool                        shift and go to state 65
    exp                            shift and go to state 69
    ctestring                      shift and go to state 71
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    listaprint                     shift and go to state 80
    varcte                         shift and go to state 82
    ctechar                        shift and go to state 81

state 53

    (4) condicion -> IF LPAREN . expresion RPAREN bloque masbloque
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 84
    cteint                         shift and go to state 76
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    ctebool                        shift and go to state 65
    ctestring                      shift and go to state 85
    ctechar                        shift and go to state 81

state 54

    (53) masestatuto -> estatuto masestatuto .

    RBRACKET        reduce using rule 53 (masestatuto -> estatuto masestatuto .)


state 55

    (8) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 86
    ctebool                        shift and go to state 65
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    ctestring                      shift and go to state 85
    ctechar                        shift and go to state 81

state 56

    (15) asignacion -> ID LSQBRACKET . RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    RSQBRACKET      shift and go to state 87


state 57

    (14) asignacion -> ID EQUALS . expresion SEMICOLON
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    expresion                      shift and go to state 88
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    expcomp                        shift and go to state 79
    exp                            shift and go to state 69
    ctechar                        shift and go to state 81

state 58

    (65) masargs -> COMMA . args
    (63) args -> . tipo ID masargs
    (64) args -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (70) tipo -> . BOOL
    (71) tipo -> . STRING
    (83) empty -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    BOOL            shift and go to state 15
    STRING          shift and go to state 13
    RPAREN          reduce using rule 83 (empty -> .)

    empty                          shift and go to state 34
    args                           shift and go to state 89
    tipo                           shift and go to state 32

state 59

    (63) args -> tipo ID masargs .

    RPAREN          reduce using rule 63 (args -> tipo ID masargs .)


state 60

    (66) masargs -> empty .

    RPAREN          reduce using rule 66 (masargs -> empty .)


state 61

    (60) funcs -> FUNCTION funcaux LPAREN args RPAREN bloque . funcs
    (60) funcs -> . FUNCTION funcaux LPAREN args RPAREN bloque funcs
    (61) funcs -> . empty
    (83) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 83 (empty -> .)

    empty                          shift and go to state 9
    funcs                          shift and go to state 90

state 62

    (35) termino -> factor . masterminos addquadrupletimesdivide
    (37) masterminos -> . TIMES termino
    (38) masterminos -> . DIVIDE termino
    (39) masterminos -> . empty
    (83) empty -> .

    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 91
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    MORETHAN        reduce using rule 83 (empty -> .)
    LESSTHAN        reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    ISEQUALTO       reduce using rule 83 (empty -> .)
    MORETHANEQUAL   reduce using rule 83 (empty -> .)
    LESSTHANEQUAL   reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 93
    masterminos                    shift and go to state 92

state 63

    (80) ctestring -> CTESTRING .

    TIMES           reduce using rule 80 (ctestring -> CTESTRING .)
    DIVIDE          reduce using rule 80 (ctestring -> CTESTRING .)
    PLUS            reduce using rule 80 (ctestring -> CTESTRING .)
    MINUS           reduce using rule 80 (ctestring -> CTESTRING .)
    MORETHAN        reduce using rule 80 (ctestring -> CTESTRING .)
    LESSTHAN        reduce using rule 80 (ctestring -> CTESTRING .)
    NOTEQUAL        reduce using rule 80 (ctestring -> CTESTRING .)
    ISEQUALTO       reduce using rule 80 (ctestring -> CTESTRING .)
    MORETHANEQUAL   reduce using rule 80 (ctestring -> CTESTRING .)
    LESSTHANEQUAL   reduce using rule 80 (ctestring -> CTESTRING .)
    AND             reduce using rule 80 (ctestring -> CTESTRING .)
    OR              reduce using rule 80 (ctestring -> CTESTRING .)
    SEMICOLON       reduce using rule 80 (ctestring -> CTESTRING .)
    RPAREN          reduce using rule 80 (ctestring -> CTESTRING .)
    COMMA           reduce using rule 80 (ctestring -> CTESTRING .)
    RSQBRACKET      reduce using rule 80 (ctestring -> CTESTRING .)


state 64

    (24) exp -> termino . masexp addquadrupleplusminus
    (26) masexp -> . PLUS exp
    (27) masexp -> . MINUS exp
    (28) masexp -> . empty
    (83) empty -> .

    PLUS            shift and go to state 97
    MINUS           shift and go to state 95
    MORETHAN        reduce using rule 83 (empty -> .)
    LESSTHAN        reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    ISEQUALTO       reduce using rule 83 (empty -> .)
    MORETHANEQUAL   reduce using rule 83 (empty -> .)
    LESSTHANEQUAL   reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    masexp                         shift and go to state 98
    empty                          shift and go to state 96

state 65

    (76) varcte -> ctebool .

    TIMES           reduce using rule 76 (varcte -> ctebool .)
    DIVIDE          reduce using rule 76 (varcte -> ctebool .)
    PLUS            reduce using rule 76 (varcte -> ctebool .)
    MINUS           reduce using rule 76 (varcte -> ctebool .)
    MORETHAN        reduce using rule 76 (varcte -> ctebool .)
    LESSTHAN        reduce using rule 76 (varcte -> ctebool .)
    NOTEQUAL        reduce using rule 76 (varcte -> ctebool .)
    ISEQUALTO       reduce using rule 76 (varcte -> ctebool .)
    MORETHANEQUAL   reduce using rule 76 (varcte -> ctebool .)
    LESSTHANEQUAL   reduce using rule 76 (varcte -> ctebool .)
    AND             reduce using rule 76 (varcte -> ctebool .)
    OR              reduce using rule 76 (varcte -> ctebool .)
    RPAREN          reduce using rule 76 (varcte -> ctebool .)
    COMMA           reduce using rule 76 (varcte -> ctebool .)
    RSQBRACKET      reduce using rule 76 (varcte -> ctebool .)
    SEMICOLON       reduce using rule 76 (varcte -> ctebool .)


state 66

    (19) leftparen -> LPAREN .

    LPAREN          reduce using rule 19 (leftparen -> LPAREN .)
    ID              reduce using rule 19 (leftparen -> LPAREN .)
    CTEINT          reduce using rule 19 (leftparen -> LPAREN .)
    CTEFLOAT        reduce using rule 19 (leftparen -> LPAREN .)
    CTECHAR         reduce using rule 19 (leftparen -> LPAREN .)
    CTESTRING       reduce using rule 19 (leftparen -> LPAREN .)
    TRUE            reduce using rule 19 (leftparen -> LPAREN .)
    FALSE           reduce using rule 19 (leftparen -> LPAREN .)


state 67

    (77) cteint -> CTEINT .

    TIMES           reduce using rule 77 (cteint -> CTEINT .)
    DIVIDE          reduce using rule 77 (cteint -> CTEINT .)
    PLUS            reduce using rule 77 (cteint -> CTEINT .)
    MINUS           reduce using rule 77 (cteint -> CTEINT .)
    AND             reduce using rule 77 (cteint -> CTEINT .)
    OR              reduce using rule 77 (cteint -> CTEINT .)
    COMMA           reduce using rule 77 (cteint -> CTEINT .)
    RPAREN          reduce using rule 77 (cteint -> CTEINT .)
    SEMICOLON       reduce using rule 77 (cteint -> CTEINT .)
    RSQBRACKET      reduce using rule 77 (cteint -> CTEINT .)
    MORETHAN        reduce using rule 77 (cteint -> CTEINT .)
    LESSTHAN        reduce using rule 77 (cteint -> CTEINT .)
    NOTEQUAL        reduce using rule 77 (cteint -> CTEINT .)
    ISEQUALTO       reduce using rule 77 (cteint -> CTEINT .)
    MORETHANEQUAL   reduce using rule 77 (cteint -> CTEINT .)
    LESSTHANEQUAL   reduce using rule 77 (cteint -> CTEINT .)


state 68

    (10) listaprint -> expresion . masprint
    (12) masprint -> . COMMA listaprint
    (13) masprint -> . empty
    (83) empty -> .

    COMMA           shift and go to state 100
    RPAREN          reduce using rule 83 (empty -> .)

    empty                          shift and go to state 99
    masprint                       shift and go to state 101

state 69

    (40) expcomp -> exp . expcompcontinuo
    (41) expcompcontinuo -> . MORETHAN exp
    (42) expcompcontinuo -> . LESSTHAN exp
    (43) expcompcontinuo -> . NOTEQUAL exp
    (44) expcompcontinuo -> . ISEQUALTO exp
    (45) expcompcontinuo -> . MORETHANEQUAL exp
    (46) expcompcontinuo -> . LESSTHANEQUAL exp
    (47) expcompcontinuo -> . empty
    (83) empty -> .

    MORETHAN        shift and go to state 103
    LESSTHAN        shift and go to state 102
    NOTEQUAL        shift and go to state 105
    ISEQUALTO       shift and go to state 109
    MORETHANEQUAL   shift and go to state 106
    LESSTHANEQUAL   shift and go to state 108
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    expcompcontinuo                shift and go to state 107
    empty                          shift and go to state 104

state 70

    (81) ctebool -> TRUE .

    TIMES           reduce using rule 81 (ctebool -> TRUE .)
    DIVIDE          reduce using rule 81 (ctebool -> TRUE .)
    PLUS            reduce using rule 81 (ctebool -> TRUE .)
    MINUS           reduce using rule 81 (ctebool -> TRUE .)
    MORETHAN        reduce using rule 81 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 81 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 81 (ctebool -> TRUE .)
    ISEQUALTO       reduce using rule 81 (ctebool -> TRUE .)
    MORETHANEQUAL   reduce using rule 81 (ctebool -> TRUE .)
    LESSTHANEQUAL   reduce using rule 81 (ctebool -> TRUE .)
    AND             reduce using rule 81 (ctebool -> TRUE .)
    OR              reduce using rule 81 (ctebool -> TRUE .)
    COMMA           reduce using rule 81 (ctebool -> TRUE .)
    RSQBRACKET      reduce using rule 81 (ctebool -> TRUE .)
    RPAREN          reduce using rule 81 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 81 (ctebool -> TRUE .)


state 71

    (11) listaprint -> ctestring . masprint
    (75) varcte -> ctestring .
    (12) masprint -> . COMMA listaprint
    (13) masprint -> . empty
    (83) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 75 (varcte -> ctestring .)
    TIMES           reduce using rule 75 (varcte -> ctestring .)
    DIVIDE          reduce using rule 75 (varcte -> ctestring .)
    PLUS            reduce using rule 75 (varcte -> ctestring .)
    MINUS           reduce using rule 75 (varcte -> ctestring .)
    MORETHAN        reduce using rule 75 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 75 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 75 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 75 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 75 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 75 (varcte -> ctestring .)
    AND             reduce using rule 75 (varcte -> ctestring .)
    OR              reduce using rule 75 (varcte -> ctestring .)
    RPAREN          reduce using rule 75 (varcte -> ctestring .)
    COMMA           shift and go to state 100

  ! COMMA           [ reduce using rule 75 (varcte -> ctestring .) ]
  ! RPAREN          [ reduce using rule 83 (empty -> .) ]

    empty                          shift and go to state 99
    masprint                       shift and go to state 110

state 72

    (73) varcte -> ctefloat .

    TIMES           reduce using rule 73 (varcte -> ctefloat .)
    DIVIDE          reduce using rule 73 (varcte -> ctefloat .)
    PLUS            reduce using rule 73 (varcte -> ctefloat .)
    MINUS           reduce using rule 73 (varcte -> ctefloat .)
    MORETHAN        reduce using rule 73 (varcte -> ctefloat .)
    LESSTHAN        reduce using rule 73 (varcte -> ctefloat .)
    NOTEQUAL        reduce using rule 73 (varcte -> ctefloat .)
    ISEQUALTO       reduce using rule 73 (varcte -> ctefloat .)
    MORETHANEQUAL   reduce using rule 73 (varcte -> ctefloat .)
    LESSTHANEQUAL   reduce using rule 73 (varcte -> ctefloat .)
    AND             reduce using rule 73 (varcte -> ctefloat .)
    OR              reduce using rule 73 (varcte -> ctefloat .)
    RPAREN          reduce using rule 73 (varcte -> ctefloat .)
    COMMA           reduce using rule 73 (varcte -> ctefloat .)
    RSQBRACKET      reduce using rule 73 (varcte -> ctefloat .)
    SEMICOLON       reduce using rule 73 (varcte -> ctefloat .)


state 73

    (16) factor -> leftparen . expresion rightparen
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    termino                        shift and go to state 64
    expresion                      shift and go to state 111
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    expcomp                        shift and go to state 79
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    ctechar                        shift and go to state 81

state 74

    (82) ctebool -> FALSE .

    TIMES           reduce using rule 82 (ctebool -> FALSE .)
    DIVIDE          reduce using rule 82 (ctebool -> FALSE .)
    PLUS            reduce using rule 82 (ctebool -> FALSE .)
    MINUS           reduce using rule 82 (ctebool -> FALSE .)
    MORETHAN        reduce using rule 82 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 82 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 82 (ctebool -> FALSE .)
    ISEQUALTO       reduce using rule 82 (ctebool -> FALSE .)
    MORETHANEQUAL   reduce using rule 82 (ctebool -> FALSE .)
    LESSTHANEQUAL   reduce using rule 82 (ctebool -> FALSE .)
    AND             reduce using rule 82 (ctebool -> FALSE .)
    OR              reduce using rule 82 (ctebool -> FALSE .)
    COMMA           reduce using rule 82 (ctebool -> FALSE .)
    RSQBRACKET      reduce using rule 82 (ctebool -> FALSE .)
    RPAREN          reduce using rule 82 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 82 (ctebool -> FALSE .)


state 75

    (79) ctechar -> CTECHAR .

    TIMES           reduce using rule 79 (ctechar -> CTECHAR .)
    DIVIDE          reduce using rule 79 (ctechar -> CTECHAR .)
    PLUS            reduce using rule 79 (ctechar -> CTECHAR .)
    MINUS           reduce using rule 79 (ctechar -> CTECHAR .)
    MORETHAN        reduce using rule 79 (ctechar -> CTECHAR .)
    LESSTHAN        reduce using rule 79 (ctechar -> CTECHAR .)
    NOTEQUAL        reduce using rule 79 (ctechar -> CTECHAR .)
    ISEQUALTO       reduce using rule 79 (ctechar -> CTECHAR .)
    MORETHANEQUAL   reduce using rule 79 (ctechar -> CTECHAR .)
    LESSTHANEQUAL   reduce using rule 79 (ctechar -> CTECHAR .)
    AND             reduce using rule 79 (ctechar -> CTECHAR .)
    OR              reduce using rule 79 (ctechar -> CTECHAR .)
    COMMA           reduce using rule 79 (ctechar -> CTECHAR .)
    RPAREN          reduce using rule 79 (ctechar -> CTECHAR .)
    RSQBRACKET      reduce using rule 79 (ctechar -> CTECHAR .)
    SEMICOLON       reduce using rule 79 (ctechar -> CTECHAR .)


state 76

    (72) varcte -> cteint .

    TIMES           reduce using rule 72 (varcte -> cteint .)
    DIVIDE          reduce using rule 72 (varcte -> cteint .)
    PLUS            reduce using rule 72 (varcte -> cteint .)
    MINUS           reduce using rule 72 (varcte -> cteint .)
    MORETHAN        reduce using rule 72 (varcte -> cteint .)
    LESSTHAN        reduce using rule 72 (varcte -> cteint .)
    NOTEQUAL        reduce using rule 72 (varcte -> cteint .)
    ISEQUALTO       reduce using rule 72 (varcte -> cteint .)
    MORETHANEQUAL   reduce using rule 72 (varcte -> cteint .)
    LESSTHANEQUAL   reduce using rule 72 (varcte -> cteint .)
    AND             reduce using rule 72 (varcte -> cteint .)
    OR              reduce using rule 72 (varcte -> cteint .)
    RPAREN          reduce using rule 72 (varcte -> cteint .)
    COMMA           reduce using rule 72 (varcte -> cteint .)
    RSQBRACKET      reduce using rule 72 (varcte -> cteint .)
    SEMICOLON       reduce using rule 72 (varcte -> cteint .)


state 77

    (18) factor -> varid .

    TIMES           reduce using rule 18 (factor -> varid .)
    DIVIDE          reduce using rule 18 (factor -> varid .)
    PLUS            reduce using rule 18 (factor -> varid .)
    MINUS           reduce using rule 18 (factor -> varid .)
    MORETHAN        reduce using rule 18 (factor -> varid .)
    LESSTHAN        reduce using rule 18 (factor -> varid .)
    NOTEQUAL        reduce using rule 18 (factor -> varid .)
    ISEQUALTO       reduce using rule 18 (factor -> varid .)
    MORETHANEQUAL   reduce using rule 18 (factor -> varid .)
    LESSTHANEQUAL   reduce using rule 18 (factor -> varid .)
    AND             reduce using rule 18 (factor -> varid .)
    OR              reduce using rule 18 (factor -> varid .)
    COMMA           reduce using rule 18 (factor -> varid .)
    RSQBRACKET      reduce using rule 18 (factor -> varid .)
    RPAREN          reduce using rule 18 (factor -> varid .)
    SEMICOLON       reduce using rule 18 (factor -> varid .)


state 78

    (78) ctefloat -> CTEFLOAT .

    TIMES           reduce using rule 78 (ctefloat -> CTEFLOAT .)
    DIVIDE          reduce using rule 78 (ctefloat -> CTEFLOAT .)
    PLUS            reduce using rule 78 (ctefloat -> CTEFLOAT .)
    MINUS           reduce using rule 78 (ctefloat -> CTEFLOAT .)
    MORETHAN        reduce using rule 78 (ctefloat -> CTEFLOAT .)
    LESSTHAN        reduce using rule 78 (ctefloat -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 78 (ctefloat -> CTEFLOAT .)
    ISEQUALTO       reduce using rule 78 (ctefloat -> CTEFLOAT .)
    MORETHANEQUAL   reduce using rule 78 (ctefloat -> CTEFLOAT .)
    LESSTHANEQUAL   reduce using rule 78 (ctefloat -> CTEFLOAT .)
    COMMA           reduce using rule 78 (ctefloat -> CTEFLOAT .)
    RPAREN          reduce using rule 78 (ctefloat -> CTEFLOAT .)
    SEMICOLON       reduce using rule 78 (ctefloat -> CTEFLOAT .)
    RSQBRACKET      reduce using rule 78 (ctefloat -> CTEFLOAT .)
    AND             reduce using rule 78 (ctefloat -> CTEFLOAT .)
    OR              reduce using rule 78 (ctefloat -> CTEFLOAT .)


state 79

    (31) expresion -> expcomp . masexpresion
    (32) masexpresion -> . AND expcomp
    (33) masexpresion -> . OR expcomp
    (34) masexpresion -> . empty
    (83) empty -> .

    AND             shift and go to state 115
    OR              shift and go to state 112
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 113
    masexpresion                   shift and go to state 114

state 80

    (9) escritura -> PRINT LPAREN listaprint . RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 81

    (74) varcte -> ctechar .

    TIMES           reduce using rule 74 (varcte -> ctechar .)
    DIVIDE          reduce using rule 74 (varcte -> ctechar .)
    PLUS            reduce using rule 74 (varcte -> ctechar .)
    MINUS           reduce using rule 74 (varcte -> ctechar .)
    MORETHAN        reduce using rule 74 (varcte -> ctechar .)
    LESSTHAN        reduce using rule 74 (varcte -> ctechar .)
    NOTEQUAL        reduce using rule 74 (varcte -> ctechar .)
    ISEQUALTO       reduce using rule 74 (varcte -> ctechar .)
    MORETHANEQUAL   reduce using rule 74 (varcte -> ctechar .)
    LESSTHANEQUAL   reduce using rule 74 (varcte -> ctechar .)
    AND             reduce using rule 74 (varcte -> ctechar .)
    OR              reduce using rule 74 (varcte -> ctechar .)
    RPAREN          reduce using rule 74 (varcte -> ctechar .)
    COMMA           reduce using rule 74 (varcte -> ctechar .)
    RSQBRACKET      reduce using rule 74 (varcte -> ctechar .)
    SEMICOLON       reduce using rule 74 (varcte -> ctechar .)


state 82

    (17) factor -> varcte .

    TIMES           reduce using rule 17 (factor -> varcte .)
    DIVIDE          reduce using rule 17 (factor -> varcte .)
    PLUS            reduce using rule 17 (factor -> varcte .)
    MINUS           reduce using rule 17 (factor -> varcte .)
    MORETHAN        reduce using rule 17 (factor -> varcte .)
    LESSTHAN        reduce using rule 17 (factor -> varcte .)
    NOTEQUAL        reduce using rule 17 (factor -> varcte .)
    ISEQUALTO       reduce using rule 17 (factor -> varcte .)
    MORETHANEQUAL   reduce using rule 17 (factor -> varcte .)
    LESSTHANEQUAL   reduce using rule 17 (factor -> varcte .)
    AND             reduce using rule 17 (factor -> varcte .)
    OR              reduce using rule 17 (factor -> varcte .)
    COMMA           reduce using rule 17 (factor -> varcte .)
    RSQBRACKET      reduce using rule 17 (factor -> varcte .)
    RPAREN          reduce using rule 17 (factor -> varcte .)
    SEMICOLON       reduce using rule 17 (factor -> varcte .)


state 83

    (21) varid -> ID . arr
    (22) arr -> . LSQBRACKET RSQBRACKET
    (23) arr -> . empty
    (83) empty -> .

    LSQBRACKET      shift and go to state 117
    TIMES           reduce using rule 83 (empty -> .)
    DIVIDE          reduce using rule 83 (empty -> .)
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    MORETHAN        reduce using rule 83 (empty -> .)
    LESSTHAN        reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    ISEQUALTO       reduce using rule 83 (empty -> .)
    MORETHANEQUAL   reduce using rule 83 (empty -> .)
    LESSTHANEQUAL   reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    arr                            shift and go to state 118
    empty                          shift and go to state 119

state 84

    (4) condicion -> IF LPAREN expresion . RPAREN bloque masbloque

    RPAREN          shift and go to state 120


state 85

    (75) varcte -> ctestring .

    TIMES           reduce using rule 75 (varcte -> ctestring .)
    DIVIDE          reduce using rule 75 (varcte -> ctestring .)
    PLUS            reduce using rule 75 (varcte -> ctestring .)
    MINUS           reduce using rule 75 (varcte -> ctestring .)
    MORETHAN        reduce using rule 75 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 75 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 75 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 75 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 75 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 75 (varcte -> ctestring .)
    AND             reduce using rule 75 (varcte -> ctestring .)
    OR              reduce using rule 75 (varcte -> ctestring .)
    RPAREN          reduce using rule 75 (varcte -> ctestring .)
    COMMA           reduce using rule 75 (varcte -> ctestring .)
    RSQBRACKET      reduce using rule 75 (varcte -> ctestring .)
    SEMICOLON       reduce using rule 75 (varcte -> ctestring .)


state 86

    (8) ciclo -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 121


state 87

    (15) asignacion -> ID LSQBRACKET RSQBRACKET . EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    EQUALS          shift and go to state 122


state 88

    (14) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 123


state 89

    (65) masargs -> COMMA args .

    RPAREN          reduce using rule 65 (masargs -> COMMA args .)


state 90

    (60) funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs .

    MAIN            reduce using rule 60 (funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs .)


state 91

    (38) masterminos -> DIVIDE . termino
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    termino                        shift and go to state 124
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    varcte                         shift and go to state 82
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    ctebool                        shift and go to state 65
    ctechar                        shift and go to state 81

state 92

    (35) termino -> factor masterminos . addquadrupletimesdivide
    (36) addquadrupletimesdivide -> . empty
    (83) empty -> .

    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    MORETHAN        reduce using rule 83 (empty -> .)
    LESSTHAN        reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    ISEQUALTO       reduce using rule 83 (empty -> .)
    MORETHANEQUAL   reduce using rule 83 (empty -> .)
    LESSTHANEQUAL   reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 125
    addquadrupletimesdivide        shift and go to state 126

state 93

    (39) masterminos -> empty .

    PLUS            reduce using rule 39 (masterminos -> empty .)
    MINUS           reduce using rule 39 (masterminos -> empty .)
    MORETHAN        reduce using rule 39 (masterminos -> empty .)
    LESSTHAN        reduce using rule 39 (masterminos -> empty .)
    NOTEQUAL        reduce using rule 39 (masterminos -> empty .)
    ISEQUALTO       reduce using rule 39 (masterminos -> empty .)
    MORETHANEQUAL   reduce using rule 39 (masterminos -> empty .)
    LESSTHANEQUAL   reduce using rule 39 (masterminos -> empty .)
    AND             reduce using rule 39 (masterminos -> empty .)
    OR              reduce using rule 39 (masterminos -> empty .)
    COMMA           reduce using rule 39 (masterminos -> empty .)
    RPAREN          reduce using rule 39 (masterminos -> empty .)
    SEMICOLON       reduce using rule 39 (masterminos -> empty .)
    RSQBRACKET      reduce using rule 39 (masterminos -> empty .)


state 94

    (37) masterminos -> TIMES . termino
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    termino                        shift and go to state 127
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    varcte                         shift and go to state 82
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    ctebool                        shift and go to state 65
    ctechar                        shift and go to state 81

state 95

    (27) masexp -> MINUS . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 128
    ctechar                        shift and go to state 81

state 96

    (28) masexp -> empty .

    MORETHAN        reduce using rule 28 (masexp -> empty .)
    LESSTHAN        reduce using rule 28 (masexp -> empty .)
    NOTEQUAL        reduce using rule 28 (masexp -> empty .)
    ISEQUALTO       reduce using rule 28 (masexp -> empty .)
    MORETHANEQUAL   reduce using rule 28 (masexp -> empty .)
    LESSTHANEQUAL   reduce using rule 28 (masexp -> empty .)
    AND             reduce using rule 28 (masexp -> empty .)
    OR              reduce using rule 28 (masexp -> empty .)
    COMMA           reduce using rule 28 (masexp -> empty .)
    RPAREN          reduce using rule 28 (masexp -> empty .)
    SEMICOLON       reduce using rule 28 (masexp -> empty .)
    RSQBRACKET      reduce using rule 28 (masexp -> empty .)


state 97

    (26) masexp -> PLUS . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 129
    ctechar                        shift and go to state 81

state 98

    (24) exp -> termino masexp . addquadrupleplusminus
    (25) addquadrupleplusminus -> . empty
    (83) empty -> .

    MORETHAN        reduce using rule 83 (empty -> .)
    LESSTHAN        reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    ISEQUALTO       reduce using rule 83 (empty -> .)
    MORETHANEQUAL   reduce using rule 83 (empty -> .)
    LESSTHANEQUAL   reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 130
    addquadrupleplusminus          shift and go to state 131

state 99

    (13) masprint -> empty .

    RPAREN          reduce using rule 13 (masprint -> empty .)


state 100

    (12) masprint -> COMMA . listaprint
    (10) listaprint -> . expresion masprint
    (11) listaprint -> . ctestring masprint
    (31) expresion -> . expcomp masexpresion
    (80) ctestring -> . CTESTRING
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    CTESTRING       shift and go to state 63
    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 68
    termino                        shift and go to state 64
    ctebool                        shift and go to state 65
    exp                            shift and go to state 69
    ctestring                      shift and go to state 71
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    listaprint                     shift and go to state 132
    varcte                         shift and go to state 82
    ctechar                        shift and go to state 81

state 101

    (10) listaprint -> expresion masprint .

    RPAREN          reduce using rule 10 (listaprint -> expresion masprint .)


state 102

    (42) expcompcontinuo -> LESSTHAN . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 133
    ctechar                        shift and go to state 81

state 103

    (41) expcompcontinuo -> MORETHAN . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 134
    ctechar                        shift and go to state 81

state 104

    (47) expcompcontinuo -> empty .

    AND             reduce using rule 47 (expcompcontinuo -> empty .)
    OR              reduce using rule 47 (expcompcontinuo -> empty .)
    COMMA           reduce using rule 47 (expcompcontinuo -> empty .)
    RPAREN          reduce using rule 47 (expcompcontinuo -> empty .)
    SEMICOLON       reduce using rule 47 (expcompcontinuo -> empty .)
    RSQBRACKET      reduce using rule 47 (expcompcontinuo -> empty .)


state 105

    (43) expcompcontinuo -> NOTEQUAL . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 135
    ctechar                        shift and go to state 81

state 106

    (45) expcompcontinuo -> MORETHANEQUAL . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 136
    ctechar                        shift and go to state 81

state 107

    (40) expcomp -> exp expcompcontinuo .

    COMMA           reduce using rule 40 (expcomp -> exp expcompcontinuo .)
    RPAREN          reduce using rule 40 (expcomp -> exp expcompcontinuo .)
    SEMICOLON       reduce using rule 40 (expcomp -> exp expcompcontinuo .)
    RSQBRACKET      reduce using rule 40 (expcomp -> exp expcompcontinuo .)
    AND             reduce using rule 40 (expcomp -> exp expcompcontinuo .)
    OR              reduce using rule 40 (expcomp -> exp expcompcontinuo .)


state 108

    (46) expcompcontinuo -> LESSTHANEQUAL . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 137
    ctechar                        shift and go to state 81

state 109

    (44) expcompcontinuo -> ISEQUALTO . exp
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    exp                            shift and go to state 138
    ctechar                        shift and go to state 81

state 110

    (11) listaprint -> ctestring masprint .

    RPAREN          reduce using rule 11 (listaprint -> ctestring masprint .)


state 111

    (16) factor -> leftparen expresion . rightparen
    (20) rightparen -> . RPAREN

    RPAREN          shift and go to state 140

    rightparen                     shift and go to state 139

state 112

    (33) masexpresion -> OR . expcomp
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    expcomp                        shift and go to state 141
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    ctechar                        shift and go to state 81

state 113

    (34) masexpresion -> empty .

    COMMA           reduce using rule 34 (masexpresion -> empty .)
    RPAREN          reduce using rule 34 (masexpresion -> empty .)
    SEMICOLON       reduce using rule 34 (masexpresion -> empty .)
    RSQBRACKET      reduce using rule 34 (masexpresion -> empty .)


state 114

    (31) expresion -> expcomp masexpresion .

    SEMICOLON       reduce using rule 31 (expresion -> expcomp masexpresion .)
    RPAREN          reduce using rule 31 (expresion -> expcomp masexpresion .)
    COMMA           reduce using rule 31 (expresion -> expcomp masexpresion .)
    RSQBRACKET      reduce using rule 31 (expresion -> expcomp masexpresion .)


state 115

    (32) masexpresion -> AND . expcomp
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    factor                         shift and go to state 62
    ctebool                        shift and go to state 65
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    ctestring                      shift and go to state 85
    expcomp                        shift and go to state 142
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    ctechar                        shift and go to state 81

state 116

    (9) escritura -> PRINT LPAREN listaprint RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 143


state 117

    (22) arr -> LSQBRACKET . RSQBRACKET

    RSQBRACKET      shift and go to state 144


state 118

    (21) varid -> ID arr .

    TIMES           reduce using rule 21 (varid -> ID arr .)
    DIVIDE          reduce using rule 21 (varid -> ID arr .)
    PLUS            reduce using rule 21 (varid -> ID arr .)
    MINUS           reduce using rule 21 (varid -> ID arr .)
    MORETHAN        reduce using rule 21 (varid -> ID arr .)
    LESSTHAN        reduce using rule 21 (varid -> ID arr .)
    NOTEQUAL        reduce using rule 21 (varid -> ID arr .)
    ISEQUALTO       reduce using rule 21 (varid -> ID arr .)
    MORETHANEQUAL   reduce using rule 21 (varid -> ID arr .)
    LESSTHANEQUAL   reduce using rule 21 (varid -> ID arr .)
    AND             reduce using rule 21 (varid -> ID arr .)
    OR              reduce using rule 21 (varid -> ID arr .)
    COMMA           reduce using rule 21 (varid -> ID arr .)
    RSQBRACKET      reduce using rule 21 (varid -> ID arr .)
    RPAREN          reduce using rule 21 (varid -> ID arr .)
    SEMICOLON       reduce using rule 21 (varid -> ID arr .)


state 119

    (23) arr -> empty .

    TIMES           reduce using rule 23 (arr -> empty .)
    DIVIDE          reduce using rule 23 (arr -> empty .)
    PLUS            reduce using rule 23 (arr -> empty .)
    MINUS           reduce using rule 23 (arr -> empty .)
    MORETHAN        reduce using rule 23 (arr -> empty .)
    LESSTHAN        reduce using rule 23 (arr -> empty .)
    NOTEQUAL        reduce using rule 23 (arr -> empty .)
    ISEQUALTO       reduce using rule 23 (arr -> empty .)
    MORETHANEQUAL   reduce using rule 23 (arr -> empty .)
    LESSTHANEQUAL   reduce using rule 23 (arr -> empty .)
    AND             reduce using rule 23 (arr -> empty .)
    OR              reduce using rule 23 (arr -> empty .)
    COMMA           reduce using rule 23 (arr -> empty .)
    RPAREN          reduce using rule 23 (arr -> empty .)
    SEMICOLON       reduce using rule 23 (arr -> empty .)
    RSQBRACKET      reduce using rule 23 (arr -> empty .)


state 120

    (4) condicion -> IF LPAREN expresion RPAREN . bloque masbloque
    (5) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 27

    bloque                         shift and go to state 145

state 121

    (8) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (5) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 27

    bloque                         shift and go to state 146

state 122

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS . LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    LSQBRACKET      shift and go to state 147


state 123

    (14) asignacion -> ID EQUALS expresion SEMICOLON .

    ID              reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 14 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 124

    (38) masterminos -> DIVIDE termino .

    PLUS            reduce using rule 38 (masterminos -> DIVIDE termino .)
    MINUS           reduce using rule 38 (masterminos -> DIVIDE termino .)
    MORETHAN        reduce using rule 38 (masterminos -> DIVIDE termino .)
    LESSTHAN        reduce using rule 38 (masterminos -> DIVIDE termino .)
    NOTEQUAL        reduce using rule 38 (masterminos -> DIVIDE termino .)
    ISEQUALTO       reduce using rule 38 (masterminos -> DIVIDE termino .)
    MORETHANEQUAL   reduce using rule 38 (masterminos -> DIVIDE termino .)
    LESSTHANEQUAL   reduce using rule 38 (masterminos -> DIVIDE termino .)
    AND             reduce using rule 38 (masterminos -> DIVIDE termino .)
    OR              reduce using rule 38 (masterminos -> DIVIDE termino .)
    COMMA           reduce using rule 38 (masterminos -> DIVIDE termino .)
    RPAREN          reduce using rule 38 (masterminos -> DIVIDE termino .)
    SEMICOLON       reduce using rule 38 (masterminos -> DIVIDE termino .)
    RSQBRACKET      reduce using rule 38 (masterminos -> DIVIDE termino .)


state 125

    (36) addquadrupletimesdivide -> empty .

    PLUS            reduce using rule 36 (addquadrupletimesdivide -> empty .)
    MINUS           reduce using rule 36 (addquadrupletimesdivide -> empty .)
    MORETHAN        reduce using rule 36 (addquadrupletimesdivide -> empty .)
    LESSTHAN        reduce using rule 36 (addquadrupletimesdivide -> empty .)
    NOTEQUAL        reduce using rule 36 (addquadrupletimesdivide -> empty .)
    ISEQUALTO       reduce using rule 36 (addquadrupletimesdivide -> empty .)
    MORETHANEQUAL   reduce using rule 36 (addquadrupletimesdivide -> empty .)
    LESSTHANEQUAL   reduce using rule 36 (addquadrupletimesdivide -> empty .)
    AND             reduce using rule 36 (addquadrupletimesdivide -> empty .)
    OR              reduce using rule 36 (addquadrupletimesdivide -> empty .)
    COMMA           reduce using rule 36 (addquadrupletimesdivide -> empty .)
    RPAREN          reduce using rule 36 (addquadrupletimesdivide -> empty .)
    SEMICOLON       reduce using rule 36 (addquadrupletimesdivide -> empty .)
    RSQBRACKET      reduce using rule 36 (addquadrupletimesdivide -> empty .)


state 126

    (35) termino -> factor masterminos addquadrupletimesdivide .

    PLUS            reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    MINUS           reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    AND             reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    OR              reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    COMMA           reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    RPAREN          reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    SEMICOLON       reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    RSQBRACKET      reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    MORETHAN        reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    LESSTHAN        reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    NOTEQUAL        reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    ISEQUALTO       reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    MORETHANEQUAL   reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)
    LESSTHANEQUAL   reduce using rule 35 (termino -> factor masterminos addquadrupletimesdivide .)


state 127

    (37) masterminos -> TIMES termino .

    PLUS            reduce using rule 37 (masterminos -> TIMES termino .)
    MINUS           reduce using rule 37 (masterminos -> TIMES termino .)
    MORETHAN        reduce using rule 37 (masterminos -> TIMES termino .)
    LESSTHAN        reduce using rule 37 (masterminos -> TIMES termino .)
    NOTEQUAL        reduce using rule 37 (masterminos -> TIMES termino .)
    ISEQUALTO       reduce using rule 37 (masterminos -> TIMES termino .)
    MORETHANEQUAL   reduce using rule 37 (masterminos -> TIMES termino .)
    LESSTHANEQUAL   reduce using rule 37 (masterminos -> TIMES termino .)
    AND             reduce using rule 37 (masterminos -> TIMES termino .)
    OR              reduce using rule 37 (masterminos -> TIMES termino .)
    COMMA           reduce using rule 37 (masterminos -> TIMES termino .)
    RPAREN          reduce using rule 37 (masterminos -> TIMES termino .)
    SEMICOLON       reduce using rule 37 (masterminos -> TIMES termino .)
    RSQBRACKET      reduce using rule 37 (masterminos -> TIMES termino .)


state 128

    (27) masexp -> MINUS exp .

    MORETHAN        reduce using rule 27 (masexp -> MINUS exp .)
    LESSTHAN        reduce using rule 27 (masexp -> MINUS exp .)
    NOTEQUAL        reduce using rule 27 (masexp -> MINUS exp .)
    ISEQUALTO       reduce using rule 27 (masexp -> MINUS exp .)
    MORETHANEQUAL   reduce using rule 27 (masexp -> MINUS exp .)
    LESSTHANEQUAL   reduce using rule 27 (masexp -> MINUS exp .)
    AND             reduce using rule 27 (masexp -> MINUS exp .)
    OR              reduce using rule 27 (masexp -> MINUS exp .)
    COMMA           reduce using rule 27 (masexp -> MINUS exp .)
    RPAREN          reduce using rule 27 (masexp -> MINUS exp .)
    SEMICOLON       reduce using rule 27 (masexp -> MINUS exp .)
    RSQBRACKET      reduce using rule 27 (masexp -> MINUS exp .)


state 129

    (26) masexp -> PLUS exp .

    MORETHAN        reduce using rule 26 (masexp -> PLUS exp .)
    LESSTHAN        reduce using rule 26 (masexp -> PLUS exp .)
    NOTEQUAL        reduce using rule 26 (masexp -> PLUS exp .)
    ISEQUALTO       reduce using rule 26 (masexp -> PLUS exp .)
    MORETHANEQUAL   reduce using rule 26 (masexp -> PLUS exp .)
    LESSTHANEQUAL   reduce using rule 26 (masexp -> PLUS exp .)
    AND             reduce using rule 26 (masexp -> PLUS exp .)
    OR              reduce using rule 26 (masexp -> PLUS exp .)
    COMMA           reduce using rule 26 (masexp -> PLUS exp .)
    RPAREN          reduce using rule 26 (masexp -> PLUS exp .)
    SEMICOLON       reduce using rule 26 (masexp -> PLUS exp .)
    RSQBRACKET      reduce using rule 26 (masexp -> PLUS exp .)


state 130

    (25) addquadrupleplusminus -> empty .

    MORETHAN        reduce using rule 25 (addquadrupleplusminus -> empty .)
    LESSTHAN        reduce using rule 25 (addquadrupleplusminus -> empty .)
    NOTEQUAL        reduce using rule 25 (addquadrupleplusminus -> empty .)
    ISEQUALTO       reduce using rule 25 (addquadrupleplusminus -> empty .)
    MORETHANEQUAL   reduce using rule 25 (addquadrupleplusminus -> empty .)
    LESSTHANEQUAL   reduce using rule 25 (addquadrupleplusminus -> empty .)
    AND             reduce using rule 25 (addquadrupleplusminus -> empty .)
    OR              reduce using rule 25 (addquadrupleplusminus -> empty .)
    COMMA           reduce using rule 25 (addquadrupleplusminus -> empty .)
    RPAREN          reduce using rule 25 (addquadrupleplusminus -> empty .)
    SEMICOLON       reduce using rule 25 (addquadrupleplusminus -> empty .)
    RSQBRACKET      reduce using rule 25 (addquadrupleplusminus -> empty .)


state 131

    (24) exp -> termino masexp addquadrupleplusminus .

    AND             reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    OR              reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    COMMA           reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    RPAREN          reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    SEMICOLON       reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    RSQBRACKET      reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    MORETHAN        reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    LESSTHAN        reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    NOTEQUAL        reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    ISEQUALTO       reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    MORETHANEQUAL   reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)
    LESSTHANEQUAL   reduce using rule 24 (exp -> termino masexp addquadrupleplusminus .)


state 132

    (12) masprint -> COMMA listaprint .

    RPAREN          reduce using rule 12 (masprint -> COMMA listaprint .)


state 133

    (42) expcompcontinuo -> LESSTHAN exp .

    AND             reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)
    OR              reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)
    COMMA           reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)
    RPAREN          reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)
    SEMICOLON       reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)
    RSQBRACKET      reduce using rule 42 (expcompcontinuo -> LESSTHAN exp .)


state 134

    (41) expcompcontinuo -> MORETHAN exp .

    AND             reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)
    OR              reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)
    COMMA           reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)
    RPAREN          reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)
    SEMICOLON       reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)
    RSQBRACKET      reduce using rule 41 (expcompcontinuo -> MORETHAN exp .)


state 135

    (43) expcompcontinuo -> NOTEQUAL exp .

    AND             reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)
    OR              reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)
    COMMA           reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)
    RPAREN          reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)
    RSQBRACKET      reduce using rule 43 (expcompcontinuo -> NOTEQUAL exp .)


state 136

    (45) expcompcontinuo -> MORETHANEQUAL exp .

    AND             reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)
    OR              reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)
    COMMA           reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)
    RPAREN          reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)
    SEMICOLON       reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)
    RSQBRACKET      reduce using rule 45 (expcompcontinuo -> MORETHANEQUAL exp .)


state 137

    (46) expcompcontinuo -> LESSTHANEQUAL exp .

    AND             reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)
    OR              reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)
    COMMA           reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)
    RPAREN          reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)
    SEMICOLON       reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)
    RSQBRACKET      reduce using rule 46 (expcompcontinuo -> LESSTHANEQUAL exp .)


state 138

    (44) expcompcontinuo -> ISEQUALTO exp .

    AND             reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)
    OR              reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)
    COMMA           reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)
    RPAREN          reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)
    SEMICOLON       reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)
    RSQBRACKET      reduce using rule 44 (expcompcontinuo -> ISEQUALTO exp .)


state 139

    (16) factor -> leftparen expresion rightparen .

    TIMES           reduce using rule 16 (factor -> leftparen expresion rightparen .)
    DIVIDE          reduce using rule 16 (factor -> leftparen expresion rightparen .)
    PLUS            reduce using rule 16 (factor -> leftparen expresion rightparen .)
    MINUS           reduce using rule 16 (factor -> leftparen expresion rightparen .)
    MORETHAN        reduce using rule 16 (factor -> leftparen expresion rightparen .)
    LESSTHAN        reduce using rule 16 (factor -> leftparen expresion rightparen .)
    NOTEQUAL        reduce using rule 16 (factor -> leftparen expresion rightparen .)
    ISEQUALTO       reduce using rule 16 (factor -> leftparen expresion rightparen .)
    MORETHANEQUAL   reduce using rule 16 (factor -> leftparen expresion rightparen .)
    LESSTHANEQUAL   reduce using rule 16 (factor -> leftparen expresion rightparen .)
    AND             reduce using rule 16 (factor -> leftparen expresion rightparen .)
    OR              reduce using rule 16 (factor -> leftparen expresion rightparen .)
    COMMA           reduce using rule 16 (factor -> leftparen expresion rightparen .)
    RSQBRACKET      reduce using rule 16 (factor -> leftparen expresion rightparen .)
    RPAREN          reduce using rule 16 (factor -> leftparen expresion rightparen .)
    SEMICOLON       reduce using rule 16 (factor -> leftparen expresion rightparen .)


state 140

    (20) rightparen -> RPAREN .

    TIMES           reduce using rule 20 (rightparen -> RPAREN .)
    DIVIDE          reduce using rule 20 (rightparen -> RPAREN .)
    PLUS            reduce using rule 20 (rightparen -> RPAREN .)
    MINUS           reduce using rule 20 (rightparen -> RPAREN .)
    MORETHAN        reduce using rule 20 (rightparen -> RPAREN .)
    LESSTHAN        reduce using rule 20 (rightparen -> RPAREN .)
    NOTEQUAL        reduce using rule 20 (rightparen -> RPAREN .)
    ISEQUALTO       reduce using rule 20 (rightparen -> RPAREN .)
    MORETHANEQUAL   reduce using rule 20 (rightparen -> RPAREN .)
    LESSTHANEQUAL   reduce using rule 20 (rightparen -> RPAREN .)
    AND             reduce using rule 20 (rightparen -> RPAREN .)
    OR              reduce using rule 20 (rightparen -> RPAREN .)
    COMMA           reduce using rule 20 (rightparen -> RPAREN .)
    RPAREN          reduce using rule 20 (rightparen -> RPAREN .)
    SEMICOLON       reduce using rule 20 (rightparen -> RPAREN .)
    RSQBRACKET      reduce using rule 20 (rightparen -> RPAREN .)


state 141

    (33) masexpresion -> OR expcomp .

    COMMA           reduce using rule 33 (masexpresion -> OR expcomp .)
    RPAREN          reduce using rule 33 (masexpresion -> OR expcomp .)
    SEMICOLON       reduce using rule 33 (masexpresion -> OR expcomp .)
    RSQBRACKET      reduce using rule 33 (masexpresion -> OR expcomp .)


state 142

    (32) masexpresion -> AND expcomp .

    COMMA           reduce using rule 32 (masexpresion -> AND expcomp .)
    RPAREN          reduce using rule 32 (masexpresion -> AND expcomp .)
    SEMICOLON       reduce using rule 32 (masexpresion -> AND expcomp .)
    RSQBRACKET      reduce using rule 32 (masexpresion -> AND expcomp .)


state 143

    (9) escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .

    ID              reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)
    IF              reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)
    WHILE           reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)
    PRINT           reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)
    VAR             reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 9 (escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON .)


state 144

    (22) arr -> LSQBRACKET RSQBRACKET .

    TIMES           reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    DIVIDE          reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    PLUS            reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    MINUS           reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    MORETHAN        reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    LESSTHAN        reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    NOTEQUAL        reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    ISEQUALTO       reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    MORETHANEQUAL   reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    LESSTHANEQUAL   reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    AND             reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    OR              reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    COMMA           reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    RPAREN          reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    SEMICOLON       reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)
    RSQBRACKET      reduce using rule 22 (arr -> LSQBRACKET RSQBRACKET .)


state 145

    (4) condicion -> IF LPAREN expresion RPAREN bloque . masbloque
    (6) masbloque -> . ELSE bloque
    (7) masbloque -> . empty
    (83) empty -> .

    ELSE            shift and go to state 149
    ID              reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)
    VAR             reduce using rule 83 (empty -> .)
    RBRACKET        reduce using rule 83 (empty -> .)

    masbloque                      shift and go to state 148
    empty                          shift and go to state 150

state 146

    (8) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    VAR             reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACKET        reduce using rule 8 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 147

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET . expresion comaexpresion RSQBRACKET SEMICOLON
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 151
    ctebool                        shift and go to state 65
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    ctestring                      shift and go to state 85
    ctechar                        shift and go to state 81

state 148

    (4) condicion -> IF LPAREN expresion RPAREN bloque masbloque .

    ID              reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)
    IF              reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)
    WHILE           reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)
    PRINT           reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)
    VAR             reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)
    RBRACKET        reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN bloque masbloque .)


state 149

    (6) masbloque -> ELSE . bloque
    (5) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 27

    bloque                         shift and go to state 152

state 150

    (7) masbloque -> empty .

    ID              reduce using rule 7 (masbloque -> empty .)
    IF              reduce using rule 7 (masbloque -> empty .)
    WHILE           reduce using rule 7 (masbloque -> empty .)
    PRINT           reduce using rule 7 (masbloque -> empty .)
    VAR             reduce using rule 7 (masbloque -> empty .)
    RBRACKET        reduce using rule 7 (masbloque -> empty .)


state 151

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion . comaexpresion RSQBRACKET SEMICOLON
    (29) comaexpresion -> . COMMA expresion comaexpresion
    (30) comaexpresion -> . empty
    (83) empty -> .

    COMMA           shift and go to state 154
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 153
    comaexpresion                  shift and go to state 155

state 152

    (6) masbloque -> ELSE bloque .

    ID              reduce using rule 6 (masbloque -> ELSE bloque .)
    IF              reduce using rule 6 (masbloque -> ELSE bloque .)
    WHILE           reduce using rule 6 (masbloque -> ELSE bloque .)
    PRINT           reduce using rule 6 (masbloque -> ELSE bloque .)
    VAR             reduce using rule 6 (masbloque -> ELSE bloque .)
    RBRACKET        reduce using rule 6 (masbloque -> ELSE bloque .)


state 153

    (30) comaexpresion -> empty .

    RSQBRACKET      reduce using rule 30 (comaexpresion -> empty .)


state 154

    (29) comaexpresion -> COMMA . expresion comaexpresion
    (31) expresion -> . expcomp masexpresion
    (40) expcomp -> . exp expcompcontinuo
    (24) exp -> . termino masexp addquadrupleplusminus
    (35) termino -> . factor masterminos addquadrupletimesdivide
    (16) factor -> . leftparen expresion rightparen
    (17) factor -> . varcte
    (18) factor -> . varid
    (19) leftparen -> . LPAREN
    (72) varcte -> . cteint
    (73) varcte -> . ctefloat
    (74) varcte -> . ctechar
    (75) varcte -> . ctestring
    (76) varcte -> . ctebool
    (21) varid -> . ID arr
    (77) cteint -> . CTEINT
    (78) ctefloat -> . CTEFLOAT
    (79) ctechar -> . CTECHAR
    (80) ctestring -> . CTESTRING
    (81) ctebool -> . TRUE
    (82) ctebool -> . FALSE

    LPAREN          shift and go to state 66
    ID              shift and go to state 83
    CTEINT          shift and go to state 67
    CTEFLOAT        shift and go to state 78
    CTECHAR         shift and go to state 75
    CTESTRING       shift and go to state 63
    TRUE            shift and go to state 70
    FALSE           shift and go to state 74

    factor                         shift and go to state 62
    expresion                      shift and go to state 156
    ctebool                        shift and go to state 65
    exp                            shift and go to state 69
    varcte                         shift and go to state 82
    termino                        shift and go to state 64
    ctefloat                       shift and go to state 72
    leftparen                      shift and go to state 73
    cteint                         shift and go to state 76
    varid                          shift and go to state 77
    expcomp                        shift and go to state 79
    ctestring                      shift and go to state 85
    ctechar                        shift and go to state 81

state 155

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion . RSQBRACKET SEMICOLON

    RSQBRACKET      shift and go to state 157


state 156

    (29) comaexpresion -> COMMA expresion . comaexpresion
    (29) comaexpresion -> . COMMA expresion comaexpresion
    (30) comaexpresion -> . empty
    (83) empty -> .

    COMMA           shift and go to state 154
    RSQBRACKET      reduce using rule 83 (empty -> .)

    empty                          shift and go to state 153
    comaexpresion                  shift and go to state 158

state 157

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 159


state 158

    (29) comaexpresion -> COMMA expresion comaexpresion .

    RSQBRACKET      reduce using rule 29 (comaexpresion -> COMMA expresion comaexpresion .)


state 159

    (15) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .

    ID              reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    IF              reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    WHILE           reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    PRINT           reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    VAR             reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    RBRACKET        reduce using rule 15 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)

