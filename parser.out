Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> prog ID SEMICOLON vars funcs main bloque
Rule 2     prog -> PROGRAM
Rule 3     main -> MAIN
Rule 4     condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
Rule 5     estatutobloque -> estatuto
Rule 6     estatutobloque -> bloque
Rule 7     gotoF -> empty
Rule 8     bloque -> LBRACKET masestatuto RBRACKET
Rule 9     masbloque -> ELSE goto estatutobloque
Rule 10    masbloque -> empty
Rule 11    goto -> empty
Rule 12    ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto
Rule 13    while -> WHILE
Rule 14    escritura -> print LPAREN listaprint RPAREN SEMICOLON
Rule 15    print -> PRINT
Rule 16    listaprint -> expresion masprint
Rule 17    listaprint -> ctestring masprint
Rule 18    masprint -> addQPP listaprint
Rule 19    masprint -> empty
Rule 20    addQPP -> COMMA
Rule 21    asignacion -> ID EQUALS expresion SEMICOLON
Rule 22    asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
Rule 23    factor -> leftparen expresion rightparen
Rule 24    factor -> varcte
Rule 25    factor -> varid
Rule 26    factor -> llamafunc
Rule 27    leftparen -> LPAREN
Rule 28    rightparen -> RPAREN
Rule 29    varid -> ID arr
Rule 30    arr -> LSQBRACKET RSQBRACKET
Rule 31    arr -> empty
Rule 32    exp -> termino masexp
Rule 33    masexp -> addQPPM exp
Rule 34    masexp -> empty
Rule 35    addQPPM -> PLUS
Rule 36    addQPPM -> MINUS
Rule 37    comaexpresion -> COMMA expresion comaexpresion
Rule 38    comaexpresion -> empty
Rule 39    expresion -> expcomp masexpresion
Rule 40    addQPAO -> AND
Rule 41    addQPAO -> OR
Rule 42    masexpresion -> addQPAO expresion
Rule 43    masexpresion -> empty
Rule 44    termino -> factor masterminos
Rule 45    addQTD -> TIMES
Rule 46    addQTD -> DIVIDE
Rule 47    masterminos -> addQTD termino
Rule 48    masterminos -> empty
Rule 49    expcomp -> exp expcompcontinuo
Rule 50    addQPComp -> MORETHAN
Rule 51    addQPComp -> LESSTHAN
Rule 52    addQPComp -> NOTEQUAL
Rule 53    addQPComp -> ISEQUALTO
Rule 54    addQPComp -> MORETHANEQUAL
Rule 55    addQPComp -> LESSTHANEQUAL
Rule 56    expcompcontinuo -> addQPComp expcomp
Rule 57    expcompcontinuo -> empty
Rule 58    estatuto -> asignacion
Rule 59    estatuto -> condicion
Rule 60    estatuto -> ciclo
Rule 61    estatuto -> escritura
Rule 62    estatuto -> lectura
Rule 63    estatuto -> vars
Rule 64    estatuto -> llamafunc SEMICOLON
Rule 65    estatuto -> COMMENT
Rule 66    estatuto -> CPPCOMMENT
Rule 67    lectura -> READ LPAREN ID RPAREN SEMICOLON
Rule 68    llamafunc -> idfunc LPAREN funcargs RPAREN
Rule 69    idfunc -> ID
Rule 70    funcargs -> expresion listafuncargs checarparams
Rule 71    funcargs -> empty
Rule 72    listafuncargs -> COMMA expresion listafuncargs
Rule 73    listafuncargs -> empty
Rule 74    checarparams -> empty
Rule 75    masestatuto -> estatuto masestatuto
Rule 76    masestatuto -> empty
Rule 77    vars -> VAR tipo listaid SEMICOLON vars
Rule 78    vars -> empty
Rule 79    listaid -> ID masid
Rule 80    masid -> COMMA listaid
Rule 81    masid -> empty
Rule 82    funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
Rule 83    funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
Rule 84    funcs -> empty
Rule 85    bloquefunc -> LBRACKET masestatuto retorno RBRACKET
Rule 86    retorno -> RETURN expresion SEMICOLON
Rule 87    retorno -> RETURN SEMICOLON
Rule 88    funcaux -> tipo ID
Rule 89    args -> tipo ID
Rule 90    args -> empty
Rule 91    masargs -> COMMA args masargs
Rule 92    masargs -> empty
Rule 93    tipo -> INT
Rule 94    tipo -> FLOAT
Rule 95    tipo -> CHAR
Rule 96    tipo -> BOOL
Rule 97    tipo -> STRING
Rule 98    tipo -> VOID
Rule 99    varcte -> cteint
Rule 100   varcte -> ctefloat
Rule 101   varcte -> ctechar
Rule 102   varcte -> ctestring
Rule 103   varcte -> ctebool
Rule 104   cteint -> CTEINT
Rule 105   ctefloat -> CTEFLOAT
Rule 106   ctechar -> CTECHAR
Rule 107   ctestring -> CTESTRING
Rule 108   ctebool -> TRUE
Rule 109   ctebool -> FALSE
Rule 110   empty -> <empty>

Terminals, with rules where they appear

AND                  : 40
BOOL                 : 96
CHAR                 : 95
COMMA                : 20 37 72 80 91
COMMENT              : 65
CPPCOMMENT           : 66
CTECHAR              : 106
CTEFLOAT             : 105
CTEINT               : 104
CTESTRING            : 107
DIVIDE               : 46
ELSE                 : 9
EQUALS               : 21 22
FALSE                : 109
FLOAT                : 94
FUNCTION             : 82 83
ID                   : 1 21 22 29 67 69 79 88 89
IF                   : 4
INT                  : 93
ISEQUALTO            : 53
LBRACKET             : 8 85
LESSTHAN             : 51
LESSTHANEQUAL        : 55
LPAREN               : 4 12 14 27 67 68 82 83
LSQBRACKET           : 22 22 30
MAIN                 : 3
MINUS                : 36
MORETHAN             : 50
MORETHANEQUAL        : 54
NOTEQUAL             : 52
OR                   : 41
PLUS                 : 35
PRINT                : 15
PROGRAM              : 2
RBRACKET             : 8 85
READ                 : 67
RETURN               : 86 87
RPAREN               : 4 12 14 28 67 68 82 83
RSQBRACKET           : 22 22 30
SEMICOLON            : 1 14 21 22 64 67 77 86 87
STRING               : 97
TIMES                : 45
TRUE                 : 108
VAR                  : 77
VOID                 : 98
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

addQPAO              : 42
addQPComp            : 56
addQPP               : 18
addQPPM              : 33
addQTD               : 47
args                 : 82 91
arr                  : 29
asignacion           : 58
bloque               : 1 6
bloquefunc           : 82 83
checarparams         : 70
ciclo                : 60
comaexpresion        : 22 37
condicion            : 59
ctebool              : 103
ctechar              : 101
ctefloat             : 100
cteint               : 99
ctestring            : 17 102
empty                : 7 10 11 19 31 34 38 43 48 57 71 73 74 76 78 81 84 90 92
escritura            : 61
estatuto             : 5 75
estatutobloque       : 4 9 12
exp                  : 33 49
expcomp              : 39 56
expcompcontinuo      : 49
expresion            : 4 12 16 21 22 23 37 42 70 72 86
factor               : 44
funcargs             : 68
funcaux              : 82 83
funcs                : 1 82 83
goto                 : 9 12
gotoF                : 4 12
idfunc               : 68
lectura              : 62
leftparen            : 23
listafuncargs        : 70 72
listaid              : 77 80
listaprint           : 14 18
llamafunc            : 26 64
main                 : 1
masargs              : 82 91
masbloque            : 4
masestatuto          : 8 75 85
masexp               : 32
masexpresion         : 39
masid                : 79
masprint             : 16 17
masterminos          : 44
print                : 14
prog                 : 1
programa             : 0
retorno              : 85
rightparen           : 23
termino              : 32 47
tipo                 : 77 88 89
varcte               : 24
varid                : 25
vars                 : 1 63 77
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . prog ID SEMICOLON vars funcs main bloque
    (2) prog -> . PROGRAM

    PROGRAM         shift and go to state 1

    prog                           shift and go to state 2
    programa                       shift and go to state 3

state 1

    (2) prog -> PROGRAM .

    ID              reduce using rule 2 (prog -> PROGRAM .)


state 2

    (1) programa -> prog . ID SEMICOLON vars funcs main bloque

    ID              shift and go to state 4


state 3

    (0) S' -> programa .



state 4

    (1) programa -> prog ID . SEMICOLON vars funcs main bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> prog ID SEMICOLON . vars funcs main bloque
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (110) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 110 (empty -> .)
    MAIN            reduce using rule 110 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) programa -> prog ID SEMICOLON vars . funcs main bloque
    (82) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (83) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (84) funcs -> . empty
    (110) empty -> .

    FUNCTION        shift and go to state 9
    MAIN            reduce using rule 110 (empty -> .)

    funcs                          shift and go to state 10
    empty                          shift and go to state 11

state 7

    (77) vars -> VAR . tipo listaid SEMICOLON vars
    (93) tipo -> . INT
    (94) tipo -> . FLOAT
    (95) tipo -> . CHAR
    (96) tipo -> . BOOL
    (97) tipo -> . STRING
    (98) tipo -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 15
    VOID            shift and go to state 13

    tipo                           shift and go to state 12

state 8

    (78) vars -> empty .

    FUNCTION        reduce using rule 78 (vars -> empty .)
    MAIN            reduce using rule 78 (vars -> empty .)
    COMMENT         reduce using rule 78 (vars -> empty .)
    CPPCOMMENT      reduce using rule 78 (vars -> empty .)
    ID              reduce using rule 78 (vars -> empty .)
    IF              reduce using rule 78 (vars -> empty .)
    READ            reduce using rule 78 (vars -> empty .)
    VAR             reduce using rule 78 (vars -> empty .)
    WHILE           reduce using rule 78 (vars -> empty .)
    PRINT           reduce using rule 78 (vars -> empty .)
    RBRACKET        reduce using rule 78 (vars -> empty .)
    RETURN          reduce using rule 78 (vars -> empty .)
    ELSE            reduce using rule 78 (vars -> empty .)


state 9

    (82) funcs -> FUNCTION . funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (83) funcs -> FUNCTION . funcaux LPAREN RPAREN bloquefunc funcs
    (88) funcaux -> . tipo ID
    (93) tipo -> . INT
    (94) tipo -> . FLOAT
    (95) tipo -> . CHAR
    (96) tipo -> . BOOL
    (97) tipo -> . STRING
    (98) tipo -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 15
    VOID            shift and go to state 13

    funcaux                        shift and go to state 19
    tipo                           shift and go to state 20

state 10

    (1) programa -> prog ID SEMICOLON vars funcs . main bloque
    (3) main -> . MAIN

    MAIN            shift and go to state 22

    main                           shift and go to state 21

state 11

    (84) funcs -> empty .

    MAIN            reduce using rule 84 (funcs -> empty .)


state 12

    (77) vars -> VAR tipo . listaid SEMICOLON vars
    (79) listaid -> . ID masid

    ID              shift and go to state 23

    listaid                        shift and go to state 24

state 13

    (98) tipo -> VOID .

    ID              reduce using rule 98 (tipo -> VOID .)


state 14

    (93) tipo -> INT .

    ID              reduce using rule 93 (tipo -> INT .)


state 15

    (97) tipo -> STRING .

    ID              reduce using rule 97 (tipo -> STRING .)


state 16

    (95) tipo -> CHAR .

    ID              reduce using rule 95 (tipo -> CHAR .)


state 17

    (96) tipo -> BOOL .

    ID              reduce using rule 96 (tipo -> BOOL .)


state 18

    (94) tipo -> FLOAT .

    ID              reduce using rule 94 (tipo -> FLOAT .)


state 19

    (82) funcs -> FUNCTION funcaux . LPAREN args masargs RPAREN bloquefunc funcs
    (83) funcs -> FUNCTION funcaux . LPAREN RPAREN bloquefunc funcs

    LPAREN          shift and go to state 25


state 20

    (88) funcaux -> tipo . ID

    ID              shift and go to state 26


state 21

    (1) programa -> prog ID SEMICOLON vars funcs main . bloque
    (8) bloque -> . LBRACKET masestatuto RBRACKET

    LBRACKET        shift and go to state 28

    bloque                         shift and go to state 27

state 22

    (3) main -> MAIN .

    LBRACKET        reduce using rule 3 (main -> MAIN .)


state 23

    (79) listaid -> ID . masid
    (80) masid -> . COMMA listaid
    (81) masid -> . empty
    (110) empty -> .

    COMMA           shift and go to state 30
    SEMICOLON       reduce using rule 110 (empty -> .)

    empty                          shift and go to state 29
    masid                          shift and go to state 31

state 24

    (77) vars -> VAR tipo listaid . SEMICOLON vars

    SEMICOLON       shift and go to state 32


state 25

    (82) funcs -> FUNCTION funcaux LPAREN . args masargs RPAREN bloquefunc funcs
    (83) funcs -> FUNCTION funcaux LPAREN . RPAREN bloquefunc funcs
    (89) args -> . tipo ID
    (90) args -> . empty
    (93) tipo -> . INT
    (94) tipo -> . FLOAT
    (95) tipo -> . CHAR
    (96) tipo -> . BOOL
    (97) tipo -> . STRING
    (98) tipo -> . VOID
    (110) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 36
    INT             shift and go to state 14
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 15
    VOID            shift and go to state 13
    COMMA           reduce using rule 110 (empty -> .)

  ! RPAREN          [ reduce using rule 110 (empty -> .) ]

    args                           shift and go to state 33
    tipo                           shift and go to state 34
    empty                          shift and go to state 35

state 26

    (88) funcaux -> tipo ID .

    LPAREN          reduce using rule 88 (funcaux -> tipo ID .)


state 27

    (1) programa -> prog ID SEMICOLON vars funcs main bloque .

    $end            reduce using rule 1 (programa -> prog ID SEMICOLON vars funcs main bloque .)


state 28

    (8) bloque -> LBRACKET . masestatuto RBRACKET
    (75) masestatuto -> . estatuto masestatuto
    (76) masestatuto -> . empty
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (110) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    RBRACKET        reduce using rule 110 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    masestatuto                    shift and go to state 47
    estatuto                       shift and go to state 52
    idfunc                         shift and go to state 37
    print                          shift and go to state 53
    vars                           shift and go to state 54
    asignacion                     shift and go to state 55
    empty                          shift and go to state 49
    escritura                      shift and go to state 56

state 29

    (81) masid -> empty .

    SEMICOLON       reduce using rule 81 (masid -> empty .)


state 30

    (80) masid -> COMMA . listaid
    (79) listaid -> . ID masid

    ID              shift and go to state 23

    listaid                        shift and go to state 57

state 31

    (79) listaid -> ID masid .

    SEMICOLON       reduce using rule 79 (listaid -> ID masid .)


state 32

    (77) vars -> VAR tipo listaid SEMICOLON . vars
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (110) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 7
    FUNCTION        reduce using rule 110 (empty -> .)
    MAIN            reduce using rule 110 (empty -> .)
    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

  ! VAR             [ reduce using rule 110 (empty -> .) ]

    vars                           shift and go to state 58
    empty                          shift and go to state 8

state 33

    (82) funcs -> FUNCTION funcaux LPAREN args . masargs RPAREN bloquefunc funcs
    (91) masargs -> . COMMA args masargs
    (92) masargs -> . empty
    (110) empty -> .

    COMMA           shift and go to state 61
    RPAREN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 59
    masargs                        shift and go to state 60

state 34

    (89) args -> tipo . ID

    ID              shift and go to state 62


state 35

    (90) args -> empty .

    COMMA           reduce using rule 90 (args -> empty .)
    RPAREN          reduce using rule 90 (args -> empty .)


state 36

    (83) funcs -> FUNCTION funcaux LPAREN RPAREN . bloquefunc funcs
    (85) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 63

    bloquefunc                     shift and go to state 64

state 37

    (68) llamafunc -> idfunc . LPAREN funcargs RPAREN

    LPAREN          shift and go to state 65


state 38

    (60) estatuto -> ciclo .

    COMMENT         reduce using rule 60 (estatuto -> ciclo .)
    CPPCOMMENT      reduce using rule 60 (estatuto -> ciclo .)
    ID              reduce using rule 60 (estatuto -> ciclo .)
    IF              reduce using rule 60 (estatuto -> ciclo .)
    READ            reduce using rule 60 (estatuto -> ciclo .)
    VAR             reduce using rule 60 (estatuto -> ciclo .)
    WHILE           reduce using rule 60 (estatuto -> ciclo .)
    PRINT           reduce using rule 60 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 60 (estatuto -> ciclo .)
    RETURN          reduce using rule 60 (estatuto -> ciclo .)
    ELSE            reduce using rule 60 (estatuto -> ciclo .)


state 39

    (65) estatuto -> COMMENT .

    COMMENT         reduce using rule 65 (estatuto -> COMMENT .)
    CPPCOMMENT      reduce using rule 65 (estatuto -> COMMENT .)
    ID              reduce using rule 65 (estatuto -> COMMENT .)
    IF              reduce using rule 65 (estatuto -> COMMENT .)
    READ            reduce using rule 65 (estatuto -> COMMENT .)
    VAR             reduce using rule 65 (estatuto -> COMMENT .)
    WHILE           reduce using rule 65 (estatuto -> COMMENT .)
    PRINT           reduce using rule 65 (estatuto -> COMMENT .)
    RBRACKET        reduce using rule 65 (estatuto -> COMMENT .)
    RETURN          reduce using rule 65 (estatuto -> COMMENT .)
    ELSE            reduce using rule 65 (estatuto -> COMMENT .)


state 40

    (62) estatuto -> lectura .

    COMMENT         reduce using rule 62 (estatuto -> lectura .)
    CPPCOMMENT      reduce using rule 62 (estatuto -> lectura .)
    ID              reduce using rule 62 (estatuto -> lectura .)
    IF              reduce using rule 62 (estatuto -> lectura .)
    READ            reduce using rule 62 (estatuto -> lectura .)
    VAR             reduce using rule 62 (estatuto -> lectura .)
    WHILE           reduce using rule 62 (estatuto -> lectura .)
    PRINT           reduce using rule 62 (estatuto -> lectura .)
    RBRACKET        reduce using rule 62 (estatuto -> lectura .)
    RETURN          reduce using rule 62 (estatuto -> lectura .)
    ELSE            reduce using rule 62 (estatuto -> lectura .)


state 41

    (12) ciclo -> while . LPAREN expresion RPAREN gotoF estatutobloque goto

    LPAREN          shift and go to state 66


state 42

    (64) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 67


state 43

    (21) asignacion -> ID . EQUALS expresion SEMICOLON
    (22) asignacion -> ID . LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (69) idfunc -> ID .

    EQUALS          shift and go to state 68
    LSQBRACKET      shift and go to state 69
    LPAREN          reduce using rule 69 (idfunc -> ID .)


state 44

    (67) lectura -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 45

    (15) print -> PRINT .

    LPAREN          reduce using rule 15 (print -> PRINT .)


state 46

    (59) estatuto -> condicion .

    COMMENT         reduce using rule 59 (estatuto -> condicion .)
    CPPCOMMENT      reduce using rule 59 (estatuto -> condicion .)
    ID              reduce using rule 59 (estatuto -> condicion .)
    IF              reduce using rule 59 (estatuto -> condicion .)
    READ            reduce using rule 59 (estatuto -> condicion .)
    VAR             reduce using rule 59 (estatuto -> condicion .)
    WHILE           reduce using rule 59 (estatuto -> condicion .)
    PRINT           reduce using rule 59 (estatuto -> condicion .)
    RBRACKET        reduce using rule 59 (estatuto -> condicion .)
    RETURN          reduce using rule 59 (estatuto -> condicion .)
    ELSE            reduce using rule 59 (estatuto -> condicion .)


state 47

    (8) bloque -> LBRACKET masestatuto . RBRACKET

    RBRACKET        shift and go to state 71


state 48

    (13) while -> WHILE .

    LPAREN          reduce using rule 13 (while -> WHILE .)


state 49

    (76) masestatuto -> empty .
    (78) vars -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 76 (masestatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 76 (masestatuto -> empty .)
    RBRACKET        reduce using rule 76 (masestatuto -> empty .)
    RETURN          reduce using rule 76 (masestatuto -> empty .)
    COMMENT         reduce using rule 78 (vars -> empty .)
    CPPCOMMENT      reduce using rule 78 (vars -> empty .)
    ID              reduce using rule 78 (vars -> empty .)
    IF              reduce using rule 78 (vars -> empty .)
    READ            reduce using rule 78 (vars -> empty .)
    VAR             reduce using rule 78 (vars -> empty .)
    WHILE           reduce using rule 78 (vars -> empty .)
    PRINT           reduce using rule 78 (vars -> empty .)

  ! RBRACKET        [ reduce using rule 78 (vars -> empty .) ]
  ! RETURN          [ reduce using rule 78 (vars -> empty .) ]


state 50

    (66) estatuto -> CPPCOMMENT .

    COMMENT         reduce using rule 66 (estatuto -> CPPCOMMENT .)
    CPPCOMMENT      reduce using rule 66 (estatuto -> CPPCOMMENT .)
    ID              reduce using rule 66 (estatuto -> CPPCOMMENT .)
    IF              reduce using rule 66 (estatuto -> CPPCOMMENT .)
    READ            reduce using rule 66 (estatuto -> CPPCOMMENT .)
    VAR             reduce using rule 66 (estatuto -> CPPCOMMENT .)
    WHILE           reduce using rule 66 (estatuto -> CPPCOMMENT .)
    PRINT           reduce using rule 66 (estatuto -> CPPCOMMENT .)
    RBRACKET        reduce using rule 66 (estatuto -> CPPCOMMENT .)
    RETURN          reduce using rule 66 (estatuto -> CPPCOMMENT .)
    ELSE            reduce using rule 66 (estatuto -> CPPCOMMENT .)


state 51

    (4) condicion -> IF . LPAREN expresion RPAREN gotoF estatutobloque masbloque

    LPAREN          shift and go to state 72


state 52

    (75) masestatuto -> estatuto . masestatuto
    (75) masestatuto -> . estatuto masestatuto
    (76) masestatuto -> . empty
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (110) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    masestatuto                    shift and go to state 73
    estatuto                       shift and go to state 52
    idfunc                         shift and go to state 37
    print                          shift and go to state 53
    vars                           shift and go to state 54
    asignacion                     shift and go to state 55
    empty                          shift and go to state 49
    escritura                      shift and go to state 56

state 53

    (14) escritura -> print . LPAREN listaprint RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 54

    (63) estatuto -> vars .

    COMMENT         reduce using rule 63 (estatuto -> vars .)
    CPPCOMMENT      reduce using rule 63 (estatuto -> vars .)
    ID              reduce using rule 63 (estatuto -> vars .)
    IF              reduce using rule 63 (estatuto -> vars .)
    READ            reduce using rule 63 (estatuto -> vars .)
    VAR             reduce using rule 63 (estatuto -> vars .)
    WHILE           reduce using rule 63 (estatuto -> vars .)
    PRINT           reduce using rule 63 (estatuto -> vars .)
    RBRACKET        reduce using rule 63 (estatuto -> vars .)
    RETURN          reduce using rule 63 (estatuto -> vars .)
    ELSE            reduce using rule 63 (estatuto -> vars .)


state 55

    (58) estatuto -> asignacion .

    COMMENT         reduce using rule 58 (estatuto -> asignacion .)
    CPPCOMMENT      reduce using rule 58 (estatuto -> asignacion .)
    ID              reduce using rule 58 (estatuto -> asignacion .)
    IF              reduce using rule 58 (estatuto -> asignacion .)
    READ            reduce using rule 58 (estatuto -> asignacion .)
    VAR             reduce using rule 58 (estatuto -> asignacion .)
    WHILE           reduce using rule 58 (estatuto -> asignacion .)
    PRINT           reduce using rule 58 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 58 (estatuto -> asignacion .)
    RETURN          reduce using rule 58 (estatuto -> asignacion .)
    ELSE            reduce using rule 58 (estatuto -> asignacion .)


state 56

    (61) estatuto -> escritura .

    COMMENT         reduce using rule 61 (estatuto -> escritura .)
    CPPCOMMENT      reduce using rule 61 (estatuto -> escritura .)
    ID              reduce using rule 61 (estatuto -> escritura .)
    IF              reduce using rule 61 (estatuto -> escritura .)
    READ            reduce using rule 61 (estatuto -> escritura .)
    VAR             reduce using rule 61 (estatuto -> escritura .)
    WHILE           reduce using rule 61 (estatuto -> escritura .)
    PRINT           reduce using rule 61 (estatuto -> escritura .)
    RBRACKET        reduce using rule 61 (estatuto -> escritura .)
    RETURN          reduce using rule 61 (estatuto -> escritura .)
    ELSE            reduce using rule 61 (estatuto -> escritura .)


state 57

    (80) masid -> COMMA listaid .

    SEMICOLON       reduce using rule 80 (masid -> COMMA listaid .)


state 58

    (77) vars -> VAR tipo listaid SEMICOLON vars .

    FUNCTION        reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    MAIN            reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    COMMENT         reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    CPPCOMMENT      reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    ID              reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    IF              reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    READ            reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    VAR             reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    WHILE           reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    PRINT           reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    RBRACKET        reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    RETURN          reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)
    ELSE            reduce using rule 77 (vars -> VAR tipo listaid SEMICOLON vars .)


state 59

    (92) masargs -> empty .

    RPAREN          reduce using rule 92 (masargs -> empty .)


state 60

    (82) funcs -> FUNCTION funcaux LPAREN args masargs . RPAREN bloquefunc funcs

    RPAREN          shift and go to state 75


state 61

    (91) masargs -> COMMA . args masargs
    (89) args -> . tipo ID
    (90) args -> . empty
    (93) tipo -> . INT
    (94) tipo -> . FLOAT
    (95) tipo -> . CHAR
    (96) tipo -> . BOOL
    (97) tipo -> . STRING
    (98) tipo -> . VOID
    (110) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 15
    VOID            shift and go to state 13
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)

    args                           shift and go to state 76
    empty                          shift and go to state 35
    tipo                           shift and go to state 34

state 62

    (89) args -> tipo ID .

    COMMA           reduce using rule 89 (args -> tipo ID .)
    RPAREN          reduce using rule 89 (args -> tipo ID .)


state 63

    (85) bloquefunc -> LBRACKET . masestatuto retorno RBRACKET
    (75) masestatuto -> . estatuto masestatuto
    (76) masestatuto -> . empty
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (110) empty -> .
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    RETURN          reduce using rule 110 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    vars                           shift and go to state 54
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    masestatuto                    shift and go to state 77
    idfunc                         shift and go to state 37
    escritura                      shift and go to state 56
    print                          shift and go to state 53
    asignacion                     shift and go to state 55
    empty                          shift and go to state 49
    estatuto                       shift and go to state 52

state 64

    (83) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc . funcs
    (82) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (83) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (84) funcs -> . empty
    (110) empty -> .

    FUNCTION        shift and go to state 9
    MAIN            reduce using rule 110 (empty -> .)

    funcs                          shift and go to state 78
    empty                          shift and go to state 11

state 65

    (68) llamafunc -> idfunc LPAREN . funcargs RPAREN
    (70) funcargs -> . expresion listafuncargs checarparams
    (71) funcargs -> . empty
    (39) expresion -> . expcomp masexpresion
    (110) empty -> .
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    RPAREN          reduce using rule 110 (empty -> .)
    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    funcargs                       shift and go to state 86
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 97
    cteint                         shift and go to state 98
    empty                          shift and go to state 100
    exp                            shift and go to state 102

state 66

    (12) ciclo -> while LPAREN . expresion RPAREN gotoF estatutobloque goto
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 103
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 67

    (64) estatuto -> llamafunc SEMICOLON .

    COMMENT         reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    CPPCOMMENT      reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    READ            reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    VAR             reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    RBRACKET        reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    RETURN          reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)
    ELSE            reduce using rule 64 (estatuto -> llamafunc SEMICOLON .)


state 68

    (21) asignacion -> ID EQUALS . expresion SEMICOLON
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 104
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 69

    (22) asignacion -> ID LSQBRACKET . RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    RSQBRACKET      shift and go to state 105


state 70

    (67) lectura -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 106


state 71

    (8) bloque -> LBRACKET masestatuto RBRACKET .

    COMMENT         reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    CPPCOMMENT      reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    ID              reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    IF              reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    READ            reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    VAR             reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    WHILE           reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    PRINT           reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    RBRACKET        reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    RETURN          reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    ELSE            reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)
    $end            reduce using rule 8 (bloque -> LBRACKET masestatuto RBRACKET .)


state 72

    (4) condicion -> IF LPAREN . expresion RPAREN gotoF estatutobloque masbloque
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 107
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 73

    (75) masestatuto -> estatuto masestatuto .

    RBRACKET        reduce using rule 75 (masestatuto -> estatuto masestatuto .)
    RETURN          reduce using rule 75 (masestatuto -> estatuto masestatuto .)


state 74

    (14) escritura -> print LPAREN . listaprint RPAREN SEMICOLON
    (16) listaprint -> . expresion masprint
    (17) listaprint -> . ctestring masprint
    (39) expresion -> . expcomp masexpresion
    (107) ctestring -> . CTESTRING
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    CTESTRING       shift and go to state 88
    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    listaprint                     shift and go to state 109
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 108
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 110
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 75

    (82) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN . bloquefunc funcs
    (85) bloquefunc -> . LBRACKET masestatuto retorno RBRACKET

    LBRACKET        shift and go to state 63

    bloquefunc                     shift and go to state 111

state 76

    (91) masargs -> COMMA args . masargs
    (91) masargs -> . COMMA args masargs
    (92) masargs -> . empty
    (110) empty -> .

    COMMA           shift and go to state 61
    RPAREN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 59
    masargs                        shift and go to state 112

state 77

    (85) bloquefunc -> LBRACKET masestatuto . retorno RBRACKET
    (86) retorno -> . RETURN expresion SEMICOLON
    (87) retorno -> . RETURN SEMICOLON

    RETURN          shift and go to state 114

    retorno                        shift and go to state 113

state 78

    (83) funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .

    MAIN            reduce using rule 83 (funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs .)


state 79

    (101) varcte -> ctechar .

    TIMES           reduce using rule 101 (varcte -> ctechar .)
    DIVIDE          reduce using rule 101 (varcte -> ctechar .)
    PLUS            reduce using rule 101 (varcte -> ctechar .)
    MINUS           reduce using rule 101 (varcte -> ctechar .)
    MORETHAN        reduce using rule 101 (varcte -> ctechar .)
    LESSTHAN        reduce using rule 101 (varcte -> ctechar .)
    NOTEQUAL        reduce using rule 101 (varcte -> ctechar .)
    ISEQUALTO       reduce using rule 101 (varcte -> ctechar .)
    MORETHANEQUAL   reduce using rule 101 (varcte -> ctechar .)
    LESSTHANEQUAL   reduce using rule 101 (varcte -> ctechar .)
    AND             reduce using rule 101 (varcte -> ctechar .)
    OR              reduce using rule 101 (varcte -> ctechar .)
    RPAREN          reduce using rule 101 (varcte -> ctechar .)
    COMMA           reduce using rule 101 (varcte -> ctechar .)
    RSQBRACKET      reduce using rule 101 (varcte -> ctechar .)
    SEMICOLON       reduce using rule 101 (varcte -> ctechar .)


state 80

    (106) ctechar -> CTECHAR .

    TIMES           reduce using rule 106 (ctechar -> CTECHAR .)
    DIVIDE          reduce using rule 106 (ctechar -> CTECHAR .)
    PLUS            reduce using rule 106 (ctechar -> CTECHAR .)
    MINUS           reduce using rule 106 (ctechar -> CTECHAR .)
    MORETHAN        reduce using rule 106 (ctechar -> CTECHAR .)
    LESSTHAN        reduce using rule 106 (ctechar -> CTECHAR .)
    NOTEQUAL        reduce using rule 106 (ctechar -> CTECHAR .)
    ISEQUALTO       reduce using rule 106 (ctechar -> CTECHAR .)
    MORETHANEQUAL   reduce using rule 106 (ctechar -> CTECHAR .)
    LESSTHANEQUAL   reduce using rule 106 (ctechar -> CTECHAR .)
    AND             reduce using rule 106 (ctechar -> CTECHAR .)
    OR              reduce using rule 106 (ctechar -> CTECHAR .)
    COMMA           reduce using rule 106 (ctechar -> CTECHAR .)
    RPAREN          reduce using rule 106 (ctechar -> CTECHAR .)
    SEMICOLON       reduce using rule 106 (ctechar -> CTECHAR .)
    RSQBRACKET      reduce using rule 106 (ctechar -> CTECHAR .)


state 81

    (25) factor -> varid .

    TIMES           reduce using rule 25 (factor -> varid .)
    DIVIDE          reduce using rule 25 (factor -> varid .)
    PLUS            reduce using rule 25 (factor -> varid .)
    MINUS           reduce using rule 25 (factor -> varid .)
    MORETHAN        reduce using rule 25 (factor -> varid .)
    LESSTHAN        reduce using rule 25 (factor -> varid .)
    NOTEQUAL        reduce using rule 25 (factor -> varid .)
    ISEQUALTO       reduce using rule 25 (factor -> varid .)
    MORETHANEQUAL   reduce using rule 25 (factor -> varid .)
    LESSTHANEQUAL   reduce using rule 25 (factor -> varid .)
    AND             reduce using rule 25 (factor -> varid .)
    OR              reduce using rule 25 (factor -> varid .)
    COMMA           reduce using rule 25 (factor -> varid .)
    RSQBRACKET      reduce using rule 25 (factor -> varid .)
    RPAREN          reduce using rule 25 (factor -> varid .)
    SEMICOLON       reduce using rule 25 (factor -> varid .)


state 82

    (104) cteint -> CTEINT .

    TIMES           reduce using rule 104 (cteint -> CTEINT .)
    DIVIDE          reduce using rule 104 (cteint -> CTEINT .)
    PLUS            reduce using rule 104 (cteint -> CTEINT .)
    MINUS           reduce using rule 104 (cteint -> CTEINT .)
    MORETHAN        reduce using rule 104 (cteint -> CTEINT .)
    LESSTHAN        reduce using rule 104 (cteint -> CTEINT .)
    NOTEQUAL        reduce using rule 104 (cteint -> CTEINT .)
    ISEQUALTO       reduce using rule 104 (cteint -> CTEINT .)
    MORETHANEQUAL   reduce using rule 104 (cteint -> CTEINT .)
    LESSTHANEQUAL   reduce using rule 104 (cteint -> CTEINT .)
    AND             reduce using rule 104 (cteint -> CTEINT .)
    OR              reduce using rule 104 (cteint -> CTEINT .)
    COMMA           reduce using rule 104 (cteint -> CTEINT .)
    RPAREN          reduce using rule 104 (cteint -> CTEINT .)
    SEMICOLON       reduce using rule 104 (cteint -> CTEINT .)
    RSQBRACKET      reduce using rule 104 (cteint -> CTEINT .)


state 83

    (103) varcte -> ctebool .

    TIMES           reduce using rule 103 (varcte -> ctebool .)
    DIVIDE          reduce using rule 103 (varcte -> ctebool .)
    PLUS            reduce using rule 103 (varcte -> ctebool .)
    MINUS           reduce using rule 103 (varcte -> ctebool .)
    MORETHAN        reduce using rule 103 (varcte -> ctebool .)
    LESSTHAN        reduce using rule 103 (varcte -> ctebool .)
    NOTEQUAL        reduce using rule 103 (varcte -> ctebool .)
    ISEQUALTO       reduce using rule 103 (varcte -> ctebool .)
    MORETHANEQUAL   reduce using rule 103 (varcte -> ctebool .)
    LESSTHANEQUAL   reduce using rule 103 (varcte -> ctebool .)
    AND             reduce using rule 103 (varcte -> ctebool .)
    OR              reduce using rule 103 (varcte -> ctebool .)
    RPAREN          reduce using rule 103 (varcte -> ctebool .)
    COMMA           reduce using rule 103 (varcte -> ctebool .)
    RSQBRACKET      reduce using rule 103 (varcte -> ctebool .)
    SEMICOLON       reduce using rule 103 (varcte -> ctebool .)


state 84

    (26) factor -> llamafunc .

    TIMES           reduce using rule 26 (factor -> llamafunc .)
    DIVIDE          reduce using rule 26 (factor -> llamafunc .)
    PLUS            reduce using rule 26 (factor -> llamafunc .)
    MINUS           reduce using rule 26 (factor -> llamafunc .)
    MORETHAN        reduce using rule 26 (factor -> llamafunc .)
    LESSTHAN        reduce using rule 26 (factor -> llamafunc .)
    NOTEQUAL        reduce using rule 26 (factor -> llamafunc .)
    ISEQUALTO       reduce using rule 26 (factor -> llamafunc .)
    MORETHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    LESSTHANEQUAL   reduce using rule 26 (factor -> llamafunc .)
    AND             reduce using rule 26 (factor -> llamafunc .)
    OR              reduce using rule 26 (factor -> llamafunc .)
    COMMA           reduce using rule 26 (factor -> llamafunc .)
    RSQBRACKET      reduce using rule 26 (factor -> llamafunc .)
    RPAREN          reduce using rule 26 (factor -> llamafunc .)
    SEMICOLON       reduce using rule 26 (factor -> llamafunc .)


state 85

    (23) factor -> leftparen . expresion rightparen
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 115
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 86

    (68) llamafunc -> idfunc LPAREN funcargs . RPAREN

    RPAREN          shift and go to state 116


state 87

    (44) termino -> factor . masterminos
    (47) masterminos -> . addQTD termino
    (48) masterminos -> . empty
    (45) addQTD -> . TIMES
    (46) addQTD -> . DIVIDE
    (110) empty -> .

    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 120
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    MORETHAN        reduce using rule 110 (empty -> .)
    LESSTHAN        reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    ISEQUALTO       reduce using rule 110 (empty -> .)
    MORETHANEQUAL   reduce using rule 110 (empty -> .)
    LESSTHANEQUAL   reduce using rule 110 (empty -> .)
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RSQBRACKET      reduce using rule 110 (empty -> .)

    masterminos                    shift and go to state 117
    addQTD                         shift and go to state 119
    empty                          shift and go to state 121

state 88

    (107) ctestring -> CTESTRING .

    TIMES           reduce using rule 107 (ctestring -> CTESTRING .)
    DIVIDE          reduce using rule 107 (ctestring -> CTESTRING .)
    PLUS            reduce using rule 107 (ctestring -> CTESTRING .)
    MINUS           reduce using rule 107 (ctestring -> CTESTRING .)
    MORETHAN        reduce using rule 107 (ctestring -> CTESTRING .)
    LESSTHAN        reduce using rule 107 (ctestring -> CTESTRING .)
    NOTEQUAL        reduce using rule 107 (ctestring -> CTESTRING .)
    ISEQUALTO       reduce using rule 107 (ctestring -> CTESTRING .)
    MORETHANEQUAL   reduce using rule 107 (ctestring -> CTESTRING .)
    LESSTHANEQUAL   reduce using rule 107 (ctestring -> CTESTRING .)
    AND             reduce using rule 107 (ctestring -> CTESTRING .)
    OR              reduce using rule 107 (ctestring -> CTESTRING .)
    COMMA           reduce using rule 107 (ctestring -> CTESTRING .)
    RSQBRACKET      reduce using rule 107 (ctestring -> CTESTRING .)
    RPAREN          reduce using rule 107 (ctestring -> CTESTRING .)
    SEMICOLON       reduce using rule 107 (ctestring -> CTESTRING .)


state 89

    (32) exp -> termino . masexp
    (33) masexp -> . addQPPM exp
    (34) masexp -> . empty
    (35) addQPPM -> . PLUS
    (36) addQPPM -> . MINUS
    (110) empty -> .

    PLUS            shift and go to state 123
    MINUS           shift and go to state 124
    MORETHAN        reduce using rule 110 (empty -> .)
    LESSTHAN        reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    ISEQUALTO       reduce using rule 110 (empty -> .)
    MORETHANEQUAL   reduce using rule 110 (empty -> .)
    LESSTHANEQUAL   reduce using rule 110 (empty -> .)
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RSQBRACKET      reduce using rule 110 (empty -> .)

    masexp                         shift and go to state 122
    empty                          shift and go to state 125
    addQPPM                        shift and go to state 126

state 90

    (27) leftparen -> LPAREN .

    LPAREN          reduce using rule 27 (leftparen -> LPAREN .)
    ID              reduce using rule 27 (leftparen -> LPAREN .)
    CTEINT          reduce using rule 27 (leftparen -> LPAREN .)
    CTEFLOAT        reduce using rule 27 (leftparen -> LPAREN .)
    CTECHAR         reduce using rule 27 (leftparen -> LPAREN .)
    CTESTRING       reduce using rule 27 (leftparen -> LPAREN .)
    TRUE            reduce using rule 27 (leftparen -> LPAREN .)
    FALSE           reduce using rule 27 (leftparen -> LPAREN .)


state 91

    (100) varcte -> ctefloat .

    TIMES           reduce using rule 100 (varcte -> ctefloat .)
    DIVIDE          reduce using rule 100 (varcte -> ctefloat .)
    PLUS            reduce using rule 100 (varcte -> ctefloat .)
    MINUS           reduce using rule 100 (varcte -> ctefloat .)
    MORETHAN        reduce using rule 100 (varcte -> ctefloat .)
    LESSTHAN        reduce using rule 100 (varcte -> ctefloat .)
    NOTEQUAL        reduce using rule 100 (varcte -> ctefloat .)
    ISEQUALTO       reduce using rule 100 (varcte -> ctefloat .)
    MORETHANEQUAL   reduce using rule 100 (varcte -> ctefloat .)
    LESSTHANEQUAL   reduce using rule 100 (varcte -> ctefloat .)
    AND             reduce using rule 100 (varcte -> ctefloat .)
    OR              reduce using rule 100 (varcte -> ctefloat .)
    RPAREN          reduce using rule 100 (varcte -> ctefloat .)
    COMMA           reduce using rule 100 (varcte -> ctefloat .)
    RSQBRACKET      reduce using rule 100 (varcte -> ctefloat .)
    SEMICOLON       reduce using rule 100 (varcte -> ctefloat .)


state 92

    (102) varcte -> ctestring .

    TIMES           reduce using rule 102 (varcte -> ctestring .)
    DIVIDE          reduce using rule 102 (varcte -> ctestring .)
    PLUS            reduce using rule 102 (varcte -> ctestring .)
    MINUS           reduce using rule 102 (varcte -> ctestring .)
    MORETHAN        reduce using rule 102 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 102 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 102 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 102 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 102 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 102 (varcte -> ctestring .)
    AND             reduce using rule 102 (varcte -> ctestring .)
    OR              reduce using rule 102 (varcte -> ctestring .)
    RPAREN          reduce using rule 102 (varcte -> ctestring .)
    COMMA           reduce using rule 102 (varcte -> ctestring .)
    RSQBRACKET      reduce using rule 102 (varcte -> ctestring .)
    SEMICOLON       reduce using rule 102 (varcte -> ctestring .)


state 93

    (29) varid -> ID . arr
    (69) idfunc -> ID .
    (30) arr -> . LSQBRACKET RSQBRACKET
    (31) arr -> . empty
    (110) empty -> .

    LPAREN          reduce using rule 69 (idfunc -> ID .)
    LSQBRACKET      shift and go to state 129
    TIMES           reduce using rule 110 (empty -> .)
    DIVIDE          reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    MORETHAN        reduce using rule 110 (empty -> .)
    LESSTHAN        reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    ISEQUALTO       reduce using rule 110 (empty -> .)
    MORETHANEQUAL   reduce using rule 110 (empty -> .)
    LESSTHANEQUAL   reduce using rule 110 (empty -> .)
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RSQBRACKET      reduce using rule 110 (empty -> .)

    arr                            shift and go to state 127
    empty                          shift and go to state 128

state 94

    (24) factor -> varcte .

    TIMES           reduce using rule 24 (factor -> varcte .)
    DIVIDE          reduce using rule 24 (factor -> varcte .)
    PLUS            reduce using rule 24 (factor -> varcte .)
    MINUS           reduce using rule 24 (factor -> varcte .)
    MORETHAN        reduce using rule 24 (factor -> varcte .)
    LESSTHAN        reduce using rule 24 (factor -> varcte .)
    NOTEQUAL        reduce using rule 24 (factor -> varcte .)
    ISEQUALTO       reduce using rule 24 (factor -> varcte .)
    MORETHANEQUAL   reduce using rule 24 (factor -> varcte .)
    LESSTHANEQUAL   reduce using rule 24 (factor -> varcte .)
    AND             reduce using rule 24 (factor -> varcte .)
    OR              reduce using rule 24 (factor -> varcte .)
    COMMA           reduce using rule 24 (factor -> varcte .)
    RSQBRACKET      reduce using rule 24 (factor -> varcte .)
    RPAREN          reduce using rule 24 (factor -> varcte .)
    SEMICOLON       reduce using rule 24 (factor -> varcte .)


state 95

    (108) ctebool -> TRUE .

    TIMES           reduce using rule 108 (ctebool -> TRUE .)
    DIVIDE          reduce using rule 108 (ctebool -> TRUE .)
    PLUS            reduce using rule 108 (ctebool -> TRUE .)
    MINUS           reduce using rule 108 (ctebool -> TRUE .)
    MORETHAN        reduce using rule 108 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 108 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 108 (ctebool -> TRUE .)
    ISEQUALTO       reduce using rule 108 (ctebool -> TRUE .)
    MORETHANEQUAL   reduce using rule 108 (ctebool -> TRUE .)
    LESSTHANEQUAL   reduce using rule 108 (ctebool -> TRUE .)
    AND             reduce using rule 108 (ctebool -> TRUE .)
    OR              reduce using rule 108 (ctebool -> TRUE .)
    COMMA           reduce using rule 108 (ctebool -> TRUE .)
    RSQBRACKET      reduce using rule 108 (ctebool -> TRUE .)
    RPAREN          reduce using rule 108 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 108 (ctebool -> TRUE .)


state 96

    (39) expresion -> expcomp . masexpresion
    (42) masexpresion -> . addQPAO expresion
    (43) masexpresion -> . empty
    (40) addQPAO -> . AND
    (41) addQPAO -> . OR
    (110) empty -> .

    AND             shift and go to state 132
    OR              shift and go to state 134
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RSQBRACKET      reduce using rule 110 (empty -> .)

    masexpresion                   shift and go to state 130
    addQPAO                        shift and go to state 131
    empty                          shift and go to state 133

state 97

    (70) funcargs -> expresion . listafuncargs checarparams
    (72) listafuncargs -> . COMMA expresion listafuncargs
    (73) listafuncargs -> . empty
    (110) empty -> .

    COMMA           shift and go to state 136
    RPAREN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 135
    listafuncargs                  shift and go to state 137

state 98

    (99) varcte -> cteint .

    TIMES           reduce using rule 99 (varcte -> cteint .)
    DIVIDE          reduce using rule 99 (varcte -> cteint .)
    PLUS            reduce using rule 99 (varcte -> cteint .)
    MINUS           reduce using rule 99 (varcte -> cteint .)
    MORETHAN        reduce using rule 99 (varcte -> cteint .)
    LESSTHAN        reduce using rule 99 (varcte -> cteint .)
    NOTEQUAL        reduce using rule 99 (varcte -> cteint .)
    ISEQUALTO       reduce using rule 99 (varcte -> cteint .)
    MORETHANEQUAL   reduce using rule 99 (varcte -> cteint .)
    LESSTHANEQUAL   reduce using rule 99 (varcte -> cteint .)
    AND             reduce using rule 99 (varcte -> cteint .)
    OR              reduce using rule 99 (varcte -> cteint .)
    RPAREN          reduce using rule 99 (varcte -> cteint .)
    COMMA           reduce using rule 99 (varcte -> cteint .)
    RSQBRACKET      reduce using rule 99 (varcte -> cteint .)
    SEMICOLON       reduce using rule 99 (varcte -> cteint .)


state 99

    (109) ctebool -> FALSE .

    TIMES           reduce using rule 109 (ctebool -> FALSE .)
    DIVIDE          reduce using rule 109 (ctebool -> FALSE .)
    PLUS            reduce using rule 109 (ctebool -> FALSE .)
    MINUS           reduce using rule 109 (ctebool -> FALSE .)
    MORETHAN        reduce using rule 109 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 109 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 109 (ctebool -> FALSE .)
    ISEQUALTO       reduce using rule 109 (ctebool -> FALSE .)
    MORETHANEQUAL   reduce using rule 109 (ctebool -> FALSE .)
    LESSTHANEQUAL   reduce using rule 109 (ctebool -> FALSE .)
    AND             reduce using rule 109 (ctebool -> FALSE .)
    OR              reduce using rule 109 (ctebool -> FALSE .)
    COMMA           reduce using rule 109 (ctebool -> FALSE .)
    RSQBRACKET      reduce using rule 109 (ctebool -> FALSE .)
    RPAREN          reduce using rule 109 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 109 (ctebool -> FALSE .)


state 100

    (71) funcargs -> empty .

    RPAREN          reduce using rule 71 (funcargs -> empty .)


state 101

    (105) ctefloat -> CTEFLOAT .

    TIMES           reduce using rule 105 (ctefloat -> CTEFLOAT .)
    DIVIDE          reduce using rule 105 (ctefloat -> CTEFLOAT .)
    PLUS            reduce using rule 105 (ctefloat -> CTEFLOAT .)
    MINUS           reduce using rule 105 (ctefloat -> CTEFLOAT .)
    MORETHAN        reduce using rule 105 (ctefloat -> CTEFLOAT .)
    LESSTHAN        reduce using rule 105 (ctefloat -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 105 (ctefloat -> CTEFLOAT .)
    ISEQUALTO       reduce using rule 105 (ctefloat -> CTEFLOAT .)
    MORETHANEQUAL   reduce using rule 105 (ctefloat -> CTEFLOAT .)
    LESSTHANEQUAL   reduce using rule 105 (ctefloat -> CTEFLOAT .)
    AND             reduce using rule 105 (ctefloat -> CTEFLOAT .)
    OR              reduce using rule 105 (ctefloat -> CTEFLOAT .)
    RPAREN          reduce using rule 105 (ctefloat -> CTEFLOAT .)
    COMMA           reduce using rule 105 (ctefloat -> CTEFLOAT .)
    SEMICOLON       reduce using rule 105 (ctefloat -> CTEFLOAT .)
    RSQBRACKET      reduce using rule 105 (ctefloat -> CTEFLOAT .)


state 102

    (49) expcomp -> exp . expcompcontinuo
    (56) expcompcontinuo -> . addQPComp expcomp
    (57) expcompcontinuo -> . empty
    (50) addQPComp -> . MORETHAN
    (51) addQPComp -> . LESSTHAN
    (52) addQPComp -> . NOTEQUAL
    (53) addQPComp -> . ISEQUALTO
    (54) addQPComp -> . MORETHANEQUAL
    (55) addQPComp -> . LESSTHANEQUAL
    (110) empty -> .

    MORETHAN        shift and go to state 141
    LESSTHAN        shift and go to state 142
    NOTEQUAL        shift and go to state 139
    ISEQUALTO       shift and go to state 144
    MORETHANEQUAL   shift and go to state 140
    LESSTHANEQUAL   shift and go to state 145
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RSQBRACKET      reduce using rule 110 (empty -> .)

    expcompcontinuo                shift and go to state 138
    empty                          shift and go to state 146
    addQPComp                      shift and go to state 143

state 103

    (12) ciclo -> while LPAREN expresion . RPAREN gotoF estatutobloque goto

    RPAREN          shift and go to state 147


state 104

    (21) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 148


state 105

    (22) asignacion -> ID LSQBRACKET RSQBRACKET . EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    EQUALS          shift and go to state 149


state 106

    (67) lectura -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 107

    (4) condicion -> IF LPAREN expresion . RPAREN gotoF estatutobloque masbloque

    RPAREN          shift and go to state 151


state 108

    (17) listaprint -> ctestring . masprint
    (102) varcte -> ctestring .
    (18) masprint -> . addQPP listaprint
    (19) masprint -> . empty
    (20) addQPP -> . COMMA
    (110) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (varcte -> ctestring .)
    TIMES           reduce using rule 102 (varcte -> ctestring .)
    DIVIDE          reduce using rule 102 (varcte -> ctestring .)
    PLUS            reduce using rule 102 (varcte -> ctestring .)
    MINUS           reduce using rule 102 (varcte -> ctestring .)
    MORETHAN        reduce using rule 102 (varcte -> ctestring .)
    LESSTHAN        reduce using rule 102 (varcte -> ctestring .)
    NOTEQUAL        reduce using rule 102 (varcte -> ctestring .)
    ISEQUALTO       reduce using rule 102 (varcte -> ctestring .)
    MORETHANEQUAL   reduce using rule 102 (varcte -> ctestring .)
    LESSTHANEQUAL   reduce using rule 102 (varcte -> ctestring .)
    AND             reduce using rule 102 (varcte -> ctestring .)
    OR              reduce using rule 102 (varcte -> ctestring .)
    RPAREN          reduce using rule 102 (varcte -> ctestring .)
    COMMA           shift and go to state 154

  ! COMMA           [ reduce using rule 102 (varcte -> ctestring .) ]
  ! RPAREN          [ reduce using rule 110 (empty -> .) ]

    addQPP                         shift and go to state 152
    empty                          shift and go to state 153
    masprint                       shift and go to state 155

state 109

    (14) escritura -> print LPAREN listaprint . RPAREN SEMICOLON

    RPAREN          shift and go to state 156


state 110

    (16) listaprint -> expresion . masprint
    (18) masprint -> . addQPP listaprint
    (19) masprint -> . empty
    (20) addQPP -> . COMMA
    (110) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 110 (empty -> .)

    addQPP                         shift and go to state 152
    empty                          shift and go to state 153
    masprint                       shift and go to state 157

state 111

    (82) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc . funcs
    (82) funcs -> . FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs
    (83) funcs -> . FUNCTION funcaux LPAREN RPAREN bloquefunc funcs
    (84) funcs -> . empty
    (110) empty -> .

    FUNCTION        shift and go to state 9
    MAIN            reduce using rule 110 (empty -> .)

    funcs                          shift and go to state 158
    empty                          shift and go to state 11

state 112

    (91) masargs -> COMMA args masargs .

    RPAREN          reduce using rule 91 (masargs -> COMMA args masargs .)


state 113

    (85) bloquefunc -> LBRACKET masestatuto retorno . RBRACKET

    RBRACKET        shift and go to state 159


state 114

    (86) retorno -> RETURN . expresion SEMICOLON
    (87) retorno -> RETURN . SEMICOLON
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    SEMICOLON       shift and go to state 160
    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 161
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 115

    (23) factor -> leftparen expresion . rightparen
    (28) rightparen -> . RPAREN

    RPAREN          shift and go to state 162

    rightparen                     shift and go to state 163

state 116

    (68) llamafunc -> idfunc LPAREN funcargs RPAREN .

    TIMES           reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    DIVIDE          reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    PLUS            reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MINUS           reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHAN        reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHAN        reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    NOTEQUAL        reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    ISEQUALTO       reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    MORETHANEQUAL   reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    LESSTHANEQUAL   reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    AND             reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    OR              reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RPAREN          reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    SEMICOLON       reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    COMMA           reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)
    RSQBRACKET      reduce using rule 68 (llamafunc -> idfunc LPAREN funcargs RPAREN .)


state 117

    (44) termino -> factor masterminos .

    PLUS            reduce using rule 44 (termino -> factor masterminos .)
    MINUS           reduce using rule 44 (termino -> factor masterminos .)
    MORETHAN        reduce using rule 44 (termino -> factor masterminos .)
    LESSTHAN        reduce using rule 44 (termino -> factor masterminos .)
    NOTEQUAL        reduce using rule 44 (termino -> factor masterminos .)
    ISEQUALTO       reduce using rule 44 (termino -> factor masterminos .)
    MORETHANEQUAL   reduce using rule 44 (termino -> factor masterminos .)
    LESSTHANEQUAL   reduce using rule 44 (termino -> factor masterminos .)
    AND             reduce using rule 44 (termino -> factor masterminos .)
    OR              reduce using rule 44 (termino -> factor masterminos .)
    COMMA           reduce using rule 44 (termino -> factor masterminos .)
    RPAREN          reduce using rule 44 (termino -> factor masterminos .)
    SEMICOLON       reduce using rule 44 (termino -> factor masterminos .)
    RSQBRACKET      reduce using rule 44 (termino -> factor masterminos .)


state 118

    (45) addQTD -> TIMES .

    LPAREN          reduce using rule 45 (addQTD -> TIMES .)
    ID              reduce using rule 45 (addQTD -> TIMES .)
    CTEINT          reduce using rule 45 (addQTD -> TIMES .)
    CTEFLOAT        reduce using rule 45 (addQTD -> TIMES .)
    CTECHAR         reduce using rule 45 (addQTD -> TIMES .)
    CTESTRING       reduce using rule 45 (addQTD -> TIMES .)
    TRUE            reduce using rule 45 (addQTD -> TIMES .)
    FALSE           reduce using rule 45 (addQTD -> TIMES .)


state 119

    (47) masterminos -> addQTD . termino
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    varid                          shift and go to state 81
    termino                        shift and go to state 164
    idfunc                         shift and go to state 37
    ctechar                        shift and go to state 79
    varcte                         shift and go to state 94
    llamafunc                      shift and go to state 84
    cteint                         shift and go to state 98
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87

state 120

    (46) addQTD -> DIVIDE .

    LPAREN          reduce using rule 46 (addQTD -> DIVIDE .)
    ID              reduce using rule 46 (addQTD -> DIVIDE .)
    CTEINT          reduce using rule 46 (addQTD -> DIVIDE .)
    CTEFLOAT        reduce using rule 46 (addQTD -> DIVIDE .)
    CTECHAR         reduce using rule 46 (addQTD -> DIVIDE .)
    CTESTRING       reduce using rule 46 (addQTD -> DIVIDE .)
    TRUE            reduce using rule 46 (addQTD -> DIVIDE .)
    FALSE           reduce using rule 46 (addQTD -> DIVIDE .)


state 121

    (48) masterminos -> empty .

    PLUS            reduce using rule 48 (masterminos -> empty .)
    MINUS           reduce using rule 48 (masterminos -> empty .)
    MORETHAN        reduce using rule 48 (masterminos -> empty .)
    LESSTHAN        reduce using rule 48 (masterminos -> empty .)
    NOTEQUAL        reduce using rule 48 (masterminos -> empty .)
    ISEQUALTO       reduce using rule 48 (masterminos -> empty .)
    MORETHANEQUAL   reduce using rule 48 (masterminos -> empty .)
    LESSTHANEQUAL   reduce using rule 48 (masterminos -> empty .)
    AND             reduce using rule 48 (masterminos -> empty .)
    OR              reduce using rule 48 (masterminos -> empty .)
    COMMA           reduce using rule 48 (masterminos -> empty .)
    RPAREN          reduce using rule 48 (masterminos -> empty .)
    SEMICOLON       reduce using rule 48 (masterminos -> empty .)
    RSQBRACKET      reduce using rule 48 (masterminos -> empty .)


state 122

    (32) exp -> termino masexp .

    MORETHAN        reduce using rule 32 (exp -> termino masexp .)
    LESSTHAN        reduce using rule 32 (exp -> termino masexp .)
    NOTEQUAL        reduce using rule 32 (exp -> termino masexp .)
    ISEQUALTO       reduce using rule 32 (exp -> termino masexp .)
    MORETHANEQUAL   reduce using rule 32 (exp -> termino masexp .)
    LESSTHANEQUAL   reduce using rule 32 (exp -> termino masexp .)
    AND             reduce using rule 32 (exp -> termino masexp .)
    OR              reduce using rule 32 (exp -> termino masexp .)
    RPAREN          reduce using rule 32 (exp -> termino masexp .)
    COMMA           reduce using rule 32 (exp -> termino masexp .)
    SEMICOLON       reduce using rule 32 (exp -> termino masexp .)
    RSQBRACKET      reduce using rule 32 (exp -> termino masexp .)


state 123

    (35) addQPPM -> PLUS .

    LPAREN          reduce using rule 35 (addQPPM -> PLUS .)
    ID              reduce using rule 35 (addQPPM -> PLUS .)
    CTEINT          reduce using rule 35 (addQPPM -> PLUS .)
    CTEFLOAT        reduce using rule 35 (addQPPM -> PLUS .)
    CTECHAR         reduce using rule 35 (addQPPM -> PLUS .)
    CTESTRING       reduce using rule 35 (addQPPM -> PLUS .)
    TRUE            reduce using rule 35 (addQPPM -> PLUS .)
    FALSE           reduce using rule 35 (addQPPM -> PLUS .)


state 124

    (36) addQPPM -> MINUS .

    LPAREN          reduce using rule 36 (addQPPM -> MINUS .)
    ID              reduce using rule 36 (addQPPM -> MINUS .)
    CTEINT          reduce using rule 36 (addQPPM -> MINUS .)
    CTEFLOAT        reduce using rule 36 (addQPPM -> MINUS .)
    CTECHAR         reduce using rule 36 (addQPPM -> MINUS .)
    CTESTRING       reduce using rule 36 (addQPPM -> MINUS .)
    TRUE            reduce using rule 36 (addQPPM -> MINUS .)
    FALSE           reduce using rule 36 (addQPPM -> MINUS .)


state 125

    (34) masexp -> empty .

    MORETHAN        reduce using rule 34 (masexp -> empty .)
    LESSTHAN        reduce using rule 34 (masexp -> empty .)
    NOTEQUAL        reduce using rule 34 (masexp -> empty .)
    ISEQUALTO       reduce using rule 34 (masexp -> empty .)
    MORETHANEQUAL   reduce using rule 34 (masexp -> empty .)
    LESSTHANEQUAL   reduce using rule 34 (masexp -> empty .)
    AND             reduce using rule 34 (masexp -> empty .)
    OR              reduce using rule 34 (masexp -> empty .)
    COMMA           reduce using rule 34 (masexp -> empty .)
    RPAREN          reduce using rule 34 (masexp -> empty .)
    SEMICOLON       reduce using rule 34 (masexp -> empty .)
    RSQBRACKET      reduce using rule 34 (masexp -> empty .)


state 126

    (33) masexp -> addQPPM . exp
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    varid                          shift and go to state 81
    termino                        shift and go to state 89
    idfunc                         shift and go to state 37
    ctechar                        shift and go to state 79
    leftparen                      shift and go to state 85
    varcte                         shift and go to state 94
    llamafunc                      shift and go to state 84
    cteint                         shift and go to state 98
    factor                         shift and go to state 87
    exp                            shift and go to state 165

state 127

    (29) varid -> ID arr .

    TIMES           reduce using rule 29 (varid -> ID arr .)
    DIVIDE          reduce using rule 29 (varid -> ID arr .)
    PLUS            reduce using rule 29 (varid -> ID arr .)
    MINUS           reduce using rule 29 (varid -> ID arr .)
    MORETHAN        reduce using rule 29 (varid -> ID arr .)
    LESSTHAN        reduce using rule 29 (varid -> ID arr .)
    NOTEQUAL        reduce using rule 29 (varid -> ID arr .)
    ISEQUALTO       reduce using rule 29 (varid -> ID arr .)
    MORETHANEQUAL   reduce using rule 29 (varid -> ID arr .)
    LESSTHANEQUAL   reduce using rule 29 (varid -> ID arr .)
    AND             reduce using rule 29 (varid -> ID arr .)
    OR              reduce using rule 29 (varid -> ID arr .)
    RPAREN          reduce using rule 29 (varid -> ID arr .)
    COMMA           reduce using rule 29 (varid -> ID arr .)
    SEMICOLON       reduce using rule 29 (varid -> ID arr .)
    RSQBRACKET      reduce using rule 29 (varid -> ID arr .)


state 128

    (31) arr -> empty .

    TIMES           reduce using rule 31 (arr -> empty .)
    DIVIDE          reduce using rule 31 (arr -> empty .)
    PLUS            reduce using rule 31 (arr -> empty .)
    MINUS           reduce using rule 31 (arr -> empty .)
    MORETHAN        reduce using rule 31 (arr -> empty .)
    LESSTHAN        reduce using rule 31 (arr -> empty .)
    NOTEQUAL        reduce using rule 31 (arr -> empty .)
    ISEQUALTO       reduce using rule 31 (arr -> empty .)
    MORETHANEQUAL   reduce using rule 31 (arr -> empty .)
    LESSTHANEQUAL   reduce using rule 31 (arr -> empty .)
    AND             reduce using rule 31 (arr -> empty .)
    OR              reduce using rule 31 (arr -> empty .)
    COMMA           reduce using rule 31 (arr -> empty .)
    RPAREN          reduce using rule 31 (arr -> empty .)
    SEMICOLON       reduce using rule 31 (arr -> empty .)
    RSQBRACKET      reduce using rule 31 (arr -> empty .)


state 129

    (30) arr -> LSQBRACKET . RSQBRACKET

    RSQBRACKET      shift and go to state 166


state 130

    (39) expresion -> expcomp masexpresion .

    COMMA           reduce using rule 39 (expresion -> expcomp masexpresion .)
    RPAREN          reduce using rule 39 (expresion -> expcomp masexpresion .)
    RSQBRACKET      reduce using rule 39 (expresion -> expcomp masexpresion .)
    SEMICOLON       reduce using rule 39 (expresion -> expcomp masexpresion .)


state 131

    (42) masexpresion -> addQPAO . expresion
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 167
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 132

    (40) addQPAO -> AND .

    LPAREN          reduce using rule 40 (addQPAO -> AND .)
    ID              reduce using rule 40 (addQPAO -> AND .)
    CTEINT          reduce using rule 40 (addQPAO -> AND .)
    CTEFLOAT        reduce using rule 40 (addQPAO -> AND .)
    CTECHAR         reduce using rule 40 (addQPAO -> AND .)
    CTESTRING       reduce using rule 40 (addQPAO -> AND .)
    TRUE            reduce using rule 40 (addQPAO -> AND .)
    FALSE           reduce using rule 40 (addQPAO -> AND .)


state 133

    (43) masexpresion -> empty .

    COMMA           reduce using rule 43 (masexpresion -> empty .)
    RPAREN          reduce using rule 43 (masexpresion -> empty .)
    SEMICOLON       reduce using rule 43 (masexpresion -> empty .)
    RSQBRACKET      reduce using rule 43 (masexpresion -> empty .)


state 134

    (41) addQPAO -> OR .

    LPAREN          reduce using rule 41 (addQPAO -> OR .)
    ID              reduce using rule 41 (addQPAO -> OR .)
    CTEINT          reduce using rule 41 (addQPAO -> OR .)
    CTEFLOAT        reduce using rule 41 (addQPAO -> OR .)
    CTECHAR         reduce using rule 41 (addQPAO -> OR .)
    CTESTRING       reduce using rule 41 (addQPAO -> OR .)
    TRUE            reduce using rule 41 (addQPAO -> OR .)
    FALSE           reduce using rule 41 (addQPAO -> OR .)


state 135

    (73) listafuncargs -> empty .

    RPAREN          reduce using rule 73 (listafuncargs -> empty .)


state 136

    (72) listafuncargs -> COMMA . expresion listafuncargs
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 168
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 137

    (70) funcargs -> expresion listafuncargs . checarparams
    (74) checarparams -> . empty
    (110) empty -> .

    RPAREN          reduce using rule 110 (empty -> .)

    checarparams                   shift and go to state 169
    empty                          shift and go to state 170

state 138

    (49) expcomp -> exp expcompcontinuo .

    AND             reduce using rule 49 (expcomp -> exp expcompcontinuo .)
    OR              reduce using rule 49 (expcomp -> exp expcompcontinuo .)
    COMMA           reduce using rule 49 (expcomp -> exp expcompcontinuo .)
    RSQBRACKET      reduce using rule 49 (expcomp -> exp expcompcontinuo .)
    RPAREN          reduce using rule 49 (expcomp -> exp expcompcontinuo .)
    SEMICOLON       reduce using rule 49 (expcomp -> exp expcompcontinuo .)


state 139

    (52) addQPComp -> NOTEQUAL .

    LPAREN          reduce using rule 52 (addQPComp -> NOTEQUAL .)
    ID              reduce using rule 52 (addQPComp -> NOTEQUAL .)
    CTEINT          reduce using rule 52 (addQPComp -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 52 (addQPComp -> NOTEQUAL .)
    CTECHAR         reduce using rule 52 (addQPComp -> NOTEQUAL .)
    CTESTRING       reduce using rule 52 (addQPComp -> NOTEQUAL .)
    TRUE            reduce using rule 52 (addQPComp -> NOTEQUAL .)
    FALSE           reduce using rule 52 (addQPComp -> NOTEQUAL .)


state 140

    (54) addQPComp -> MORETHANEQUAL .

    LPAREN          reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    ID              reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    CTEINT          reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    CTEFLOAT        reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    CTECHAR         reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    CTESTRING       reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    TRUE            reduce using rule 54 (addQPComp -> MORETHANEQUAL .)
    FALSE           reduce using rule 54 (addQPComp -> MORETHANEQUAL .)


state 141

    (50) addQPComp -> MORETHAN .

    LPAREN          reduce using rule 50 (addQPComp -> MORETHAN .)
    ID              reduce using rule 50 (addQPComp -> MORETHAN .)
    CTEINT          reduce using rule 50 (addQPComp -> MORETHAN .)
    CTEFLOAT        reduce using rule 50 (addQPComp -> MORETHAN .)
    CTECHAR         reduce using rule 50 (addQPComp -> MORETHAN .)
    CTESTRING       reduce using rule 50 (addQPComp -> MORETHAN .)
    TRUE            reduce using rule 50 (addQPComp -> MORETHAN .)
    FALSE           reduce using rule 50 (addQPComp -> MORETHAN .)


state 142

    (51) addQPComp -> LESSTHAN .

    LPAREN          reduce using rule 51 (addQPComp -> LESSTHAN .)
    ID              reduce using rule 51 (addQPComp -> LESSTHAN .)
    CTEINT          reduce using rule 51 (addQPComp -> LESSTHAN .)
    CTEFLOAT        reduce using rule 51 (addQPComp -> LESSTHAN .)
    CTECHAR         reduce using rule 51 (addQPComp -> LESSTHAN .)
    CTESTRING       reduce using rule 51 (addQPComp -> LESSTHAN .)
    TRUE            reduce using rule 51 (addQPComp -> LESSTHAN .)
    FALSE           reduce using rule 51 (addQPComp -> LESSTHAN .)


state 143

    (56) expcompcontinuo -> addQPComp . expcomp
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 171
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 144

    (53) addQPComp -> ISEQUALTO .

    LPAREN          reduce using rule 53 (addQPComp -> ISEQUALTO .)
    ID              reduce using rule 53 (addQPComp -> ISEQUALTO .)
    CTEINT          reduce using rule 53 (addQPComp -> ISEQUALTO .)
    CTEFLOAT        reduce using rule 53 (addQPComp -> ISEQUALTO .)
    CTECHAR         reduce using rule 53 (addQPComp -> ISEQUALTO .)
    CTESTRING       reduce using rule 53 (addQPComp -> ISEQUALTO .)
    TRUE            reduce using rule 53 (addQPComp -> ISEQUALTO .)
    FALSE           reduce using rule 53 (addQPComp -> ISEQUALTO .)


state 145

    (55) addQPComp -> LESSTHANEQUAL .

    LPAREN          reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    ID              reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    CTEINT          reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    CTEFLOAT        reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    CTECHAR         reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    CTESTRING       reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    TRUE            reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)
    FALSE           reduce using rule 55 (addQPComp -> LESSTHANEQUAL .)


state 146

    (57) expcompcontinuo -> empty .

    AND             reduce using rule 57 (expcompcontinuo -> empty .)
    OR              reduce using rule 57 (expcompcontinuo -> empty .)
    COMMA           reduce using rule 57 (expcompcontinuo -> empty .)
    RPAREN          reduce using rule 57 (expcompcontinuo -> empty .)
    SEMICOLON       reduce using rule 57 (expcompcontinuo -> empty .)
    RSQBRACKET      reduce using rule 57 (expcompcontinuo -> empty .)


state 147

    (12) ciclo -> while LPAREN expresion RPAREN . gotoF estatutobloque goto
    (7) gotoF -> . empty
    (110) empty -> .

    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    LBRACKET        reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

    empty                          shift and go to state 172
    gotoF                          shift and go to state 173

state 148

    (21) asignacion -> ID EQUALS expresion SEMICOLON .

    COMMENT         reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    CPPCOMMENT      reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    READ            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RBRACKET        reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 149

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS . LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON

    LSQBRACKET      shift and go to state 174


state 150

    (67) lectura -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 151

    (4) condicion -> IF LPAREN expresion RPAREN . gotoF estatutobloque masbloque
    (7) gotoF -> . empty
    (110) empty -> .

    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    LBRACKET        reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 172
    gotoF                          shift and go to state 176

state 152

    (18) masprint -> addQPP . listaprint
    (16) listaprint -> . expresion masprint
    (17) listaprint -> . ctestring masprint
    (39) expresion -> . expcomp masexpresion
    (107) ctestring -> . CTESTRING
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    CTESTRING       shift and go to state 88
    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    listaprint                     shift and go to state 177
    factor                         shift and go to state 87
    termino                        shift and go to state 89
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 108
    idfunc                         shift and go to state 37
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 110
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 153

    (19) masprint -> empty .

    RPAREN          reduce using rule 19 (masprint -> empty .)


state 154

    (20) addQPP -> COMMA .

    CTESTRING       reduce using rule 20 (addQPP -> COMMA .)
    LPAREN          reduce using rule 20 (addQPP -> COMMA .)
    ID              reduce using rule 20 (addQPP -> COMMA .)
    CTEINT          reduce using rule 20 (addQPP -> COMMA .)
    CTEFLOAT        reduce using rule 20 (addQPP -> COMMA .)
    CTECHAR         reduce using rule 20 (addQPP -> COMMA .)
    TRUE            reduce using rule 20 (addQPP -> COMMA .)
    FALSE           reduce using rule 20 (addQPP -> COMMA .)


state 155

    (17) listaprint -> ctestring masprint .

    RPAREN          reduce using rule 17 (listaprint -> ctestring masprint .)


state 156

    (14) escritura -> print LPAREN listaprint RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 157

    (16) listaprint -> expresion masprint .

    RPAREN          reduce using rule 16 (listaprint -> expresion masprint .)


state 158

    (82) funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .

    MAIN            reduce using rule 82 (funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs .)


state 159

    (85) bloquefunc -> LBRACKET masestatuto retorno RBRACKET .

    FUNCTION        reduce using rule 85 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)
    MAIN            reduce using rule 85 (bloquefunc -> LBRACKET masestatuto retorno RBRACKET .)


state 160

    (87) retorno -> RETURN SEMICOLON .

    RBRACKET        reduce using rule 87 (retorno -> RETURN SEMICOLON .)


state 161

    (86) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 179


state 162

    (28) rightparen -> RPAREN .

    TIMES           reduce using rule 28 (rightparen -> RPAREN .)
    DIVIDE          reduce using rule 28 (rightparen -> RPAREN .)
    PLUS            reduce using rule 28 (rightparen -> RPAREN .)
    MINUS           reduce using rule 28 (rightparen -> RPAREN .)
    MORETHAN        reduce using rule 28 (rightparen -> RPAREN .)
    LESSTHAN        reduce using rule 28 (rightparen -> RPAREN .)
    NOTEQUAL        reduce using rule 28 (rightparen -> RPAREN .)
    ISEQUALTO       reduce using rule 28 (rightparen -> RPAREN .)
    MORETHANEQUAL   reduce using rule 28 (rightparen -> RPAREN .)
    LESSTHANEQUAL   reduce using rule 28 (rightparen -> RPAREN .)
    AND             reduce using rule 28 (rightparen -> RPAREN .)
    OR              reduce using rule 28 (rightparen -> RPAREN .)
    COMMA           reduce using rule 28 (rightparen -> RPAREN .)
    RPAREN          reduce using rule 28 (rightparen -> RPAREN .)
    SEMICOLON       reduce using rule 28 (rightparen -> RPAREN .)
    RSQBRACKET      reduce using rule 28 (rightparen -> RPAREN .)


state 163

    (23) factor -> leftparen expresion rightparen .

    TIMES           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    DIVIDE          reduce using rule 23 (factor -> leftparen expresion rightparen .)
    PLUS            reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MINUS           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHAN        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    NOTEQUAL        reduce using rule 23 (factor -> leftparen expresion rightparen .)
    ISEQUALTO       reduce using rule 23 (factor -> leftparen expresion rightparen .)
    MORETHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    LESSTHANEQUAL   reduce using rule 23 (factor -> leftparen expresion rightparen .)
    AND             reduce using rule 23 (factor -> leftparen expresion rightparen .)
    OR              reduce using rule 23 (factor -> leftparen expresion rightparen .)
    COMMA           reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RSQBRACKET      reduce using rule 23 (factor -> leftparen expresion rightparen .)
    RPAREN          reduce using rule 23 (factor -> leftparen expresion rightparen .)
    SEMICOLON       reduce using rule 23 (factor -> leftparen expresion rightparen .)


state 164

    (47) masterminos -> addQTD termino .

    PLUS            reduce using rule 47 (masterminos -> addQTD termino .)
    MINUS           reduce using rule 47 (masterminos -> addQTD termino .)
    MORETHAN        reduce using rule 47 (masterminos -> addQTD termino .)
    LESSTHAN        reduce using rule 47 (masterminos -> addQTD termino .)
    NOTEQUAL        reduce using rule 47 (masterminos -> addQTD termino .)
    ISEQUALTO       reduce using rule 47 (masterminos -> addQTD termino .)
    MORETHANEQUAL   reduce using rule 47 (masterminos -> addQTD termino .)
    LESSTHANEQUAL   reduce using rule 47 (masterminos -> addQTD termino .)
    AND             reduce using rule 47 (masterminos -> addQTD termino .)
    OR              reduce using rule 47 (masterminos -> addQTD termino .)
    COMMA           reduce using rule 47 (masterminos -> addQTD termino .)
    RPAREN          reduce using rule 47 (masterminos -> addQTD termino .)
    SEMICOLON       reduce using rule 47 (masterminos -> addQTD termino .)
    RSQBRACKET      reduce using rule 47 (masterminos -> addQTD termino .)


state 165

    (33) masexp -> addQPPM exp .

    MORETHAN        reduce using rule 33 (masexp -> addQPPM exp .)
    LESSTHAN        reduce using rule 33 (masexp -> addQPPM exp .)
    NOTEQUAL        reduce using rule 33 (masexp -> addQPPM exp .)
    ISEQUALTO       reduce using rule 33 (masexp -> addQPPM exp .)
    MORETHANEQUAL   reduce using rule 33 (masexp -> addQPPM exp .)
    LESSTHANEQUAL   reduce using rule 33 (masexp -> addQPPM exp .)
    AND             reduce using rule 33 (masexp -> addQPPM exp .)
    OR              reduce using rule 33 (masexp -> addQPPM exp .)
    COMMA           reduce using rule 33 (masexp -> addQPPM exp .)
    RPAREN          reduce using rule 33 (masexp -> addQPPM exp .)
    SEMICOLON       reduce using rule 33 (masexp -> addQPPM exp .)
    RSQBRACKET      reduce using rule 33 (masexp -> addQPPM exp .)


state 166

    (30) arr -> LSQBRACKET RSQBRACKET .

    TIMES           reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    DIVIDE          reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    PLUS            reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    MINUS           reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    MORETHAN        reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    LESSTHAN        reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    NOTEQUAL        reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    ISEQUALTO       reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    MORETHANEQUAL   reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    LESSTHANEQUAL   reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    AND             reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    OR              reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    COMMA           reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    RPAREN          reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    SEMICOLON       reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)
    RSQBRACKET      reduce using rule 30 (arr -> LSQBRACKET RSQBRACKET .)


state 167

    (42) masexpresion -> addQPAO expresion .

    COMMA           reduce using rule 42 (masexpresion -> addQPAO expresion .)
    RPAREN          reduce using rule 42 (masexpresion -> addQPAO expresion .)
    SEMICOLON       reduce using rule 42 (masexpresion -> addQPAO expresion .)
    RSQBRACKET      reduce using rule 42 (masexpresion -> addQPAO expresion .)


state 168

    (72) listafuncargs -> COMMA expresion . listafuncargs
    (72) listafuncargs -> . COMMA expresion listafuncargs
    (73) listafuncargs -> . empty
    (110) empty -> .

    COMMA           shift and go to state 136
    RPAREN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 135
    listafuncargs                  shift and go to state 180

state 169

    (70) funcargs -> expresion listafuncargs checarparams .

    RPAREN          reduce using rule 70 (funcargs -> expresion listafuncargs checarparams .)


state 170

    (74) checarparams -> empty .

    RPAREN          reduce using rule 74 (checarparams -> empty .)


state 171

    (56) expcompcontinuo -> addQPComp expcomp .

    AND             reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)
    OR              reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)
    COMMA           reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)
    RPAREN          reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)
    SEMICOLON       reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)
    RSQBRACKET      reduce using rule 56 (expcompcontinuo -> addQPComp expcomp .)


state 172

    (7) gotoF -> empty .

    COMMENT         reduce using rule 7 (gotoF -> empty .)
    CPPCOMMENT      reduce using rule 7 (gotoF -> empty .)
    LBRACKET        reduce using rule 7 (gotoF -> empty .)
    ID              reduce using rule 7 (gotoF -> empty .)
    IF              reduce using rule 7 (gotoF -> empty .)
    READ            reduce using rule 7 (gotoF -> empty .)
    VAR             reduce using rule 7 (gotoF -> empty .)
    WHILE           reduce using rule 7 (gotoF -> empty .)
    PRINT           reduce using rule 7 (gotoF -> empty .)
    RBRACKET        reduce using rule 7 (gotoF -> empty .)
    RETURN          reduce using rule 7 (gotoF -> empty .)
    ELSE            reduce using rule 7 (gotoF -> empty .)


state 173

    (12) ciclo -> while LPAREN expresion RPAREN gotoF . estatutobloque goto
    (5) estatutobloque -> . estatuto
    (6) estatutobloque -> . bloque
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (8) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (110) empty -> .
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    LBRACKET        shift and go to state 28
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    bloque                         shift and go to state 181
    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    estatuto                       shift and go to state 182
    idfunc                         shift and go to state 37
    print                          shift and go to state 53
    vars                           shift and go to state 54
    asignacion                     shift and go to state 55
    empty                          shift and go to state 8
    escritura                      shift and go to state 56
    estatutobloque                 shift and go to state 183

state 174

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET . expresion comaexpresion RSQBRACKET SEMICOLON
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 184
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 175

    (67) lectura -> READ LPAREN ID RPAREN SEMICOLON .

    COMMENT         reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)
    ELSE            reduce using rule 67 (lectura -> READ LPAREN ID RPAREN SEMICOLON .)


state 176

    (4) condicion -> IF LPAREN expresion RPAREN gotoF . estatutobloque masbloque
    (5) estatutobloque -> . estatuto
    (6) estatutobloque -> . bloque
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (8) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (110) empty -> .
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    LBRACKET        shift and go to state 28
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    bloque                         shift and go to state 181
    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    estatuto                       shift and go to state 182
    idfunc                         shift and go to state 37
    print                          shift and go to state 53
    vars                           shift and go to state 54
    asignacion                     shift and go to state 55
    empty                          shift and go to state 8
    escritura                      shift and go to state 56
    estatutobloque                 shift and go to state 185

state 177

    (18) masprint -> addQPP listaprint .

    RPAREN          reduce using rule 18 (masprint -> addQPP listaprint .)


state 178

    (14) escritura -> print LPAREN listaprint RPAREN SEMICOLON .

    COMMENT         reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    CPPCOMMENT      reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ID              reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    IF              reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    READ            reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    VAR             reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    WHILE           reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    PRINT           reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    RETURN          reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)
    ELSE            reduce using rule 14 (escritura -> print LPAREN listaprint RPAREN SEMICOLON .)


state 179

    (86) retorno -> RETURN expresion SEMICOLON .

    RBRACKET        reduce using rule 86 (retorno -> RETURN expresion SEMICOLON .)


state 180

    (72) listafuncargs -> COMMA expresion listafuncargs .

    RPAREN          reduce using rule 72 (listafuncargs -> COMMA expresion listafuncargs .)


state 181

    (6) estatutobloque -> bloque .

    COMMENT         reduce using rule 6 (estatutobloque -> bloque .)
    CPPCOMMENT      reduce using rule 6 (estatutobloque -> bloque .)
    ID              reduce using rule 6 (estatutobloque -> bloque .)
    IF              reduce using rule 6 (estatutobloque -> bloque .)
    READ            reduce using rule 6 (estatutobloque -> bloque .)
    VAR             reduce using rule 6 (estatutobloque -> bloque .)
    WHILE           reduce using rule 6 (estatutobloque -> bloque .)
    PRINT           reduce using rule 6 (estatutobloque -> bloque .)
    RBRACKET        reduce using rule 6 (estatutobloque -> bloque .)
    RETURN          reduce using rule 6 (estatutobloque -> bloque .)
    ELSE            reduce using rule 6 (estatutobloque -> bloque .)


state 182

    (5) estatutobloque -> estatuto .

    COMMENT         reduce using rule 5 (estatutobloque -> estatuto .)
    CPPCOMMENT      reduce using rule 5 (estatutobloque -> estatuto .)
    ID              reduce using rule 5 (estatutobloque -> estatuto .)
    IF              reduce using rule 5 (estatutobloque -> estatuto .)
    READ            reduce using rule 5 (estatutobloque -> estatuto .)
    VAR             reduce using rule 5 (estatutobloque -> estatuto .)
    WHILE           reduce using rule 5 (estatutobloque -> estatuto .)
    PRINT           reduce using rule 5 (estatutobloque -> estatuto .)
    RBRACKET        reduce using rule 5 (estatutobloque -> estatuto .)
    RETURN          reduce using rule 5 (estatutobloque -> estatuto .)
    ELSE            reduce using rule 5 (estatutobloque -> estatuto .)


state 183

    (12) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque . goto
    (11) goto -> . empty
    (110) empty -> .

    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

    goto                           shift and go to state 187
    empty                          shift and go to state 186

state 184

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion . comaexpresion RSQBRACKET SEMICOLON
    (37) comaexpresion -> . COMMA expresion comaexpresion
    (38) comaexpresion -> . empty
    (110) empty -> .

    COMMA           shift and go to state 190
    RSQBRACKET      reduce using rule 110 (empty -> .)

    comaexpresion                  shift and go to state 188
    empty                          shift and go to state 189

state 185

    (4) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque . masbloque
    (9) masbloque -> . ELSE goto estatutobloque
    (10) masbloque -> . empty
    (110) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 192
    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)

  ! ELSE            [ reduce using rule 110 (empty -> .) ]

    masbloque                      shift and go to state 193
    empty                          shift and go to state 191

state 186

    (11) goto -> empty .

    COMMENT         reduce using rule 11 (goto -> empty .)
    CPPCOMMENT      reduce using rule 11 (goto -> empty .)
    ID              reduce using rule 11 (goto -> empty .)
    IF              reduce using rule 11 (goto -> empty .)
    READ            reduce using rule 11 (goto -> empty .)
    VAR             reduce using rule 11 (goto -> empty .)
    WHILE           reduce using rule 11 (goto -> empty .)
    PRINT           reduce using rule 11 (goto -> empty .)
    RBRACKET        reduce using rule 11 (goto -> empty .)
    RETURN          reduce using rule 11 (goto -> empty .)
    ELSE            reduce using rule 11 (goto -> empty .)
    LBRACKET        reduce using rule 11 (goto -> empty .)


state 187

    (12) ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .

    COMMENT         reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    CPPCOMMENT      reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ID              reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    IF              reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    READ            reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    VAR             reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    WHILE           reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    PRINT           reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RBRACKET        reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    RETURN          reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)
    ELSE            reduce using rule 12 (ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto .)


state 188

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion . RSQBRACKET SEMICOLON

    RSQBRACKET      shift and go to state 194


state 189

    (38) comaexpresion -> empty .

    RSQBRACKET      reduce using rule 38 (comaexpresion -> empty .)


state 190

    (37) comaexpresion -> COMMA . expresion comaexpresion
    (39) expresion -> . expcomp masexpresion
    (49) expcomp -> . exp expcompcontinuo
    (32) exp -> . termino masexp
    (44) termino -> . factor masterminos
    (23) factor -> . leftparen expresion rightparen
    (24) factor -> . varcte
    (25) factor -> . varid
    (26) factor -> . llamafunc
    (27) leftparen -> . LPAREN
    (99) varcte -> . cteint
    (100) varcte -> . ctefloat
    (101) varcte -> . ctechar
    (102) varcte -> . ctestring
    (103) varcte -> . ctebool
    (29) varid -> . ID arr
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (104) cteint -> . CTEINT
    (105) ctefloat -> . CTEFLOAT
    (106) ctechar -> . CTECHAR
    (107) ctestring -> . CTESTRING
    (108) ctebool -> . TRUE
    (109) ctebool -> . FALSE
    (69) idfunc -> . ID

    LPAREN          shift and go to state 90
    ID              shift and go to state 93
    CTEINT          shift and go to state 82
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 80
    CTESTRING       shift and go to state 88
    TRUE            shift and go to state 95
    FALSE           shift and go to state 99

    ctechar                        shift and go to state 79
    varid                          shift and go to state 81
    llamafunc                      shift and go to state 84
    leftparen                      shift and go to state 85
    factor                         shift and go to state 87
    ctebool                        shift and go to state 83
    ctefloat                       shift and go to state 91
    ctestring                      shift and go to state 92
    idfunc                         shift and go to state 37
    termino                        shift and go to state 89
    varcte                         shift and go to state 94
    expcomp                        shift and go to state 96
    expresion                      shift and go to state 195
    cteint                         shift and go to state 98
    exp                            shift and go to state 102

state 191

    (10) masbloque -> empty .

    COMMENT         reduce using rule 10 (masbloque -> empty .)
    CPPCOMMENT      reduce using rule 10 (masbloque -> empty .)
    ID              reduce using rule 10 (masbloque -> empty .)
    IF              reduce using rule 10 (masbloque -> empty .)
    READ            reduce using rule 10 (masbloque -> empty .)
    VAR             reduce using rule 10 (masbloque -> empty .)
    WHILE           reduce using rule 10 (masbloque -> empty .)
    PRINT           reduce using rule 10 (masbloque -> empty .)
    RBRACKET        reduce using rule 10 (masbloque -> empty .)
    RETURN          reduce using rule 10 (masbloque -> empty .)
    ELSE            reduce using rule 10 (masbloque -> empty .)


state 192

    (9) masbloque -> ELSE . goto estatutobloque
    (11) goto -> . empty
    (110) empty -> .

    COMMENT         reduce using rule 110 (empty -> .)
    CPPCOMMENT      reduce using rule 110 (empty -> .)
    LBRACKET        reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    PRINT           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

    empty                          shift and go to state 186
    goto                           shift and go to state 196

state 193

    (4) condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .

    COMMENT         reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    CPPCOMMENT      reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ID              reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    IF              reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    READ            reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    VAR             reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    WHILE           reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    PRINT           reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RBRACKET        reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    RETURN          reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)
    ELSE            reduce using rule 4 (condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque .)


state 194

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 197


state 195

    (37) comaexpresion -> COMMA expresion . comaexpresion
    (37) comaexpresion -> . COMMA expresion comaexpresion
    (38) comaexpresion -> . empty
    (110) empty -> .

    COMMA           shift and go to state 190
    RSQBRACKET      reduce using rule 110 (empty -> .)

    comaexpresion                  shift and go to state 198
    empty                          shift and go to state 189

state 196

    (9) masbloque -> ELSE goto . estatutobloque
    (5) estatutobloque -> . estatuto
    (6) estatutobloque -> . bloque
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . ciclo
    (61) estatuto -> . escritura
    (62) estatuto -> . lectura
    (63) estatuto -> . vars
    (64) estatuto -> . llamafunc SEMICOLON
    (65) estatuto -> . COMMENT
    (66) estatuto -> . CPPCOMMENT
    (8) bloque -> . LBRACKET masestatuto RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON
    (22) asignacion -> . ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON
    (4) condicion -> . IF LPAREN expresion RPAREN gotoF estatutobloque masbloque
    (12) ciclo -> . while LPAREN expresion RPAREN gotoF estatutobloque goto
    (14) escritura -> . print LPAREN listaprint RPAREN SEMICOLON
    (67) lectura -> . READ LPAREN ID RPAREN SEMICOLON
    (77) vars -> . VAR tipo listaid SEMICOLON vars
    (78) vars -> . empty
    (68) llamafunc -> . idfunc LPAREN funcargs RPAREN
    (13) while -> . WHILE
    (15) print -> . PRINT
    (110) empty -> .
    (69) idfunc -> . ID

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for CPPCOMMENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COMMENT         shift and go to state 39
    CPPCOMMENT      shift and go to state 50
    LBRACKET        shift and go to state 28
    ID              shift and go to state 43
    IF              shift and go to state 51
    READ            shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 48
    PRINT           shift and go to state 45
    RBRACKET        reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)

  ! COMMENT         [ reduce using rule 110 (empty -> .) ]
  ! CPPCOMMENT      [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! IF              [ reduce using rule 110 (empty -> .) ]
  ! READ            [ reduce using rule 110 (empty -> .) ]
  ! VAR             [ reduce using rule 110 (empty -> .) ]
  ! WHILE           [ reduce using rule 110 (empty -> .) ]
  ! PRINT           [ reduce using rule 110 (empty -> .) ]

    bloque                         shift and go to state 181
    ciclo                          shift and go to state 38
    lectura                        shift and go to state 40
    while                          shift and go to state 41
    vars                           shift and go to state 54
    llamafunc                      shift and go to state 42
    condicion                      shift and go to state 46
    estatuto                       shift and go to state 182
    idfunc                         shift and go to state 37
    print                          shift and go to state 53
    asignacion                     shift and go to state 55
    empty                          shift and go to state 8
    escritura                      shift and go to state 56
    estatutobloque                 shift and go to state 199

state 197

    (22) asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .

    COMMENT         reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    CPPCOMMENT      reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    ID              reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    READ            reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    VAR             reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    PRINT           reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    RBRACKET        reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON .)


state 198

    (37) comaexpresion -> COMMA expresion comaexpresion .

    RSQBRACKET      reduce using rule 37 (comaexpresion -> COMMA expresion comaexpresion .)


state 199

    (9) masbloque -> ELSE goto estatutobloque .

    COMMENT         reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    CPPCOMMENT      reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    ID              reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    IF              reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    READ            reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    VAR             reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    WHILE           reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    PRINT           reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    RBRACKET        reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    RETURN          reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)
    ELSE            reduce using rule 9 (masbloque -> ELSE goto estatutobloque .)

