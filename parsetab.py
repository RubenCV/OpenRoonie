
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C6A2A36DD441C2073FD26C51C8EB06F3'
    
_lr_action_items = {'MORETHANEQUAL':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,118,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'CTECHAR':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[89,89,89,89,89,-25,89,89,-48,-50,89,-51,-53,-49,-52,-39,-38,89,-44,-43,89,-34,89,-33,89,-18,89,89,89,]),'PROGRAM':([0,],[2,]),'LPAREN':([21,30,39,41,42,47,50,51,54,61,62,63,67,69,77,79,95,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[29,-82,61,62,63,-13,-11,67,-63,77,77,77,77,77,-25,77,-63,77,-48,-50,77,-51,-53,-49,-52,-39,-38,77,-44,-43,77,-34,77,-33,77,-18,77,77,77,]),'STRING':([6,16,29,57,],[10,10,10,10,]),'LESSTHANEQUAL':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,114,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'LSQBRACKET':([54,95,149,],[68,137,170,]),'BOOL':([6,16,29,57,],[15,15,15,15,]),'VAR':([5,8,25,32,33,40,45,46,48,49,52,53,58,64,65,150,169,172,174,176,177,179,180,187,188,],[6,-72,6,6,-71,-60,6,-58,-57,-56,-59,-72,6,-6,-61,-19,-12,-104,-104,-4,-8,-9,-10,-7,-20,]),'CTESTRING':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[83,83,83,83,83,-25,83,83,-48,-50,83,-51,-53,-49,-52,-39,-38,83,-44,-43,83,-34,83,-33,83,-18,83,83,83,]),'LBRACKET':([23,24,36,70,129,142,160,161,167,178,179,184,],[-3,32,58,58,-104,-104,32,-5,32,-104,-9,32,]),'IF':([8,25,32,33,40,45,46,48,49,52,53,58,64,65,150,169,172,174,176,177,179,180,187,188,],[-72,-104,39,-71,-60,39,-58,-57,-56,-59,-72,39,-6,-61,-19,-12,-104,-104,-4,-8,-9,-10,-7,-20,]),'FALSE':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[75,75,75,75,75,-25,75,75,-48,-50,75,-51,-53,-49,-52,-39,-38,75,-44,-43,75,-34,75,-33,75,-18,75,75,75,]),'EQUALS':([54,103,],[69,149,]),'MORETHAN':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,110,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'NOTEQUAL':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,111,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'MINUS':([74,75,76,78,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,135,136,141,155,156,159,163,],[-97,-103,-96,-94,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,130,-104,-96,-42,-46,-27,-29,-62,-21,-26,-45,-28,]),'LESSTHAN':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,117,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'ELSE':([64,172,],[-6,178,]),'PRINT':([8,25,32,33,40,45,46,48,49,52,53,58,64,65,150,169,172,174,176,177,179,180,187,188,],[-72,-104,47,-71,-60,47,-58,-57,-56,-59,-72,47,-6,-61,-19,-12,-104,-104,-4,-8,-9,-10,-7,-20,]),'CTEFLOAT':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[93,93,93,93,93,-25,93,93,-48,-50,93,-51,-53,-49,-52,-39,-38,93,-44,-43,93,-34,93,-33,93,-18,93,93,93,]),'TRUE':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[84,84,84,84,84,-25,84,84,-48,-50,84,-51,-53,-49,-52,-39,-38,84,-44,-43,84,-34,84,-33,84,-18,84,84,84,]),'PLUS':([74,75,76,78,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,135,136,141,155,156,159,163,],[-97,-103,-96,-94,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,134,-104,-96,-42,-46,-27,-29,-62,-21,-26,-45,-28,]),'MAIN':([5,7,8,17,18,25,33,59,73,105,151,152,],[-104,-104,-72,23,-78,-104,-71,-104,-77,-104,-76,-79,]),'ID':([1,2,8,9,10,11,12,13,14,15,22,25,26,32,33,37,40,45,46,48,49,52,53,58,61,62,63,64,65,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,150,169,170,172,174,176,177,179,180,183,187,188,],[4,-2,-72,-88,-91,-92,-89,20,-87,-90,30,-104,20,54,-71,60,-60,54,-58,-57,-56,-59,-72,54,95,95,95,-6,-61,95,95,-25,95,95,-48,-50,95,-51,-53,-49,-52,-39,-38,95,-44,-43,95,-34,95,-33,95,-18,95,-19,-12,95,-104,-104,-4,-8,-9,-10,95,-7,-20,]),'DIVIDE':([74,75,76,78,82,83,84,85,86,87,88,89,90,91,93,95,100,135,136,141,155,156,163,],[-97,-103,-96,-94,-24,-101,-102,124,-98,-23,-95,-100,-93,-22,-99,-104,-96,-27,-29,-62,-21,-26,-28,]),'FLOAT':([6,16,29,57,],[9,9,9,9,]),'$end':([3,31,64,],[0,-1,-6,]),'RSQBRACKET':([68,74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,115,116,120,121,126,128,131,133,135,136,137,141,155,156,157,158,159,162,163,175,181,182,186,189,],[103,-97,-103,-96,-94,-104,-104,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-47,-55,-37,-41,-42,-46,-32,-30,-27,-29,163,-62,-21,-26,-54,-40,-45,-31,-28,-104,-36,185,-104,-35,]),'RPAREN':([29,35,38,55,56,57,60,62,71,74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,109,115,116,120,121,126,128,131,133,135,136,139,140,141,143,146,148,155,156,157,158,159,162,163,164,165,166,168,173,],[36,-104,-84,-86,70,-104,-83,-104,-104,-97,-103,-96,-94,-104,-104,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,129,-99,-104,-104,-104,141,-65,142,-96,147,-104,-85,156,-47,-55,-37,-41,-42,-46,-32,-30,-27,-29,-67,-104,-62,-15,-17,-14,-21,-26,-54,-40,-45,-31,-28,-104,-64,-68,-16,-66,]),'AND':([74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,100,115,116,126,128,131,133,135,136,141,155,156,157,159,162,163,],[-97,-103,-96,-94,-104,122,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-47,-55,-42,-46,-32,-30,-27,-29,-62,-21,-26,-54,-45,-31,-28,]),'COMMA':([20,29,35,38,57,60,71,74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,100,102,115,116,120,121,126,128,131,133,135,136,141,155,156,157,158,159,162,163,164,175,186,],[26,-104,57,-84,-104,-83,57,-97,-103,-96,-94,-104,-104,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,138,144,144,-47,-55,-37,-41,-42,-46,-32,-30,-27,-29,-62,-21,-26,-54,-40,-45,-31,-28,138,183,183,]),'VOID':([6,16,29,57,],[11,11,11,11,]),'ISEQUALTO':([74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,93,94,95,100,126,128,131,133,135,136,141,155,156,159,162,163,],[-97,-103,-96,-94,113,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-42,-46,-32,-30,-27,-29,-62,-21,-26,-45,-31,-28,]),'WHILE':([8,25,32,33,40,45,46,48,49,52,53,58,64,65,150,169,172,174,176,177,179,180,187,188,],[-72,-104,50,-71,-60,50,-58,-57,-56,-59,-72,50,-6,-61,-19,-12,-104,-104,-4,-8,-9,-10,-7,-20,]),'FUNCTION':([5,7,8,25,33,59,105,152,],[-104,16,-72,-104,-71,16,16,-79,]),'OR':([74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,100,115,116,126,128,131,133,135,136,141,155,156,157,159,162,163,],[-97,-103,-96,-94,-104,119,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,-96,-47,-55,-42,-46,-32,-30,-27,-29,-62,-21,-26,-54,-45,-31,-28,]),'TIMES':([74,75,76,78,82,83,84,85,86,87,88,89,90,91,93,95,100,135,136,141,155,156,163,],[-97,-103,-96,-94,-24,-101,-102,125,-98,-23,-95,-100,-93,-22,-99,-104,-96,-27,-29,-62,-21,-26,-28,]),'RBRACKET':([8,25,32,33,40,43,45,46,48,49,52,53,64,65,66,107,150,154,169,171,172,174,176,177,179,180,187,188,],[-72,-104,-104,-71,-60,64,-104,-58,-57,-56,-59,-70,-6,-61,-69,152,-19,-81,-12,-80,-104,-104,-4,-8,-9,-10,-7,-20,]),'CTEINT':([61,62,63,67,69,77,79,108,110,111,112,113,114,117,118,119,122,123,124,125,127,130,132,134,138,144,145,170,183,],[86,86,86,86,86,-25,86,86,-48,-50,86,-51,-53,-49,-52,-39,-38,86,-44,-43,86,-34,86,-33,86,-18,86,86,86,]),'RETURN':([8,25,33,40,45,46,48,49,52,53,58,64,65,66,72,150,169,172,174,176,177,179,180,187,188,],[-72,-104,-71,-60,-104,-58,-57,-56,-59,-70,-104,-6,-61,-69,108,-19,-12,-104,-104,-4,-8,-9,-10,-7,-20,]),'INT':([6,16,29,57,],[14,14,14,14,]),'SEMICOLON':([4,19,20,27,28,34,44,74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,104,108,115,116,120,121,126,128,131,133,135,136,141,147,153,155,156,157,158,159,162,163,185,],[5,25,-104,-73,-75,-74,65,-97,-103,-96,-94,-104,-104,-24,-101,-102,-104,-98,-23,-95,-100,-93,-22,-99,-104,-104,150,154,-47,-55,-37,-41,-42,-46,-32,-30,-27,-29,-62,169,171,-21,-26,-54,-40,-45,-31,-28,188,]),'CHAR':([6,16,29,57,],[12,12,12,12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masprint':([100,102,],[143,148,]),'ctebool':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ctestring':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[76,76,76,100,76,76,76,76,76,76,76,76,100,76,76,]),'listaid':([13,26,],[19,34,]),'retorno':([72,],[107,]),'leftparen':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'addQPPM':([94,],[132,]),'arr':([95,],[135,]),'llamafunc':([32,45,58,61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[44,44,44,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'masterminos':([85,],[126,]),'while':([32,45,58,],[42,42,42,]),'tipo':([6,16,29,57,],[13,22,37,37,]),'masexp':([94,],[133,]),'listafuncargs':([96,164,],[140,173,]),'funcaux':([16,],[21,]),'expcompcontinuo':([80,],[115,]),'listaprint':([67,145,],[101,168,]),'varcte':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'addQPAO':([81,],[123,]),'cteint':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'funcs':([7,59,105,],[17,73,151,]),'bloque':([24,160,167,184,],[31,172,174,187,]),'expresion':([61,62,63,67,69,79,108,123,138,145,170,183,],[92,96,99,102,104,109,153,158,164,102,175,186,]),'idfunc':([32,45,58,61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'addQPP':([100,102,],[145,145,]),'termino':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[94,94,94,94,94,94,94,94,94,159,94,94,94,94,94,]),'estatuto':([32,45,58,],[45,45,45,]),'rightparen':([109,],[155,]),'goto':([174,178,],[180,184,]),'prog':([0,],[1,]),'comaexpresion':([175,186,],[182,189,]),'vars':([5,25,32,45,58,],[7,33,40,40,40,]),'gotoF':([129,142,],[160,167,]),'ctefloat':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'exp':([61,62,63,67,69,79,108,112,123,132,138,145,170,183,],[80,80,80,80,80,80,80,80,80,162,80,80,80,80,]),'masestatuto':([32,45,58,],[43,66,72,]),'expcomp':([61,62,63,67,69,79,108,112,123,138,145,170,183,],[81,81,81,81,81,81,81,157,81,81,81,81,81,]),'masid':([20,],[27,]),'addQPComp':([80,],[112,]),'asignacion':([32,45,58,],[49,49,49,]),'factor':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'ciclo':([32,45,58,],[46,46,46,]),'args':([29,57,],[35,71,]),'masbloque':([172,],[176,]),'bloquefunc':([36,70,],[59,105,]),'varid':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'condicion':([32,45,58,],[48,48,48,]),'checarparams':([140,],[165,]),'programa':([0,],[3,]),'addQTD':([85,],[127,]),'funcargs':([62,],[97,]),'escritura':([32,45,58,],[52,52,52,]),'ctechar':([61,62,63,67,69,79,108,112,123,127,132,138,145,170,183,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'main':([17,],[24,]),'masexpresion':([81,],[120,]),'empty':([5,7,20,25,29,32,35,45,57,58,59,62,71,80,81,85,94,95,96,100,102,105,129,140,142,164,172,174,175,178,186,],[8,18,28,8,38,53,55,53,38,53,18,98,55,116,121,128,131,136,139,146,146,18,161,166,161,139,177,179,181,179,181,]),'masargs':([35,71,],[56,106,]),'print':([32,45,58,],[51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',172),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',178),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',193),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',201),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',205),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',212),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',215),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',216),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',218),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',225),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',230),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',234),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',237),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',241),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',242),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',246),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',247),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',250),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',255),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',256),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',262),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',263),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',264),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',265),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',268),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',272),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',276),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',280),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',281),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',284),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',287),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',288),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',292),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',293),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',298),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',299),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',302),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',305),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',306),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',311),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',312),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',316),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',319),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',320),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',325),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',326),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',330),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',333),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',334),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',335),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',336),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',337),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',338),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',343),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',344),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',348),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',349),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',350),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',351),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',352),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',353),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',356),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',364),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',378),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',379),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',382),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',383),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',386),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',394),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',395),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',398),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',399),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',402),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',407),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',408),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',411),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',412),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',413),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',416),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',419),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',420),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',438),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',444),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',445),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',452),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',453),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',456),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',457),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',458),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',459),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',460),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',461),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',466),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',467),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',468),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',469),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',470),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',473),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',477),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',481),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',485),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',489),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',490),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',498),
]
