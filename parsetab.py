
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '69892DD599D7A8991F88226631E7A302'
    
_lr_action_items = {'LBRACKET':([20,21,49,104,114,141,],[-3,26,26,26,26,26,]),'FUNCTION':([5,6,8,28,47,56,58,],[-78,9,-51,-78,-50,-5,9,]),'AND':([62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,79,80,84,95,96,102,103,105,107,111,113,122,123,124,125,126,127,130,132,133,134,135,136,],[-72,-76,-73,-78,-17,97,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-42,-35,-18,-20,-24,-21,-34,-31,-36,-37,-38,-39,-41,-40,-19,-23,-22,-16,-32,-33,]),'$end':([3,27,56,],[0,-1,-5,]),'RSQBRACKET':([55,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,79,80,95,96,99,100,101,102,103,105,107,111,113,122,123,124,125,126,127,128,129,130,132,133,134,135,136,144,146,148,150,152,],[86,-72,-76,-73,-78,-17,-78,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-42,-35,-27,-30,130,-18,-20,-24,-21,-34,-31,-36,-37,-38,-39,-41,-40,-28,-29,-19,-23,-22,-16,-32,-33,-78,149,-26,-78,-25,]),'TRUE':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'CTEFLOAT':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'COMMA':([23,50,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,79,80,82,84,95,96,99,100,102,103,105,107,111,113,122,123,124,125,126,127,128,129,130,132,133,134,135,136,144,150,],[30,60,-72,-76,-73,-78,-17,-78,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,117,117,-42,-35,-27,-30,-18,-20,-24,-21,-34,-31,-36,-37,-38,-39,-41,-40,-28,-29,-19,-23,-22,-16,-32,-33,147,147,]),'CTEINT':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'MORETHAN':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,89,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'RBRACKET':([8,26,28,36,37,39,42,43,44,45,46,47,56,57,120,131,137,139,142,143,145,151,],[-51,-78,-78,-45,-46,-47,-44,-43,-49,56,-78,-50,-5,-48,-14,-8,-78,-9,-4,-7,-6,-15,]),'MORETHANEQUAL':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,94,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'LESSTHAN':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,90,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'OR':([62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,79,80,84,95,96,102,103,105,107,111,113,122,123,124,125,126,127,130,132,133,134,135,136,],[-72,-76,-73,-78,-17,98,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-42,-35,-18,-20,-24,-21,-34,-31,-36,-37,-38,-39,-41,-40,-19,-23,-22,-16,-32,-33,]),'ELSE':([56,137,],[-5,141,]),'SEMICOLON':([4,22,23,29,31,48,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,79,80,85,95,96,99,100,102,103,105,107,111,113,118,122,123,124,125,126,127,128,129,130,132,133,134,135,136,149,],[5,28,-78,-52,-54,-53,-72,-76,-73,-78,-17,-78,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,120,-42,-35,-27,-30,-18,-20,-24,-21,-34,-31,139,-36,-37,-38,-39,-41,-40,-28,-29,-19,-23,-22,-16,-32,-33,151,]),'EQUALS':([41,86,],[54,121,]),'IF':([8,26,28,36,37,39,42,43,44,46,47,56,120,131,137,139,142,143,145,151,],[-51,38,-78,-45,-46,-47,-44,-43,-51,38,-50,-5,-14,-8,-78,-9,-4,-7,-6,-15,]),'LESSTHANEQUAL':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,93,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'PRINT':([8,26,28,36,37,39,42,43,44,46,47,56,120,131,137,139,142,143,145,151,],[-51,40,-78,-45,-46,-47,-44,-43,-51,40,-50,-5,-14,-8,-78,-9,-4,-7,-6,-15,]),'MAIN':([5,6,8,10,11,28,47,56,58,87,],[-78,-78,-51,20,-56,-78,-50,-5,-78,-55,]),'CTECHAR':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'CTESTRING':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'VAR':([5,8,26,28,36,37,39,42,43,44,46,47,56,120,131,137,139,142,143,145,151,],[7,-51,7,7,-45,-46,-47,-44,-43,-51,7,-50,-5,-14,-8,-78,-9,-4,-7,-6,-15,]),'ID':([1,2,8,12,13,14,15,16,17,18,26,28,30,34,36,37,39,42,43,44,46,47,51,52,53,54,56,77,89,90,91,92,93,94,97,98,106,108,110,112,117,120,131,137,139,140,142,143,145,147,151,],[-2,4,-51,-66,-65,23,-64,-62,-63,24,41,-78,23,50,-45,-46,-47,-44,-43,-51,41,-50,70,70,70,70,-5,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-14,-8,-78,-9,70,-4,-7,-6,70,-15,]),'ISEQUALTO':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,92,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'DIVIDE':([62,63,64,66,68,69,70,72,73,75,76,78,79,80,84,102,103,130,134,],[-72,-76,-73,-17,-67,-75,-78,-68,-71,-74,-77,-70,112,-69,-70,-18,-20,-19,-16,]),'MINUS':([62,63,64,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'LSQBRACKET':([41,70,121,],[55,101,140,]),'INT':([7,9,25,60,],[16,16,16,16,]),'WHILE':([8,26,28,36,37,39,42,43,44,46,47,56,120,131,137,139,142,143,145,151,],[-51,35,-78,-45,-46,-47,-44,-43,-51,35,-50,-5,-14,-8,-78,-9,-4,-7,-6,-15,]),'STRING':([7,9,25,60,],[12,12,12,12,]),'FALSE':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'LPAREN':([19,24,35,38,40,51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[25,-57,51,52,53,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'RPAREN':([25,32,33,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,88,95,96,99,100,102,103,105,107,109,111,113,115,116,119,122,123,124,125,126,127,128,129,130,132,133,134,135,136,138,],[-78,49,-59,-78,-58,-78,-61,-72,-76,-73,-78,-17,-78,-67,-75,-78,104,-68,-71,-78,-74,-77,-70,-78,-69,114,-78,118,-70,-60,-42,-35,-27,-30,-18,-20,-24,-21,134,-34,-31,-10,-13,-11,-36,-37,-38,-39,-41,-40,-28,-29,-19,-23,-22,-16,-32,-33,-12,]),'NOTEQUAL':([62,63,64,65,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,91,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'PLUS':([62,63,64,66,68,69,70,72,73,74,75,76,78,79,80,84,102,103,105,107,111,113,130,132,133,134,135,136,],[-72,-76,-73,-17,-67,-75,-78,-68,-71,-78,-74,-77,-70,-78,-69,-70,-18,-20,-24,-21,-34,-31,-19,-23,-22,-16,-32,-33,]),'BOOL':([7,9,25,60,],[13,13,13,13,]),'TIMES':([62,63,64,66,68,69,70,72,73,75,76,78,79,80,84,102,103,130,134,],[-72,-76,-73,-17,-67,-75,-78,-68,-71,-74,-77,-70,110,-69,-70,-18,-20,-19,-16,]),'PROGRAM':([0,],[1,]),'CHAR':([7,9,25,60,],[15,15,15,15,]),'FLOAT':([7,9,25,60,],[17,17,17,17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masprint':([82,84,],[115,119,]),'masargs':([50,],[59,]),'ctebool':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'masid':([23,],[29,]),'exp':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[65,65,65,65,65,122,123,124,125,126,127,65,65,132,133,135,136,65,65,65,]),'varcte':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'expcomp':([51,52,53,54,77,97,98,117,140,147,],[67,67,67,67,67,128,129,67,67,67,]),'masterminos':([79,],[113,]),'ciclo':([26,46,],[36,36,]),'escritura':([26,46,],[37,37,]),'bloque':([21,49,104,114,141,],[27,58,131,137,145,]),'main':([10,],[21,]),'cteint':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'vars':([5,26,28,46,],[6,39,47,39,]),'masexpresion':([67,],[99,]),'expcompcontinuo':([65,],[96,]),'args':([25,60,],[32,88,]),'arr':([70,],[102,]),'prog':([0,],[2,]),'listaid':([14,30,],[22,48,]),'expresion':([51,52,53,54,77,117,140,147,],[71,81,82,85,109,82,144,150,]),'condicion':([26,46,],[42,42,]),'comaexpresion':([144,150,],[146,152,]),'estatuto':([26,46,],[46,46,]),'masbloque':([137,],[142,]),'termino':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'empty':([5,6,23,25,26,28,46,50,58,60,65,67,70,74,79,82,84,137,144,150,],[8,11,31,33,44,8,44,61,11,33,95,100,103,105,111,116,116,143,148,148,]),'masestatuto':([26,46,],[45,57,]),'listaprint':([53,117,],[83,138,]),'ctefloat':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'asignacion':([26,46,],[43,43,]),'ctestring':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[78,78,84,78,78,78,78,78,78,78,78,78,78,78,78,78,78,84,78,78,]),'programa':([0,],[3,]),'tipo':([7,9,25,60,],[14,18,34,34,]),'factor':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'funcs':([6,58,],[10,87,]),'funcaux':([9,],[19,]),'masexp':([74,],[107,]),'ctechar':([51,52,53,54,77,89,90,91,92,93,94,97,98,106,108,110,112,117,140,147,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',109),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',112),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',117),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',122),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',125),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',128),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',129),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',132),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',135),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',138),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',139),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',142),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',143),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',146),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',147),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','OpenRoonie.py',150),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',151),
  ('factor -> ID arr','factor',2,'p_factor','OpenRoonie.py',152),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',155),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',156),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',159),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',162),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',163),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',164),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',167),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',168),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',171),
  ('masexpresion -> AND expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',174),
  ('masexpresion -> OR expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',175),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',176),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',179),
  ('masterminos -> TIMES exp','masterminos',2,'p_masterminos','OpenRoonie.py',182),
  ('masterminos -> DIVIDE exp','masterminos',2,'p_masterminos','OpenRoonie.py',183),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',184),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',187),
  ('expcompcontinuo -> MORETHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',190),
  ('expcompcontinuo -> LESSTHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',191),
  ('expcompcontinuo -> NOTEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',192),
  ('expcompcontinuo -> ISEQUALTO exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',193),
  ('expcompcontinuo -> MORETHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',194),
  ('expcompcontinuo -> LESSTHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',195),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',196),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',199),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',200),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',201),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',202),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',203),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',206),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',207),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',210),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',211),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',214),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',218),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',219),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',224),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',225),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',228),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',233),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',234),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',238),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',239),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',242),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',243),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',244),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',245),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',246),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',251),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',252),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',253),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',254),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',255),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',258),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',262),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',266),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',270),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',274),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',275),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',283),
]
