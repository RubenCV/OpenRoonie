
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EDE06FACD7A628A9ACE558B96363C1D2'
    
_lr_action_items = {'PROGRAM':([0,],[1,]),'$end':([2,28,66,],[0,-1,-6,]),'LSQBRACKET':([43,84,144,],[63,121,166,]),'LESSTHAN':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,117,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'NOTEQUAL':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,116,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'MORETHANEQUAL':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,110,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'OR':([74,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,109,114,120,122,124,127,129,131,149,155,158,159,160,161,162,],[-96,-104,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,136,-98,-97,-103,-101,-93,-96,-47,-55,-29,-27,-32,-30,-46,-42,-62,-54,-21,-26,-28,-31,-45,]),'RPAREN':([26,33,35,57,58,59,60,68,73,74,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,108,109,114,119,120,122,124,127,129,131,135,137,138,141,142,146,148,149,155,158,159,160,161,162,163,164,167,168,169,174,],[34,-84,-104,-86,72,-104,-83,-104,-104,-96,-104,-22,-100,-99,-23,-95,118,-104,-102,-104,-24,-104,-94,-104,-98,-97,-103,-101,-93,-96,-104,143,-104,-65,149,150,-85,-47,-55,159,-29,-27,-32,-30,-46,-42,-41,-37,-15,-17,-14,-104,-67,-62,-54,-21,-26,-28,-31,-45,-40,-16,-68,-64,-104,-66,]),'PLUS':([74,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,129,131,149,158,159,160,162,],[-96,-22,-100,-99,-23,-95,-104,-102,123,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-46,-42,-62,-21,-26,-28,-45,]),'TRUE':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[85,85,85,85,85,-25,85,85,-52,-48,85,-51,-53,-50,-49,-33,-34,85,85,-44,-43,-38,85,-39,85,-18,85,85,85,]),'COMMA':([23,26,33,35,59,60,73,74,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,109,114,120,122,124,127,129,131,135,137,149,155,158,159,160,161,162,163,169,173,185,],[30,-104,-84,59,-104,-83,59,-96,-104,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-104,-98,-97,-103,-101,-93,140,140,147,-47,-55,-29,-27,-32,-30,-46,-42,-41,-37,-62,-54,-21,-26,-28,-31,-45,-40,147,180,180,]),'SEMICOLON':([4,23,24,29,31,48,53,74,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,100,105,109,114,120,122,124,127,129,131,135,137,143,149,151,155,158,159,160,161,162,163,184,],[5,-104,32,-75,-73,67,-74,-96,-104,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-104,-98,-97,-103,-101,-93,145,152,-47,-55,-29,-27,-32,-30,-46,-42,-41,-37,165,-62,171,-54,-21,-26,-28,-31,-45,-40,187,]),'EQUALS':([43,99,],[64,144,]),'ID':([1,3,7,12,13,14,15,16,17,18,19,27,30,32,36,37,38,42,44,45,49,50,54,56,61,62,64,66,67,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,145,147,165,166,172,175,176,177,180,182,183,187,189,],[-2,4,-72,-87,-88,-92,23,-91,-90,-89,25,43,23,-104,60,-57,-58,-59,43,-72,-60,-56,-71,43,84,84,84,-6,-61,84,84,-25,84,84,-52,-48,84,-51,-53,-50,-49,-33,-34,84,84,-44,-43,-38,84,-39,84,-18,-19,84,-12,84,-104,-104,-10,-9,84,-4,-8,-20,-7,]),'DIVIDE':([74,77,78,79,80,81,84,85,87,88,89,91,92,93,94,95,96,120,122,149,158,159,160,],[-96,-22,-100,-99,-23,-95,-104,-102,-24,130,-94,-98,-97,-103,-101,-93,-96,-29,-27,-62,-21,-26,-28,]),'ELSE':([66,175,],[-6,181,]),'LESSTHANEQUAL':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,115,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'MORETHAN':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,111,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'MINUS':([74,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,129,131,149,158,159,160,162,],[-96,-22,-100,-99,-23,-95,-104,-102,125,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-46,-42,-62,-21,-26,-28,-45,]),'TIMES':([74,77,78,79,80,81,84,85,87,88,89,91,92,93,94,95,96,120,122,149,158,159,160,],[-96,-22,-100,-99,-23,-95,-104,-102,-24,132,-94,-98,-97,-103,-101,-93,-96,-29,-27,-62,-21,-26,-28,]),'AND':([74,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,109,114,120,122,124,127,129,131,149,155,158,159,160,161,162,],[-96,-104,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,133,-98,-97,-103,-101,-93,-96,-47,-55,-29,-27,-32,-30,-46,-42,-62,-54,-21,-26,-28,-31,-45,]),'CTESTRING':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[94,94,94,94,94,-25,94,94,-52,-48,94,-51,-53,-50,-49,-33,-34,94,94,-44,-43,-38,94,-39,94,-18,94,94,94,]),'CTEINT':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[91,91,91,91,91,-25,91,91,-52,-48,91,-51,-53,-50,-49,-33,-34,91,91,-44,-43,-38,91,-39,91,-18,91,91,91,]),'CHAR':([8,10,26,59,],[18,18,18,18,]),'ISEQUALTO':([74,76,77,78,79,80,81,84,85,86,87,88,89,91,92,93,94,95,96,120,122,124,127,129,131,149,158,159,160,161,162,],[-96,113,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-98,-97,-103,-101,-93,-96,-29,-27,-32,-30,-46,-42,-62,-21,-26,-28,-31,-45,]),'LPAREN':([20,25,39,40,41,43,47,51,52,61,62,64,68,69,75,83,84,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[26,-82,61,-11,62,-63,-13,68,69,75,75,75,75,75,-25,75,-63,75,-52,-48,75,-51,-53,-50,-49,-33,-34,75,75,-44,-43,-38,75,-39,75,-18,75,75,75,]),'PRINT':([7,27,32,37,38,42,44,45,49,50,54,56,66,67,145,165,172,175,176,177,182,183,187,189,],[-72,47,-104,-57,-58,-59,47,-72,-60,-56,-71,47,-6,-61,-19,-12,-104,-104,-10,-9,-4,-8,-20,-7,]),'WHILE':([7,27,32,37,38,42,44,45,49,50,54,56,66,67,145,165,172,175,176,177,182,183,187,189,],[-72,40,-104,-57,-58,-59,40,-72,-60,-56,-71,40,-6,-61,-19,-12,-104,-104,-10,-9,-4,-8,-20,-7,]),'VAR':([5,7,27,32,37,38,42,44,45,49,50,54,56,66,67,145,165,172,175,176,177,182,183,187,189,],[8,-72,8,8,-57,-58,-59,8,-72,-60,-56,-71,8,-6,-61,-19,-12,-104,-104,-10,-9,-4,-8,-20,-7,]),'LBRACKET':([21,22,34,72,118,150,156,157,170,177,181,186,],[27,-3,56,56,-104,-104,27,-5,27,-9,-104,27,]),'MAIN':([5,6,7,9,11,32,54,55,70,107,153,154,],[-104,-104,-72,-78,22,-104,-71,-104,-77,-104,-79,-76,]),'FUNCTION':([5,6,7,32,54,55,107,153,],[-104,10,-72,-104,-71,10,10,-79,]),'CTECHAR':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[78,78,78,78,78,-25,78,78,-52,-48,78,-51,-53,-50,-49,-33,-34,78,78,-44,-43,-38,78,-39,78,-18,78,78,78,]),'INT':([8,10,26,59,],[12,12,12,12,]),'STRING':([8,10,26,59,],[16,16,16,16,]),'CTEFLOAT':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[79,79,79,79,79,-25,79,79,-52,-48,79,-51,-53,-50,-49,-33,-34,79,79,-44,-43,-38,79,-39,79,-18,79,79,79,]),'BOOL':([8,10,26,59,],[17,17,17,17,]),'VOID':([8,10,26,59,],[14,14,14,14,]),'RETURN':([7,32,37,38,42,44,45,49,50,54,56,65,66,67,71,145,165,172,175,176,177,182,183,187,189,],[-72,-104,-57,-58,-59,-104,-70,-60,-56,-71,-104,-69,-6,-61,105,-19,-12,-104,-104,-10,-9,-4,-8,-20,-7,]),'FALSE':([61,62,64,68,69,75,83,105,110,111,112,113,115,116,117,123,125,126,128,130,132,133,134,136,139,140,147,166,180,],[93,93,93,93,93,-25,93,93,-52,-48,93,-51,-53,-50,-49,-33,-34,93,93,-44,-43,-38,93,-39,93,-18,93,93,93,]),'RBRACKET':([7,27,32,37,38,42,44,45,46,49,50,54,65,66,67,106,145,152,165,171,172,175,176,177,182,183,187,189,],[-72,-104,-104,-57,-58,-59,-104,-70,66,-60,-56,-71,-69,-6,-61,153,-19,-81,-12,-80,-104,-104,-10,-9,-4,-8,-20,-7,]),'RSQBRACKET':([63,74,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,109,114,120,121,122,124,127,129,131,135,137,149,155,158,159,160,161,162,163,173,178,179,185,188,],[99,-96,-104,-22,-100,-99,-23,-95,-104,-102,-104,-24,-104,-94,-104,-98,-97,-103,-101,-93,-47,-55,-29,160,-27,-32,-30,-46,-42,-41,-37,-62,-54,-21,-26,-28,-31,-45,-40,-104,184,-36,-104,-35,]),'IF':([7,27,32,37,38,42,44,45,49,50,54,56,66,67,145,165,172,175,176,177,182,183,187,189,],[-72,52,-104,-57,-58,-59,52,-72,-60,-56,-71,52,-6,-61,-19,-12,-104,-104,-10,-9,-4,-8,-20,-7,]),'FLOAT':([8,10,26,59,],[13,13,13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloquefunc':([34,72,],[55,107,]),'ctestring':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[74,96,74,74,74,74,74,74,74,74,74,96,74,74,74,]),'ciclo':([27,44,56,],[38,38,38,]),'funcaux':([10,],[20,]),'addQPComp':([76,],[112,]),'gotoF':([118,150,],[156,170,]),'prog':([0,],[3,]),'exp':([61,62,64,68,69,83,105,112,126,134,139,147,166,180,],[76,76,76,76,76,76,151,76,161,76,76,76,76,76,]),'rightparen':([119,],[158,]),'addQPPM':([86,],[126,]),'ctechar':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'expresion':([61,62,64,68,69,83,134,139,147,166,180,],[82,97,100,101,104,119,163,97,169,173,185,]),'llamafunc':([27,44,56,61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[48,48,48,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'estatuto':([27,44,56,],[44,44,44,]),'masargs':([35,73,],[58,108,]),'main':([11,],[21,]),'addQPAO':([90,],[134,]),'checarparams':([146,],[168,]),'addQTD':([88,],[128,]),'empty':([5,6,23,26,27,32,35,44,55,56,59,68,73,76,84,86,88,90,96,97,101,107,118,146,150,169,172,173,175,181,185,],[7,9,29,33,45,7,57,45,9,45,33,102,57,114,120,124,129,135,141,141,148,9,157,167,157,148,177,179,183,177,179,]),'varcte':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'listaprint':([62,139,],[98,164,]),'masexpresion':([90,],[137,]),'ctefloat':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'expcompcontinuo':([76,],[109,]),'programa':([0,],[2,]),'args':([26,59,],[35,73,]),'arr':([84,],[122,]),'addQPP':([96,97,],[139,139,]),'idfunc':([27,44,56,61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'cteint':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'while':([27,44,56,],[39,39,39,]),'leftparen':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'masid':([23,],[31,]),'comaexpresion':([173,185,],[178,188,]),'ctebool':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'masbloque':([175,],[182,]),'masprint':([96,97,],[138,142,]),'varid':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'print':([27,44,56,],[41,41,41,]),'listaid':([15,30,],[24,53,]),'funcs':([6,55,107,],[11,70,154,]),'condicion':([27,44,56,],[37,37,37,]),'listafuncargs':([101,169,],[146,174,]),'goto':([172,181,],[176,186,]),'termino':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[86,86,86,86,86,86,86,86,86,162,86,86,86,86,86,]),'masestatuto':([27,44,56,],[46,65,71,]),'factor':([61,62,64,68,69,83,105,112,126,128,134,139,147,166,180,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'masexp':([86,],[127,]),'vars':([5,27,32,44,56,],[6,49,54,49,49,]),'escritura':([27,44,56,],[42,42,42,]),'expcomp':([61,62,64,68,69,83,112,134,139,147,166,180,],[90,90,90,90,90,90,155,90,90,90,90,90,]),'asignacion':([27,44,56,],[50,50,50,]),'retorno':([71,],[106,]),'tipo':([8,10,26,59,],[15,19,36,36,]),'bloque':([21,156,170,186,],[28,172,175,189,]),'masterminos':([88,],[131,]),'funcargs':([68,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',169),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',173),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',188),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',196),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',200),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',207),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',210),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',211),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',213),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',220),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',225),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',229),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',232),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',236),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',237),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',241),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',242),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',245),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',250),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',251),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',257),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',258),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',259),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',260),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',263),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',267),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',271),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',275),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',276),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',279),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',282),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',283),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',287),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',288),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',293),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',294),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',297),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',300),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',301),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',306),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',307),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',311),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',314),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',315),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',320),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',321),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',325),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',328),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',329),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',330),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',331),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',332),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',333),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',338),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',339),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',343),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',344),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',345),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',346),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',347),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',348),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',351),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',359),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',371),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',372),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',375),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',376),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',379),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',386),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',387),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',390),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',391),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',394),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',400),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',401),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',404),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',405),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',406),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',409),
  ('retorno -> RETURN exp SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',412),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',413),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',426),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',431),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',432),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',439),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',440),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',443),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',444),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',445),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',446),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',447),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',448),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',453),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',454),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',455),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',456),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',457),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',460),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',464),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',468),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',472),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',476),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',477),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',485),
]
