
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BE4561320C5D6038BDB4E6597D04C0BB'
    
_lr_action_items = {'FALSE':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[88,88,88,88,88,88,-25,88,88,-18,88,-39,-38,-33,88,-34,-51,88,-50,-53,-49,-48,-52,-43,88,-44,88,88,88,]),'OR':([76,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,127,133,138,141,143,144,149,157,158,161,163,164,165,],[-100,-101,118,-102,-104,-22,-106,-96,-105,-106,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-55,-47,-42,-46,-29,-27,-64,-26,-21,-31,-54,-45,-28,]),'MORETHANEQUAL':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,135,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'DIVIDE':([76,80,82,83,84,87,88,90,91,92,93,94,95,96,97,98,100,143,144,149,157,158,165,],[-100,-101,-102,-104,-22,-96,-105,-98,-97,-24,-95,-103,-23,-99,140,-106,-98,-29,-27,-64,-26,-21,-28,]),'LESSTHANEQUAL':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,131,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'NOTEQUAL':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,130,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'PRINT':([7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[-74,-106,47,-73,-56,-63,-58,47,-59,-62,-74,-60,-57,47,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'RSQBRACKET':([69,76,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,100,117,120,124,125,127,133,138,141,142,143,144,149,157,158,160,161,163,164,165,176,181,182,188,191,],[104,-100,-101,-106,-102,-104,-22,-106,-96,-105,-106,-97,-24,-95,-103,-23,-99,-106,-106,-98,-37,-41,-30,-32,-55,-47,-42,-46,165,-29,-27,-64,-26,-21,-40,-31,-54,-45,-28,-106,-36,187,-106,-35,]),'LBRACKET':([23,24,37,74,145,152,166,167,172,178,185,186,],[-3,32,58,58,-106,-106,32,-5,32,-106,-9,32,]),'INT':([6,16,30,62,],[10,10,10,10,]),'CTEFLOAT':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[80,80,80,80,80,80,-25,80,80,-18,80,-39,-38,-33,80,-34,-51,80,-50,-53,-49,-48,-52,-43,80,-44,80,80,80,]),'STRING':([6,16,30,62,],[15,15,15,15,]),'LPAREN':([22,29,42,45,47,48,50,54,56,64,66,67,70,71,77,78,98,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[30,-84,64,66,-13,67,-11,-65,71,78,78,78,78,78,78,-25,-65,78,78,-18,78,-39,-38,-33,78,-34,-51,78,-50,-53,-49,-48,-52,-43,78,-44,78,78,78,]),'FUNCTION':([5,7,8,28,34,59,109,153,],[-106,-74,16,-106,-73,16,16,-81,]),'VAR':([5,7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[6,-74,6,6,-73,-56,-63,-58,6,-59,-62,-74,-60,-57,6,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'MINUS':([76,80,82,83,84,85,87,88,90,91,92,93,94,95,96,97,98,100,138,141,143,144,149,157,158,164,165,],[-100,-101,-102,-104,-22,123,-96,-105,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-42,-46,-29,-27,-64,-26,-21,-45,-28,]),'LESSTHAN':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,132,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'CTECHAR':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[82,82,82,82,82,82,-25,82,82,-18,82,-39,-38,-33,82,-34,-51,82,-50,-53,-49,-48,-52,-43,82,-44,82,82,82,]),'TIMES':([76,80,82,83,84,87,88,90,91,92,93,94,95,96,97,98,100,143,144,149,157,158,165,],[-100,-101,-102,-104,-22,-96,-105,-98,-97,-24,-95,-103,-23,-99,137,-106,-98,-29,-27,-64,-26,-21,-28,]),'VOID':([6,16,30,62,],[11,11,11,11,]),'ID':([1,3,7,9,10,11,12,13,14,15,21,27,28,32,34,35,39,41,43,44,46,49,51,53,55,58,63,64,66,67,68,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,151,162,171,174,177,179,180,183,184,185,189,190,],[-2,4,-74,-90,-89,-94,19,-91,-92,-93,29,19,-106,54,-73,57,-56,-63,-58,54,-59,-62,-74,-60,-57,54,-61,98,98,98,-6,98,98,98,-25,98,98,-18,98,-39,-38,-33,98,-34,-51,98,-50,-53,-49,-48,-52,-43,98,-44,98,-19,-12,98,-106,-106,-4,-8,98,-10,-9,-7,-20,]),'RBRACKET':([7,28,32,34,39,41,43,44,46,49,51,52,53,55,63,65,68,107,151,155,162,173,174,177,179,180,184,185,189,190,],[-74,-106,-106,-73,-56,-63,-58,-106,-59,-62,-72,68,-60,-57,-61,-71,-6,153,-19,-83,-12,-82,-106,-106,-4,-8,-10,-9,-7,-20,]),'COMMA':([19,30,36,38,57,62,75,76,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,117,120,124,125,127,133,138,141,143,144,149,157,158,160,161,163,164,165,168,176,188,],[27,-106,-86,62,-85,-106,62,-100,115,-101,-106,-102,-104,-22,-106,-96,-105,-106,115,-97,-24,-95,-103,-23,-99,-106,-106,-98,147,-37,-41,-30,-32,-55,-47,-42,-46,-29,-27,-64,-26,-21,-40,-31,-54,-45,-28,147,183,183,]),'CTESTRING':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[94,94,94,94,94,94,-25,94,94,-18,94,-39,-38,-33,94,-34,-51,94,-50,-53,-49,-48,-52,-43,94,-44,94,94,94,]),'PLUS':([76,80,82,83,84,85,87,88,90,91,92,93,94,95,96,97,98,100,138,141,143,144,149,157,158,164,165,],[-100,-101,-102,-104,-22,121,-96,-105,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-42,-46,-29,-27,-64,-26,-21,-45,-28,]),'ELSE':([68,174,],[-6,178,]),'FLOAT':([6,16,30,62,],[9,9,9,9,]),'WHILE':([7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[-74,-106,50,-73,-56,-63,-58,50,-59,-62,-74,-60,-57,50,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'PROGRAM':([0,],[1,]),'CPPCOMMENT':([7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[-74,-106,41,-73,-56,-63,-58,41,-59,-62,-74,-60,-57,41,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'CTEINT':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[76,76,76,76,76,76,-25,76,76,-18,76,-39,-38,-33,76,-34,-51,76,-50,-53,-49,-48,-52,-43,76,-44,76,76,76,]),'MORETHAN':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,134,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'ISEQUALTO':([76,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,138,141,143,144,149,157,158,161,164,165,],[-100,-101,-102,-104,-22,-106,-96,-105,128,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-42,-46,-29,-27,-64,-26,-21,-31,-45,-28,]),'MAIN':([5,7,8,17,18,28,34,59,73,109,153,156,],[-106,-74,-106,-80,23,-106,-73,-106,-79,-106,-81,-78,]),'IF':([7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[-74,-106,45,-73,-56,-63,-58,45,-59,-62,-74,-60,-57,45,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'LSQBRACKET':([54,98,150,],[69,142,171,]),'BOOL':([6,16,30,62,],[14,14,14,14,]),'EQUALS':([54,104,],[70,150,]),'CHAR':([6,16,30,62,],[13,13,13,13,]),'$end':([2,31,68,],[0,-1,-6,]),'RETURN':([7,28,34,39,41,43,44,46,49,51,53,55,58,63,65,68,72,151,162,174,177,179,180,184,185,189,190,],[-74,-106,-73,-56,-63,-58,-106,-59,-62,-72,-60,-57,-106,-61,-71,-6,108,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'SEMICOLON':([4,19,20,25,26,33,40,76,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,100,105,108,117,120,124,125,126,127,133,138,141,143,144,149,154,157,158,160,161,163,164,165,187,],[5,-106,28,-75,-77,-76,63,-100,-101,-106,-102,-104,-22,-106,-96,-105,-106,-97,-24,-95,-103,-23,-99,-106,-106,-98,151,155,-37,-41,-30,-32,162,-55,-47,-42,-46,-29,-27,-64,173,-26,-21,-40,-31,-54,-45,-28,190,]),'TRUE':([64,66,67,70,71,77,78,108,113,115,116,118,119,121,122,123,128,129,130,131,132,134,135,137,139,140,147,171,183,],[83,83,83,83,83,83,-25,83,83,-18,83,-39,-38,-33,83,-34,-51,83,-50,-53,-49,-48,-52,-43,83,-44,83,83,83,]),'AND':([76,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,124,125,127,133,138,141,143,144,149,157,158,161,163,164,165,],[-100,-101,119,-102,-104,-22,-106,-96,-105,-106,-98,-97,-24,-95,-103,-23,-99,-106,-106,-98,-30,-32,-55,-47,-42,-46,-29,-27,-64,-26,-21,-31,-54,-45,-28,]),'RPAREN':([30,36,38,57,60,61,62,67,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,110,111,112,114,117,120,124,125,127,133,136,138,141,143,144,146,148,149,157,158,159,160,161,163,164,165,168,169,170,175,],[37,-86,-106,-85,74,-88,-106,-106,-106,-100,-106,-101,-106,-102,-104,-22,-106,126,-96,-105,-106,-98,-97,-24,-95,-103,-23,-99,-106,-106,145,-98,-106,-67,149,152,-87,157,-17,-14,-37,-41,-30,-32,-55,-47,-15,-42,-46,-29,-27,-69,-106,-64,-26,-21,-16,-40,-31,-54,-45,-28,-106,-70,-66,-68,]),'COMMENT':([7,28,32,34,39,41,43,44,46,49,51,53,55,58,63,68,151,162,174,177,179,180,184,185,189,190,],[-74,-106,49,-73,-56,-63,-58,49,-59,-62,-74,-60,-57,49,-61,-6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'leftparen':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'listafuncargs':([101,168,],[148,175,]),'llamafunc':([32,44,58,64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[40,40,40,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'comaexpresion':([176,188,],[182,191,]),'escritura':([32,44,58,],[46,46,46,]),'main':([18,],[24,]),'checarparams':([148,],[170,]),'funcaux':([16,],[22,]),'ciclo':([32,44,58,],[43,43,43,]),'programa':([0,],[2,]),'idfunc':([32,44,58,64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'listaprint':([64,113,],[86,159,]),'empty':([5,8,19,28,30,32,38,44,58,59,62,67,75,79,81,85,89,90,97,98,101,109,145,148,152,168,174,176,177,178,188,],[7,17,26,7,36,51,61,51,51,17,36,102,61,112,120,125,127,112,141,143,146,17,167,169,167,146,180,181,185,185,181,]),'retorno':([72,],[107,]),'masbloque':([174,],[179,]),'varcte':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'vars':([5,28,32,44,58,],[8,34,53,53,53,]),'ctefloat':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'condicion':([32,44,58,],[55,55,55,]),'ctechar':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'cteint':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'addQTD':([97,],[139,]),'varid':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'masid':([19,],[25,]),'prog':([0,],[3,]),'expcompcontinuo':([89,],[133,]),'factor':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'masargs':([38,75,],[60,110,]),'bloque':([24,166,172,186,],[31,174,177,189,]),'termino':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[85,85,85,85,85,85,85,85,85,85,85,164,85,85,85,]),'expresion':([64,66,67,70,71,77,108,113,116,147,171,183,],[79,99,101,105,106,111,154,79,160,168,176,188,]),'masexp':([85,],[124,]),'bloquefunc':([37,74,],[59,109,]),'tipo':([6,16,30,62,],[12,21,35,35,]),'addQPP':([79,90,],[113,113,]),'arr':([98,],[144,]),'funcargs':([67,],[103,]),'print':([32,44,58,],[42,42,42,]),'estatuto':([32,44,58,],[44,44,44,]),'asignacion':([32,44,58,],[39,39,39,]),'masprint':([79,90,],[114,136,]),'gotoF':([145,152,],[166,172,]),'masexpresion':([81,],[117,]),'rightparen':([111,],[158,]),'ctestring':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[90,100,100,100,100,100,100,90,100,100,100,100,100,100,100,]),'while':([32,44,58,],[56,56,56,]),'addQPAO':([81,],[116,]),'masestatuto':([32,44,58,],[52,65,72,]),'expcomp':([64,66,67,70,71,77,108,113,116,129,147,171,183,],[81,81,81,81,81,81,81,81,81,163,81,81,81,]),'funcs':([8,59,109,],[18,73,156,]),'goto':([177,178,],[184,186,]),'addQPPM':([85,],[122,]),'listaid':([12,27,],[20,33,]),'exp':([64,66,67,70,71,77,108,113,116,122,129,147,171,183,],[89,89,89,89,89,89,89,89,89,161,89,89,89,89,]),'masterminos':([97,],[138,]),'args':([30,62,],[38,75,]),'addQPComp':([89,],[129,]),'ctebool':([64,66,67,70,71,77,108,113,116,122,129,139,147,171,183,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',190),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',196),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',211),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',217),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',221),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',227),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',230),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',231),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',233),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',240),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',245),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',249),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',252),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',256),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',257),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',261),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',262),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',265),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',270),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',271),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',277),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',278),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',279),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',280),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',283),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',287),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',291),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',295),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',296),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',299),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',302),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',303),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',307),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',308),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',313),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',314),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',317),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',320),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',321),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',326),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',327),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',331),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',334),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',335),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',340),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',341),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',345),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',348),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',349),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',350),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',351),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',352),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',353),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',358),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',359),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',363),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',364),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',365),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',366),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',367),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',368),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',369),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',370),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',373),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',385),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',401),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',402),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',405),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',406),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',409),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',416),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',417),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',420),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',421),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',424),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',429),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',430),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',433),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',434),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',435),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',438),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',441),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',442),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',465),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',474),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',475),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',482),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',483),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',486),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',487),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',488),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',489),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',490),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',491),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',496),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',497),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',498),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',499),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',500),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',503),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',507),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',511),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',515),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',519),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',520),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',528),
]
