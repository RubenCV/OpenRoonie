
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B88BDFA178451B5D506F816CAE065063'
    
_lr_action_items = {'AND':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,73,74,81,82,87,88,125,126,127,128,132,152,156,],[-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,92,-53,-61,-52,-48,-36,-38,-60,-28,-23,-51,-37,-72,-30,]),'MAIN':([5,7,8,16,17,22,23,29,61,135,158,175,189,190,],[-120,-120,-82,-120,-3,-94,32,-120,-81,-120,-93,-120,-95,-92,]),'RSQBRACKET':([34,35,37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,68,69,73,74,81,82,87,88,94,95,121,125,126,127,128,129,130,131,132,133,152,154,155,156,165,171,],[66,-120,-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-120,-87,-89,-53,-61,-52,-48,-36,-38,-47,-43,-88,-60,-28,-23,-51,-120,-33,156,-37,-46,-72,-35,-32,-30,183,-34,]),'FLOAT':([6,21,62,138,],[9,9,9,9,]),'BOOL':([6,21,62,138,],[14,14,14,14,]),'OR':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,73,74,81,82,87,88,125,126,127,128,132,152,156,],[-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,93,-53,-61,-52,-48,-36,-38,-60,-28,-23,-51,-37,-72,-30,]),'MORETHANEQUAL':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,72,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'STRING':([6,21,62,138,],[11,11,11,11,]),'CTECHAR':([25,39,42,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[50,-27,50,50,-54,-58,-55,-56,-57,50,-59,-49,50,-50,50,-40,-39,50,-44,-45,50,50,50,50,50,50,50,50,50,50,-20,50,]),'$end':([2,65,148,],[0,-1,-9,]),'NOTEQUAL':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,76,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'PRINT':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,112,-82,-65,-64,112,-66,-63,-69,-67,-70,-62,112,-68,-9,-120,-21,-120,-15,-8,112,112,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,112,-10,]),'LPAREN':([25,30,36,39,42,49,63,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,105,108,109,112,114,117,119,141,142,143,145,146,151,153,172,177,179,195,],[39,62,70,-27,39,-73,-98,39,-54,-58,-55,-56,-57,39,-59,-49,39,-50,39,-40,-39,39,-44,-45,39,141,142,-73,-16,-14,146,147,39,39,39,39,39,39,39,39,39,-20,39,]),'CTESTRING':([25,39,42,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[46,-27,46,46,-54,-58,-55,-56,-57,46,-59,-49,46,-50,46,-40,-39,46,-44,-45,46,46,46,46,46,46,46,46,46,46,-20,46,]),'SEMICOLON':([4,18,19,20,27,28,37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,73,74,81,82,87,88,94,95,113,125,126,127,128,132,133,152,156,164,172,176,185,188,202,],[5,-86,-120,29,-91,-83,-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-84,-120,-90,-85,-53,-61,-52,-48,-36,-38,-47,-43,144,-60,-28,-23,-51,-37,-46,-72,-30,182,187,191,197,198,206,]),'MORETHAN':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,71,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'FALSE':([25,39,42,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[48,-27,48,48,-54,-58,-55,-56,-57,48,-59,-49,48,-50,48,-40,-39,48,-44,-45,48,48,48,48,48,48,48,48,48,48,-20,48,]),'COMMA':([18,19,35,37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,66,73,74,81,82,87,88,94,95,97,100,123,125,126,127,128,129,130,132,133,136,138,152,156,159,162,170,],[-86,26,67,-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-84,-120,-120,-85,-53,-61,-52,-48,-36,-38,-47,-43,-100,138,151,-60,-28,-23,-51,153,-33,-37,-46,-99,-120,-72,-30,138,179,151,]),'IF':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,117,-82,-65,-64,117,-66,-63,-69,-67,-70,-62,117,-68,-9,-120,-21,-120,-15,-8,117,117,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,117,-10,]),'READ':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,119,-82,-65,-64,119,-66,-63,-69,-67,-70,-62,119,-68,-9,-120,-21,-120,-15,-8,119,119,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,119,-10,]),'VAR':([5,8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[6,-82,6,-81,6,-82,-65,-64,6,-66,-63,-69,-67,-70,-62,6,-68,-9,-120,-21,-120,-15,-8,6,6,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,6,-10,]),'LESSTHAN':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,75,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'LBRACKET':([32,33,98,160,181,184,193,194,196,204,209,210,],[-4,64,134,134,-120,-120,-8,64,64,-12,-120,64,]),'RBRACKET':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,120,140,144,148,173,181,182,184,187,191,193,194,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,-120,-80,-65,-64,-120,-66,-63,-69,-67,-70,-62,148,-79,-68,-9,189,-120,-21,-120,-97,-15,-8,-120,-120,-71,-96,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,-120,-10,]),'EQUALS':([18,109,183,],[25,143,195,]),'COMMENT':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,110,-82,-65,-64,110,-66,-63,-69,-67,-70,-62,110,-68,-9,-120,-21,-120,-15,-8,110,110,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,110,-10,]),'ISEQUALTO':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,77,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'CTEFLOAT':([25,39,42,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[45,-27,45,45,-54,-58,-55,-56,-57,45,-59,-49,45,-50,45,-40,-39,45,-44,-45,45,45,45,45,45,45,45,45,45,45,-20,45,]),'TRUE':([25,39,42,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[47,-27,47,47,-54,-58,-55,-56,-57,47,-59,-49,47,-50,47,-40,-39,47,-44,-45,47,47,47,47,47,47,47,47,47,47,-20,47,]),'TIMES':([37,40,41,43,45,46,47,48,49,50,51,52,53,54,56,57,126,127,152,156,],[-113,-25,-109,83,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-111,-110,-28,-23,-72,-30,]),'DIVIDE':([37,40,41,43,45,46,47,48,49,50,51,52,53,54,56,57,126,127,152,156,],[-113,-25,-109,85,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-111,-110,-28,-23,-72,-30,]),'WHILE':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,114,-82,-65,-64,114,-66,-63,-69,-67,-70,-62,114,-68,-9,-120,-21,-120,-15,-8,114,114,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,114,-10,]),'FUNCTION':([5,7,8,16,17,29,61,135,175,189,],[-120,-120,-82,21,-3,-120,-81,21,21,-95,]),'ID':([1,3,8,9,10,11,12,13,14,15,25,26,29,31,39,42,61,64,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,99,101,102,103,104,106,107,110,111,116,118,134,141,142,143,144,145,146,147,148,151,153,172,177,179,181,182,184,191,193,194,195,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[4,-2,-82,-104,-108,-107,18,-105,-106,-103,49,18,-120,63,-27,49,-81,109,49,-54,-58,-55,-56,-57,49,-59,-49,49,-50,49,-40,-39,49,-44,-45,49,136,-82,-65,-64,109,-66,-63,-69,-67,-70,-62,109,49,49,49,-68,49,49,167,-9,49,49,49,49,-20,-120,-21,-120,-15,-8,109,49,109,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,109,-10,]),'CPPCOMMENT':([8,29,61,64,101,102,103,104,106,107,110,111,116,118,134,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,116,-82,-65,-64,116,-66,-63,-69,-67,-70,-62,116,-68,-9,-120,-21,-120,-15,-8,116,116,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,116,-10,]),'LSQBRACKET':([18,44,49,109,115,],[24,86,-31,-31,145,]),'MINUS':([37,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,126,127,128,152,156,],[-113,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,89,-111,-110,-52,-48,-28,-23,-51,-72,-30,]),'LESSTHANEQUAL':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,87,88,126,127,128,132,152,156,],[-113,79,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-52,-48,-36,-38,-28,-23,-51,-37,-72,-30,]),'INT':([6,21,62,138,],[15,15,15,15,]),'ELSE':([8,29,61,102,103,106,107,110,111,116,118,144,148,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,-65,-64,-66,-63,-69,-67,-70,-62,-68,-9,-120,-21,-120,-15,-8,-120,-120,-71,-6,-7,-120,209,-12,-13,-22,-5,-11,-120,-120,-10,]),'PLUS':([37,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,81,82,126,127,128,152,156,],[-113,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,90,-111,-110,-52,-48,-28,-23,-51,-72,-30,]),'VOID':([6,21,62,138,],[10,10,10,10,]),'RPAREN':([37,38,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,62,70,73,74,80,81,82,87,88,94,95,97,100,122,123,124,125,126,127,128,132,133,136,137,138,139,149,150,152,156,159,161,162,163,166,167,168,169,170,174,178,180,186,192,],[-113,-120,-25,-109,-120,-115,-117,-118,-119,-29,-116,-24,-112,-26,-114,-120,-111,-110,-120,98,-120,-53,-61,126,-52,-48,-36,-38,-47,-43,-100,-120,-75,-120,152,-60,-28,-23,-51,-37,-46,-99,-102,-120,160,-77,-120,-72,-30,-120,176,-120,181,184,185,-74,-78,-120,-101,-19,-17,-76,-18,]),'CTEINT':([24,25,39,42,67,70,71,72,75,76,77,78,79,83,84,85,86,89,90,91,92,93,96,141,142,143,145,146,151,153,172,177,179,195,],[35,54,-27,54,35,54,-54,-58,-55,-56,-57,54,-59,-49,54,-50,54,-40,-39,54,-44,-45,54,54,54,54,54,54,54,54,54,54,-20,54,]),'RETURN':([8,29,61,101,102,103,104,106,107,110,111,116,118,134,140,144,148,157,181,182,184,191,193,194,196,197,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,-80,-65,-64,-120,-66,-63,-69,-67,-70,-62,-120,-79,-68,-9,172,-120,-21,-120,-15,-8,-120,-120,-71,-6,-7,-120,-120,-12,-13,-22,-5,-11,-120,-120,-10,]),'CHAR':([6,21,62,138,],[13,13,13,13,]),'PROGRAM':([0,],[3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'idfunc':([25,42,64,70,78,84,86,91,96,104,134,141,142,143,145,146,151,153,172,177,194,195,196,210,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'vars':([5,29,64,104,134,194,196,210,],[7,61,111,111,111,111,111,111,]),'expdimvar':([86,145,153,],[129,129,129,]),'exp':([25,42,70,78,86,91,96,141,142,143,145,146,151,153,172,177,195,],[38,38,38,38,38,132,38,38,38,38,38,38,38,38,38,38,38,]),'escritura':([64,104,134,194,196,210,],[102,102,102,102,102,102,]),'prog':([0,],[1,]),'termino':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[55,55,55,55,128,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'goto':([201,209,],[205,210,]),'funcs':([16,135,175,],[23,158,190,]),'masid':([19,],[28,]),'args':([62,138,],[100,159,]),'dimsvar':([86,145,153,],[131,165,171,]),'lectura':([64,104,134,194,196,210,],[106,106,106,106,106,106,]),'condicion':([64,104,134,194,196,210,],[107,107,107,107,107,107,]),'main':([23,],[33,]),'llamafunc':([25,42,64,70,78,84,86,91,96,104,134,141,142,143,145,146,151,153,172,177,194,195,196,210,],[53,53,113,53,53,53,53,53,53,113,113,53,53,53,53,53,53,53,53,53,113,53,113,113,]),'addQPAO':([59,],[96,]),'checarparams':([150,],[168,]),'masestatuto':([64,104,134,],[120,140,157,]),'eramain':([7,],[16,]),'dims':([24,67,],[34,121,]),'bloque':([33,194,196,210,],[65,200,200,200,]),'idarray':([25,42,64,70,78,84,86,91,96,104,134,141,142,143,145,146,151,153,172,177,194,195,196,210,],[44,44,115,44,44,44,44,44,44,115,115,44,44,44,44,44,44,44,44,44,115,44,115,115,]),'ctechar':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'tipo':([6,21,62,138,],[12,31,99,99,]),'masprint':([162,],[180,]),'while':([64,104,134,194,196,210,],[108,108,108,108,108,108,]),'addQPComp':([38,],[78,]),'masterminos':([43,],[82,]),'expcomp':([25,42,70,78,86,96,141,142,143,145,146,151,153,172,177,195,],[59,59,59,125,59,59,59,59,59,59,59,59,59,59,59,59,]),'listaprint':([141,177,],[161,192,]),'addQPP':([162,],[177,]),'bloquefunc':([98,160,],[135,175,]),'ctebool':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'empty':([5,7,16,19,29,35,38,43,55,59,62,64,70,100,104,123,129,134,135,138,150,159,162,170,175,181,184,194,196,201,203,209,210,],[8,17,22,27,8,69,74,81,88,94,97,101,122,137,101,149,154,101,22,97,169,137,178,149,22,193,193,8,8,204,208,204,8,]),'asignacion':([64,104,134,194,196,210,],[118,118,118,118,118,118,]),'varid':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'estatutobloque':([194,196,210,],[201,203,211,]),'gotoF':([181,184,],[194,196,]),'cteint':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'leftparen':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'factor':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expcompcontinuo':([38,],[73,]),'estatuto':([64,104,134,194,196,210,],[104,104,104,199,199,199,]),'listafuncargs':([123,170,],[150,186,]),'masargs':([100,159,],[139,174,]),'initvar':([12,26,],[19,19,]),'masbloque':([203,],[207,]),'rightparen':([80,],[127,]),'funcargs':([70,],[124,]),'ctefloat':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'masdimsvar':([129,],[155,]),'varcte':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ctestring':([25,42,70,78,84,86,91,96,141,142,143,145,146,151,153,172,177,195,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'addQTD':([43,],[84,]),'ciclo':([64,104,134,194,196,210,],[103,103,103,103,103,103,]),'retorno':([157,],[173,]),'addQPPM':([55,],[91,]),'funcaux':([21,],[30,]),'masexp':([55,],[87,]),'masexpresion':([59,],[95,]),'print':([64,104,134,194,196,210,],[105,105,105,105,105,105,]),'masdims':([35,],[68,]),'listaid':([12,26,],[20,60,]),'expresion':([25,42,70,86,96,141,142,143,145,146,151,153,172,177,195,],[58,80,123,130,133,162,163,164,130,166,170,130,188,162,202,]),'programa':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',196),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',202),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',207),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',219),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',225),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',229),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',230),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',233),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',239),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',242),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',243),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',246),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',253),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',258),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',262),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',265),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',269),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',273),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',274),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',277),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',282),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',283),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',304),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',305),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',306),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',307),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',310),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',314),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',318),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',319),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',328),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',332),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',335),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',378),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',379),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',382),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',385),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',386),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',390),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',391),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',396),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',397),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',400),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',403),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',404),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',409),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',410),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',414),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',417),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',418),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',423),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',424),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',428),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',431),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',432),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',433),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',441),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',442),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',446),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',447),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',448),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',457),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',461),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',474),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',490),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',491),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',495),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',496),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',499),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',509),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',510),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',513),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',514),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',517),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',520),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',521),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',522),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',542),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',546),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',547),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',550),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',551),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',554),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',555),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',556),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',559),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',562),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',563),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',586),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',595),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',596),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',603),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',604),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',607),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',608),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',609),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',610),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',611),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',612),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',617),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',618),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',619),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',620),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',621),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',624),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',628),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',632),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',636),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',640),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',641),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',649),
]
