
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B5261BF049C0D53A08E100BE7772C575'
    
_lr_action_items = {'EQUALS':([18,101,173,],[24,137,188,]),'COMMA':([18,20,34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,59,64,68,71,74,77,81,86,89,91,93,118,119,121,122,123,124,125,127,128,129,131,146,148,152,153,161,167,169,],[-86,28,-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-120,-24,-120,-84,-120,-115,-118,95,-120,-36,-38,-43,-47,-53,-61,-48,-52,-85,146,-100,-28,-23,-37,149,-33,-46,-60,-51,155,-120,-99,-30,-72,177,146,155,]),'READ':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,97,-62,97,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,97,-21,-120,-120,-71,-15,-8,97,97,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,97,-10,]),'FUNCTION':([5,6,8,16,17,26,60,143,184,196,],[-120,-82,-120,-3,22,-120,-81,22,22,-95,]),'SEMICOLON':([4,18,19,20,27,29,34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,61,68,71,74,77,81,86,89,91,93,103,121,122,123,127,128,129,152,153,159,172,175,182,195,198,],[5,-86,26,-120,-91,-83,-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-120,-24,-120,-84,-120,-115,-118,-90,-36,-38,-43,-47,-53,-61,-48,-52,-85,139,-28,-23,-37,-46,-60,-51,-30,-72,174,187,189,194,203,204,]),'INT':([7,22,64,146,],[9,9,9,9,]),'BOOL':([7,22,64,146,],[10,10,10,10,]),'DIVIDE':([34,35,36,38,41,42,43,44,45,46,47,48,51,54,55,56,121,122,152,153,],[-111,-119,-25,-117,-29,-26,-109,-113,-112,-114,-116,-110,-24,90,-115,-118,-28,-23,-30,-72,]),'TRUE':([24,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,136,137,140,141,142,149,155,176,177,182,188,],[56,56,-27,-39,-40,56,56,-44,-45,56,-54,-56,-55,-57,56,-59,-58,-49,56,-50,56,56,56,56,56,56,56,56,56,-20,56,56,]),'CTEINT':([24,25,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,95,136,137,140,141,142,149,155,176,177,182,188,],[46,59,46,-27,-39,-40,46,46,-44,-45,46,-54,-56,-55,-57,46,-59,-58,-49,46,-50,46,59,46,46,46,46,46,46,46,46,-20,46,46,]),'PLUS':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,54,55,56,89,91,121,122,129,152,153,],[-111,-119,-25,-117,67,-29,-26,-109,-113,-112,-114,-116,-110,-24,-120,-115,-118,-48,-52,-28,-23,-51,-30,-72,]),'PROGRAM':([0,],[1,]),'MINUS':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,54,55,56,89,91,121,122,129,152,153,],[-111,-119,-25,-117,69,-29,-26,-109,-113,-112,-114,-116,-110,-24,-120,-115,-118,-48,-52,-28,-23,-51,-30,-72,]),'FALSE':([24,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,136,137,140,141,142,149,155,176,177,182,188,],[35,35,-27,-39,-40,35,35,-44,-45,35,-54,-56,-55,-57,35,-59,-58,-49,35,-50,35,35,35,35,35,35,35,35,35,-20,35,35,]),'LESSTHANEQUAL':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,84,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'CHAR':([7,22,64,146,],[14,14,14,14,]),'MAIN':([5,6,8,16,17,21,23,26,60,143,164,184,196,197,],[-120,-82,-120,-3,-120,30,-94,-120,-81,-120,-93,-120,-95,-92,]),'AND':([34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,54,55,56,68,71,81,86,89,91,121,122,123,128,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,73,-24,-120,-120,-115,-118,-36,-38,-53,-61,-48,-52,-28,-23,-37,-60,-51,-30,-72,]),'WHILE':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,110,-62,110,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,110,-21,-120,-120,-71,-15,-8,110,110,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,110,-10,]),'LPAREN':([24,32,37,41,50,57,65,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,97,101,105,107,108,110,114,136,137,140,141,142,149,155,176,177,182,188,],[50,64,50,-73,-27,92,-98,-39,-40,50,50,-44,-45,50,-54,-56,-55,-57,50,-59,-58,-49,50,-50,50,134,-73,140,-16,141,-14,142,50,50,50,50,50,50,50,50,-20,50,50,]),'LESSTHAN':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,80,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'ISEQUALTO':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,82,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'CTEFLOAT':([24,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,136,137,140,141,142,149,155,176,177,182,188,],[55,55,-27,-39,-40,55,55,-44,-45,55,-54,-56,-55,-57,55,-59,-58,-49,55,-50,55,55,55,55,55,55,55,55,55,-20,55,55,]),'IF':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,114,-62,114,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,114,-21,-120,-120,-71,-15,-8,114,114,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,114,-10,]),'ELSE':([6,26,60,98,104,106,111,112,113,115,116,135,139,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,-62,-70,-63,-65,-69,-66,-64,-67,-9,-68,-21,-120,-120,-71,-15,-8,-120,-120,-120,-6,-7,209,-22,-12,-13,-11,-5,-120,-120,-10,]),'MORETHAN':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,78,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'FLOAT':([7,22,64,146,],[11,11,11,11,]),'RSQBRACKET':([34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,54,55,56,58,59,68,71,74,77,81,86,89,91,94,96,121,122,123,124,125,126,127,128,129,133,150,151,152,153,158,168,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-120,-24,-120,-120,-115,-118,93,-120,-36,-38,-43,-47,-53,-61,-48,-52,-87,-89,-28,-23,-37,-120,-33,152,-46,-60,-51,-88,-32,-35,-30,-72,173,-34,]),'ID':([1,3,6,9,10,11,12,13,14,15,24,26,28,33,37,50,60,62,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,98,102,104,106,109,111,112,113,115,116,120,134,135,136,137,139,140,141,142,144,149,155,174,176,177,180,181,182,187,188,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-2,4,-82,-103,-106,-104,18,-107,-105,-108,41,-120,18,65,41,-27,-81,101,-39,-40,41,41,-44,-45,41,-54,-56,-55,-57,41,-59,-58,-49,41,-50,41,-62,101,-70,-63,-82,-65,-69,-66,-64,-67,148,157,-9,41,41,-68,41,41,41,101,41,41,-21,41,-20,-120,-120,41,-71,41,-15,-8,101,101,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,101,-10,]),'LBRACKET':([30,31,117,166,180,181,191,192,193,205,209,210,],[-4,62,144,144,-120,-120,-8,62,62,-12,-120,62,]),'CPPCOMMENT':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,104,-62,104,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,104,-21,-120,-120,-71,-15,-8,104,104,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,104,-10,]),'CTESTRING':([24,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,136,137,140,141,142,149,155,176,177,182,188,],[38,38,-27,-39,-40,38,38,-44,-45,38,-54,-56,-55,-57,38,-59,-58,-49,38,-50,38,38,38,38,38,38,38,38,38,-20,38,38,]),'VAR':([5,6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[7,-82,7,-81,7,-62,7,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,7,-21,-120,-120,-71,-15,-8,7,7,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,7,-10,]),'CTECHAR':([24,37,50,67,69,70,72,73,75,76,78,79,80,82,83,84,85,87,88,90,92,136,137,140,141,142,149,155,176,177,182,188,],[47,47,-27,-39,-40,47,47,-44,-45,47,-54,-56,-55,-57,47,-59,-58,-49,47,-50,47,47,47,47,47,47,47,47,47,-20,47,47,]),'OR':([34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,54,55,56,68,71,81,86,89,91,121,122,123,128,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,75,-24,-120,-120,-115,-118,-36,-38,-53,-61,-48,-52,-28,-23,-37,-60,-51,-30,-72,]),'STRING':([7,22,64,146,],[13,13,13,13,]),'RBRACKET':([6,26,60,62,98,99,102,104,106,109,111,112,113,115,116,135,138,139,174,180,181,183,187,189,191,192,193,194,199,200,201,202,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,-120,-62,135,-120,-70,-63,-80,-65,-69,-66,-64,-67,-9,-79,-68,-21,-120,-120,196,-71,-15,-8,-120,-120,-97,-120,-6,-7,-120,-96,-22,-12,-13,-11,-5,-120,-120,-10,]),'VOID':([7,22,64,146,],[15,15,15,15,]),'PRINT':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,107,-62,107,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,107,-21,-120,-120,-71,-15,-8,107,107,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,107,-10,]),'RPAREN':([34,35,36,38,39,41,42,43,44,45,46,47,48,49,51,52,54,55,56,64,66,68,71,74,77,81,86,89,91,92,118,119,121,122,123,127,128,129,130,131,132,145,146,147,148,152,153,154,156,157,160,161,162,163,167,169,170,171,178,179,185,186,190,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-120,-24,-120,-120,-115,-118,117,121,-36,-38,-43,-47,-53,-61,-48,-52,-120,-120,-100,-28,-23,-37,-46,-60,-51,153,-120,-75,166,-120,-102,-99,-30,-72,-77,-120,172,175,-120,180,181,-120,-120,-78,-74,-17,-19,-101,-76,-18,]),'TIMES':([34,35,36,38,41,42,43,44,45,46,47,48,51,54,55,56,121,122,152,153,],[-111,-119,-25,-117,-29,-26,-109,-113,-112,-114,-116,-110,-24,87,-115,-118,-28,-23,-30,-72,]),'NOTEQUAL':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,79,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'MORETHANEQUAL':([34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,54,55,56,68,71,89,91,121,122,123,129,152,153,],[-111,-119,-25,-117,-120,-29,-26,-109,-113,-112,-114,-116,-110,-24,85,-120,-115,-118,-36,-38,-48,-52,-28,-23,-37,-51,-30,-72,]),'RETURN':([6,26,60,98,102,104,106,109,111,112,113,115,116,135,138,139,144,165,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,-62,-120,-70,-63,-80,-65,-69,-66,-64,-67,-9,-79,-68,-120,182,-21,-120,-120,-71,-15,-8,-120,-120,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,-120,-10,]),'LSQBRACKET':([18,40,41,100,101,],[25,72,-31,136,-31,]),'COMMENT':([6,26,60,62,98,102,104,106,109,111,112,113,115,116,135,139,144,174,180,181,187,189,191,192,193,199,200,201,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,112,-62,112,-70,-63,-82,-65,-69,-66,-64,-67,-9,-68,112,-21,-120,-120,-71,-15,-8,112,112,-120,-6,-7,-120,-22,-12,-13,-11,-5,-120,112,-10,]),'$end':([2,63,135,],[0,-1,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[2,]),'args':([64,146,],[118,167,]),'funcaux':([22,],[32,]),'addQPComp':([52,],[83,]),'print':([62,102,144,192,193,210,],[105,105,105,105,105,105,]),'leftparen':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'idarray':([24,37,62,70,72,76,83,88,92,102,136,137,140,141,142,144,149,155,176,182,188,192,193,210,],[40,40,100,40,40,40,40,40,40,100,40,40,40,40,40,100,40,40,40,40,40,100,100,100,]),'masprint':([161,],[178,]),'llamafunc':([24,37,62,70,72,76,83,88,92,102,136,137,140,141,142,144,149,155,176,182,188,192,193,210,],[42,42,103,42,42,42,42,42,42,103,42,42,42,42,42,103,42,42,42,42,42,103,103,103,]),'goto':([199,209,],[206,210,]),'listaprint':([140,176,],[160,190,]),'empty':([5,8,17,20,26,39,49,52,54,59,62,64,92,102,118,124,131,143,144,146,156,161,167,169,180,181,184,192,193,199,202,209,210,],[6,16,23,27,6,71,77,86,91,96,109,119,132,109,147,151,154,23,109,119,170,179,147,154,191,191,23,6,6,205,207,205,6,]),'addQPPM':([39,],[70,]),'addQPAO':([49,],[76,]),'main':([21,],[31,]),'bloquefunc':([117,166,],[143,184,]),'expcomp':([24,37,72,76,83,92,136,137,140,141,142,149,155,176,182,188,],[49,49,49,49,128,49,49,49,49,49,49,49,49,49,49,49,]),'condicion':([62,102,144,192,193,210,],[106,106,106,106,106,106,]),'bloque':([31,192,193,210,],[63,201,201,201,]),'funcargs':([92,],[130,]),'masdims':([59,],[94,]),'retorno':([165,],[183,]),'while':([62,102,144,192,193,210,],[108,108,108,108,108,108,]),'factor':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'listaid':([12,28,],[19,61,]),'ctebool':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'escritura':([62,102,144,192,193,210,],[111,111,111,111,111,111,]),'masdimsvar':([124,],[150,]),'initvar':([12,28,],[20,20,]),'asignacion':([62,102,144,192,193,210,],[98,98,98,98,98,98,]),'lectura':([62,102,144,192,193,210,],[113,113,113,113,113,113,]),'expdimvar':([72,136,149,],[124,124,124,]),'checarparams':([156,],[171,]),'funcs':([17,143,184,],[21,164,197,]),'addQPP':([161,],[176,]),'ctechar':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'listafuncargs':([131,169,],[156,186,]),'varid':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'masestatuto':([62,102,144,],[99,138,165,]),'prog':([0,],[3,]),'varcte':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'eramain':([8,],[17,]),'estatuto':([62,102,144,192,193,210,],[102,102,102,200,200,200,]),'dimsvar':([72,136,149,],[126,158,168,]),'masterminos':([54,],[89,]),'tipo':([7,22,64,146,],[12,33,120,120,]),'rightparen':([66,],[122,]),'ctestring':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'termino':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[39,39,39,39,39,39,129,39,39,39,39,39,39,39,39,39,39,39,]),'ctefloat':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'masid':([20,],[29,]),'dims':([25,95,],[58,133,]),'expcompcontinuo':([52,],[81,]),'exp':([24,37,70,72,76,83,92,136,137,140,141,142,149,155,176,182,188,],[52,52,123,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'cteint':([24,37,70,72,76,83,88,92,136,137,140,141,142,149,155,176,182,188,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'masexpresion':([49,],[74,]),'estatutobloque':([192,193,210,],[199,202,211,]),'idfunc':([24,37,62,70,72,76,83,88,92,102,136,137,140,141,142,144,149,155,176,182,188,192,193,210,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'masexp':([39,],[68,]),'addQTD':([54,],[88,]),'gotoF':([180,181,],[192,193,]),'masbloque':([202,],[208,]),'masargs':([118,167,],[145,185,]),'expresion':([24,37,72,76,92,136,137,140,141,142,149,155,176,182,188,],[53,66,125,127,131,125,159,161,162,163,125,169,161,195,198,]),'vars':([5,26,62,102,144,192,193,210,],[8,60,116,116,116,116,116,116,]),'ciclo':([62,102,144,192,193,210,],[115,115,115,115,115,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',197),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',203),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',208),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',220),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',226),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',230),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',231),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',234),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',240),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',243),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',244),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',247),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',254),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',259),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',263),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',266),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',270),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',274),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',275),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',278),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',283),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',284),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',305),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',306),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',307),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',308),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',311),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',315),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',319),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',320),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',329),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',333),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',336),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',379),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',380),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',383),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',386),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',387),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',391),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',392),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',397),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',398),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',401),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',404),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',405),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',410),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',411),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',415),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',418),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',419),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',424),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',425),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',429),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',432),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',433),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',437),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',442),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',443),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',447),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',448),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',455),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',458),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',462),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',475),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',491),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',492),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',496),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',497),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',500),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',510),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',511),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',514),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',515),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',518),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',521),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',522),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',523),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',543),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',547),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',548),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',551),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',552),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',555),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',556),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',557),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',560),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',563),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',564),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',587),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',596),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',597),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',604),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',605),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',608),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',609),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',610),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',611),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',612),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',613),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',618),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',619),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',620),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',621),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',622),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',625),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',629),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',633),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',637),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',641),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',642),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',650),
]
