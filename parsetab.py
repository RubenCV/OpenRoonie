
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D5EB6A5355147024B400B571AA328D34'
    
_lr_action_items = {'LPAREN':([19,24,36,38,43,52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[25,-62,52,53,55,66,66,66,66,-19,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MAIN':([5,6,7,9,11,31,48,51,61,90,],[-83,-83,-56,-61,20,-83,-55,-5,-83,-60,]),'PLUS':([62,63,64,65,67,70,71,72,74,75,76,77,78,81,82,83,85,92,93,118,119,124,125,126,127,139,140,144,],[-83,-80,97,-76,-77,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-21,-23,-38,-36,-35,-37,-16,-20,-22,]),'RSQBRACKET':([56,62,63,64,65,67,69,70,72,74,75,76,77,78,79,81,82,83,85,92,93,96,98,104,107,113,114,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,144,151,153,155,156,158,],[87,-83,-80,-83,-76,-77,-83,-81,-73,-82,-79,-72,-18,-78,-83,-74,-17,-83,-75,-83,-39,-28,-83,-47,-40,-34,-31,144,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-42,-41,-43,-45,-46,-44,-16,-20,-33,-32,-22,-83,-30,157,-83,-29,]),'LSQBRACKET':([44,83,122,],[56,117,147,]),'FUNCTION':([5,6,7,31,48,51,61,],[-83,10,-56,-83,-55,-5,10,]),'CTESTRING':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[63,63,63,63,-19,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'EQUALS':([44,87,],[57,122,]),'AND':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,79,81,82,83,85,92,93,96,98,104,107,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,144,],[-83,-80,-83,-76,-77,-83,-81,-75,-73,-82,-79,-72,-18,-78,115,-74,-17,-83,-75,-83,-39,-28,-83,-47,-40,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-42,-41,-43,-45,-46,-44,-16,-20,-22,]),'ELSE':([51,145,],[-5,149,]),'PRINT':([7,27,31,37,39,40,41,42,45,46,48,51,123,143,145,146,148,150,152,159,],[-56,36,-83,-52,-50,-49,36,-48,-56,-51,-55,-5,-14,-9,-83,-8,-4,-7,-6,-15,]),'RPAREN':([25,33,34,49,58,59,60,62,63,64,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,93,96,98,99,101,104,107,110,111,113,114,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,],[-83,50,-64,-83,-83,-63,-66,-83,-80,-83,-76,-77,-83,-83,-81,-75,-73,-82,-79,-72,-18,-78,-83,116,-74,-17,-83,120,-75,121,-65,-83,-39,-28,-83,-13,-10,-47,-40,-11,140,-34,-31,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-12,-42,-41,-43,-45,-46,-44,-16,-20,-33,-32,-22,]),'TIMES':([62,63,65,67,70,71,72,74,75,76,77,78,81,82,83,85,118,119,139,140,144,],[94,-80,-76,-77,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-21,-23,-16,-20,-22,]),'TRUE':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[70,70,70,70,-19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'MORETHANEQUAL':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,106,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'FALSE':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[74,74,74,74,-19,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'SEMICOLON':([4,22,23,28,30,47,62,63,64,65,67,69,70,72,74,75,76,77,78,79,81,82,83,85,88,92,93,96,98,104,107,113,114,116,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,144,157,],[5,-83,31,-59,-57,-58,-83,-80,-83,-76,-77,-83,-81,-73,-82,-79,-72,-18,-78,-83,-74,-17,-83,-75,123,-83,-39,-28,-83,-47,-40,-34,-31,143,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-42,-41,-43,-45,-46,-44,-16,-20,-33,-32,-22,159,]),'LESSTHANEQUAL':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,108,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'PROGRAM':([0,],[2,]),'WHILE':([7,27,31,37,39,40,41,42,45,46,48,51,123,143,145,146,148,150,152,159,],[-56,43,-83,-52,-50,-49,43,-48,-56,-51,-55,-5,-14,-9,-83,-8,-4,-7,-6,-15,]),'OR':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,79,81,82,83,85,92,93,96,98,104,107,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,144,],[-83,-80,-83,-76,-77,-83,-81,-75,-73,-82,-79,-72,-18,-78,112,-74,-17,-83,-75,-83,-39,-28,-83,-47,-40,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-42,-41,-43,-45,-46,-44,-16,-20,-22,]),'$end':([3,26,51,],[0,-1,-5,]),'LESSTHAN':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,102,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'IF':([7,27,31,37,39,40,41,42,45,46,48,51,123,143,145,146,148,150,152,159,],[-56,38,-83,-52,-50,-49,38,-48,-56,-51,-55,-5,-14,-9,-83,-8,-4,-7,-6,-15,]),'MINUS':([62,63,64,65,67,70,71,72,74,75,76,77,78,81,82,83,85,92,93,118,119,124,125,126,127,139,140,144,],[-83,-80,95,-76,-77,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-21,-23,-38,-36,-35,-37,-16,-20,-22,]),'STRING':([8,10,25,58,],[13,13,13,13,]),'CHAR':([8,10,25,58,],[16,16,16,16,]),'CTECHAR':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[75,75,75,75,-19,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'DIVIDE':([62,63,65,67,70,71,72,74,75,76,77,78,81,82,83,85,118,119,139,140,144,],[91,-80,-76,-77,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-21,-23,-16,-20,-22,]),'MORETHAN':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,103,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'VAR':([5,7,27,31,37,39,40,41,42,45,46,48,51,123,143,145,146,148,150,152,159,],[8,-56,8,8,-52,-50,-49,8,-48,-56,-51,-55,-5,-14,-9,-83,-8,-4,-7,-6,-15,]),'INT':([8,10,25,58,],[12,12,12,12,]),'CTEFLOAT':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[78,78,78,78,-19,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RBRACKET':([7,27,31,35,37,39,40,41,42,45,46,48,51,54,123,143,145,146,148,150,152,159,],[-56,-83,-83,51,-52,-50,-49,-83,-48,-54,-51,-55,-5,-53,-14,-9,-83,-8,-4,-7,-6,-15,]),'NOTEQUAL':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,105,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'COMMA':([22,49,62,63,64,65,67,68,69,70,71,72,74,75,76,77,78,79,81,82,83,85,92,93,96,98,104,107,113,114,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,144,151,156,],[29,58,-83,-80,-83,-76,-77,100,-83,-81,100,-73,-82,-79,-72,-18,-78,-83,-74,-17,-83,-75,-83,-39,-28,-83,-47,-40,-34,-31,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-42,-41,-43,-45,-46,-44,-16,-20,-33,-32,-22,154,154,]),'LBRACKET':([20,21,50,120,121,149,],[-3,27,27,27,27,27,]),'ID':([1,2,7,12,13,14,15,16,17,18,27,29,31,32,37,39,40,41,42,45,46,48,51,52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,123,143,145,146,147,148,150,152,154,159,],[4,-2,-56,-67,-71,-68,-70,-69,22,24,44,22,-83,49,-52,-50,-49,44,-48,-56,-51,-55,-5,83,83,83,83,-19,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-14,-9,-83,-8,83,-4,-7,-6,83,-15,]),'FLOAT':([8,10,25,58,],[14,14,14,14,]),'ISEQUALTO':([62,63,64,65,67,69,70,71,72,74,75,76,77,78,81,82,83,85,92,93,96,98,118,119,124,125,126,127,128,129,130,131,139,140,144,],[-83,-80,-83,-76,-77,109,-81,-75,-73,-82,-79,-72,-18,-78,-74,-17,-83,-75,-83,-39,-28,-83,-21,-23,-38,-36,-35,-37,-27,-26,-25,-24,-16,-20,-22,]),'BOOL':([8,10,25,58,],[15,15,15,15,]),'CTEINT':([52,53,55,57,66,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[67,67,67,67,-19,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'factor':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'varcte':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'addquadrupletimesdivide':([92,],[126,]),'masestatuto':([27,41,],[35,54,]),'ciclo':([27,41,],[39,39,]),'comaexpresion':([151,156,],[155,158,]),'exp':([52,53,55,57,73,95,97,100,102,103,105,106,108,109,112,115,147,154,],[69,69,69,69,69,128,129,69,133,134,135,136,137,138,69,69,69,69,]),'prog':([0,],[1,]),'arr':([83,],[118,]),'programa':([0,],[3,]),'vars':([5,27,31,41,],[6,37,48,37,]),'ctebool':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'ctefloat':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'condicion':([27,41,],[40,40,]),'masexpresion':([79,],[114,]),'cteint':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'varid':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'bloque':([21,50,120,121,149,],[26,61,145,146,152,]),'expcomp':([52,53,55,57,73,100,112,115,147,154,],[79,79,79,79,79,79,141,142,79,79,]),'rightparen':([111,],[139,]),'asignacion':([27,41,],[42,42,]),'expcompcontinuo':([69,],[107,]),'escritura':([27,41,],[46,46,]),'ctechar':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'expresion':([52,53,55,57,73,100,147,154,],[68,84,86,88,111,68,151,156,]),'masterminos':([62,],[92,]),'ctestring':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[71,85,85,85,85,85,85,85,85,71,85,85,85,85,85,85,85,85,85,85,]),'tipo':([8,10,25,58,],[17,18,32,32,]),'listaid':([17,29,],[23,47,]),'masprint':([68,71,],[101,110,]),'masid':([22,],[30,]),'addquadrupleplusminus':([98,],[131,]),'args':([25,58,],[33,89,]),'main':([11,],[21,]),'termino':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[64,64,64,64,64,124,127,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'funcaux':([10,],[19,]),'leftparen':([52,53,55,57,73,91,94,95,97,100,102,103,105,106,108,109,112,115,147,154,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'masexp':([64,],[98,]),'estatuto':([27,41,],[41,41,]),'masbloque':([145,],[148,]),'empty':([5,6,22,25,27,31,41,49,58,61,62,64,68,69,71,79,83,92,98,145,151,156,],[7,9,28,34,45,7,45,60,34,9,93,96,99,104,99,113,119,125,130,150,153,153,]),'listaprint':([52,100,],[80,132,]),'funcs':([6,61,],[11,90,]),'masargs':([49,],[59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',121),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',124),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',129),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',134),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',137),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',140),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',141),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',144),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',147),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',150),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',151),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',154),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',155),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',158),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',159),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',162),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',163),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',164),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',167),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',171),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',175),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',179),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',180),
  ('exp -> termino masexp addquadrupleplusminus','exp',3,'p_exp','OpenRoonie.py',183),
  ('addquadrupleplusminus -> empty','addquadrupleplusminus',1,'p_addquadrupleplusminus','OpenRoonie.py',186),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',194),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',195),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',196),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',201),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',202),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',205),
  ('masexpresion -> AND expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',208),
  ('masexpresion -> OR expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',209),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',210),
  ('termino -> factor masterminos addquadrupletimesdivide','termino',3,'p_termino','OpenRoonie.py',213),
  ('addquadrupletimesdivide -> empty','addquadrupletimesdivide',1,'p_addquadrupletimesdivide','OpenRoonie.py',216),
  ('masterminos -> TIMES termino','masterminos',2,'p_masterminos','OpenRoonie.py',224),
  ('masterminos -> DIVIDE termino','masterminos',2,'p_masterminos','OpenRoonie.py',225),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',226),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',231),
  ('expcompcontinuo -> MORETHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',234),
  ('expcompcontinuo -> LESSTHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',235),
  ('expcompcontinuo -> NOTEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',236),
  ('expcompcontinuo -> ISEQUALTO exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',237),
  ('expcompcontinuo -> MORETHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',238),
  ('expcompcontinuo -> LESSTHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',239),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',240),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',243),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',244),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',245),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',246),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',247),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',250),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',251),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',254),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',255),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',258),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',262),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',263),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',268),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',269),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',272),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',277),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',278),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',282),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',283),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',286),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',287),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',288),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',289),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',290),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',295),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',296),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',297),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',298),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',299),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',302),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',306),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',310),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',314),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',318),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',319),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',327),
]
