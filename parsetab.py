
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9967144D9666FF915074F7C05D7F2494'
    
_lr_action_items = {'SEMICOLON':([4,19,20,25,26,33,50,75,77,78,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,99,106,109,110,112,120,121,124,125,129,132,136,138,148,152,155,159,160,161,162,163,164,184,],[5,-104,28,-75,-73,-74,66,-104,-95,-104,-94,-98,-93,-102,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,142,153,-62,-42,-46,-37,-41,-27,-29,-47,-55,-30,-32,169,171,-45,-40,-26,-21,-28,-54,-31,187,]),'RSQBRACKET':([64,75,77,78,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,109,110,112,120,121,124,125,126,129,132,136,138,155,159,160,161,162,163,164,174,178,179,185,188,],[100,-104,-95,-104,-94,-98,-93,-102,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,-62,-42,-46,-37,-41,-27,-29,162,-47,-55,-30,-32,-45,-40,-26,-21,-28,-54,-31,-104,184,-36,-104,-35,]),'COMMA':([19,29,36,38,57,58,72,75,76,77,78,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,101,103,109,110,112,120,121,124,125,129,132,136,138,155,156,159,160,161,162,163,164,174,185,],[27,-104,-84,58,-83,-104,58,-104,115,-95,-104,-94,-98,-93,-102,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,147,147,-62,-42,-46,-37,-41,-27,-29,-47,-55,-30,-32,-45,115,-40,-26,-21,-28,-54,-31,180,180,]),'BOOL':([6,16,29,58,],[9,9,9,9,]),'LESSTHANEQUAL':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,133,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'$end':([3,31,68,],[0,-1,-6,]),'CTESTRING':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[95,95,95,95,95,95,-25,95,-44,95,-43,95,95,-39,-38,-52,95,-50,-49,-53,-48,-51,95,-33,-34,95,-18,95,95,]),'ISEQUALTO':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,135,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'LBRACKET':([23,24,35,73,141,150,165,166,170,176,182,186,],[-3,32,56,56,-104,-104,-5,32,32,-9,-104,32,]),'CHAR':([6,16,29,58,],[12,12,12,12,]),'STRING':([6,16,29,58,],[13,13,13,13,]),'OR':([75,77,78,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,129,132,136,138,155,160,161,162,163,164,],[-104,-95,119,-94,-98,-93,-102,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-47,-55,-30,-32,-45,-26,-21,-28,-54,-31,]),'RETURN':([8,28,34,39,41,42,45,48,53,54,56,66,68,69,71,142,169,173,175,176,177,181,183,187,189,],[-72,-104,-71,-59,-56,-70,-58,-57,-104,-60,-104,-61,-6,-69,106,-19,-12,-104,-104,-9,-10,-4,-8,-20,-7,]),'RBRACKET':([8,28,32,34,39,41,42,45,48,52,53,54,66,68,69,105,142,153,169,171,173,175,176,177,181,183,187,189,],[-72,-104,-104,-71,-59,-56,-70,-58,-57,68,-104,-60,-61,-6,-69,151,-19,-81,-12,-80,-104,-104,-9,-10,-4,-8,-20,-7,]),'AND':([75,77,78,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,129,132,136,138,155,160,161,162,163,164,],[-104,-95,122,-94,-98,-93,-102,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-47,-55,-30,-32,-45,-26,-21,-28,-54,-31,]),'LPAREN':([21,30,40,43,44,46,47,49,51,61,62,63,65,67,81,86,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[29,-82,61,62,-13,-11,-63,65,67,88,88,88,88,88,88,-63,-25,88,-44,88,-43,88,88,-39,-38,-52,88,-50,-49,-53,-48,-51,88,-33,-34,88,-18,88,88,]),'LSQBRACKET':([47,86,143,],[64,126,167,]),'CTECHAR':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[91,91,91,91,91,91,-25,91,-44,91,-43,91,91,-39,-38,-52,91,-50,-49,-53,-48,-51,91,-33,-34,91,-18,91,91,]),'NOTEQUAL':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,130,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'FALSE':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[97,97,97,97,97,97,-25,97,-44,97,-43,97,97,-39,-38,-52,97,-50,-49,-53,-48,-51,97,-33,-34,97,-18,97,97,]),'FLOAT':([6,16,29,58,],[14,14,14,14,]),'TIMES':([75,77,79,80,82,83,85,86,89,90,91,92,93,95,96,97,103,109,124,125,160,161,162,],[114,-95,-94,-98,-93,-102,-23,-104,-22,-24,-100,-99,-96,-101,-97,-103,-96,-62,-27,-29,-26,-21,-28,]),'PRINT':([8,28,32,34,39,41,42,45,48,53,54,56,66,68,142,169,173,175,176,177,181,183,187,189,],[-72,-104,44,-71,-59,-56,-72,-58,-57,44,-60,44,-61,-6,-19,-12,-104,-104,-9,-10,-4,-8,-20,-7,]),'EQUALS':([47,100,],[63,143,]),'FUNCTION':([5,7,8,28,34,55,108,151,],[-104,16,-72,-104,-71,16,16,-79,]),'LESSTHAN':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,131,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'MINUS':([75,77,79,80,82,83,85,86,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,155,160,161,162,],[-104,-95,-94,-98,-93,-102,-23,-104,-22,-24,-100,-99,-96,140,-101,-97,-103,-96,-62,-42,-46,-27,-29,-45,-26,-21,-28,]),'MORETHAN':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,134,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'MORETHANEQUAL':([75,77,79,80,82,83,85,86,87,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,136,138,155,160,161,162,164,],[-104,-95,-94,-98,-93,-102,-23,-104,127,-22,-24,-100,-99,-96,-104,-101,-97,-103,-96,-62,-42,-46,-27,-29,-30,-32,-45,-26,-21,-28,-31,]),'VAR':([5,8,28,32,34,39,41,42,45,48,53,54,56,66,68,142,169,173,175,176,177,181,183,187,189,],[6,-72,6,6,-71,-59,-56,-72,-58,-57,6,-60,6,-61,-6,-19,-12,-104,-104,-9,-10,-4,-8,-20,-7,]),'CTEINT':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[80,80,80,80,80,80,-25,80,-44,80,-43,80,80,-39,-38,-52,80,-50,-49,-53,-48,-51,80,-33,-34,80,-18,80,80,]),'ELSE':([68,175,],[-6,182,]),'WHILE':([8,28,32,34,39,41,42,45,48,53,54,56,66,68,142,169,173,175,176,177,181,183,187,189,],[-72,-104,46,-71,-59,-56,-72,-58,-57,46,-60,46,-61,-6,-19,-12,-104,-104,-9,-10,-4,-8,-20,-7,]),'PLUS':([75,77,79,80,82,83,85,86,89,90,91,92,93,94,95,96,97,103,109,110,112,124,125,155,160,161,162,],[-104,-95,-94,-98,-93,-102,-23,-104,-22,-24,-100,-99,-96,139,-101,-97,-103,-96,-62,-42,-46,-27,-29,-45,-26,-21,-28,]),'MAIN':([5,7,8,17,18,28,34,55,70,108,151,154,],[-104,-104,-72,-78,23,-104,-71,-104,-77,-104,-79,-76,]),'PROGRAM':([0,],[1,]),'ID':([1,2,8,9,10,11,12,13,14,15,22,27,28,32,34,37,39,41,42,45,48,53,54,56,61,62,63,65,66,67,68,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,142,144,147,167,169,173,175,176,177,180,181,183,187,189,],[-2,4,-72,-90,-92,19,-89,-91,-88,-87,30,19,-104,47,-71,57,-59,-56,-72,-58,-57,47,-60,47,86,86,86,86,-61,86,-6,86,-25,86,-44,86,-43,86,86,-39,-38,-52,86,-50,-49,-53,-48,-51,86,-33,-34,-19,86,-18,86,-12,-104,-104,-9,-10,86,-4,-8,-20,-7,]),'RPAREN':([29,36,38,57,58,59,60,61,72,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,109,110,112,116,117,120,121,123,124,125,129,132,136,138,145,146,149,155,156,157,158,159,160,161,162,163,164,168,172,],[35,-84,-104,-83,-104,-86,73,-104,-104,109,-104,-104,-95,-104,-94,-98,-93,-102,-65,-23,-104,-104,-22,-24,-100,-99,-96,-104,-101,-97,-103,141,-104,148,-96,150,-85,-62,-42,-46,-67,-104,-37,-41,160,-27,-29,-47,-55,-30,-32,-14,-17,-15,-45,-104,-68,-64,-40,-26,-21,-28,-54,-31,-16,-66,]),'DIVIDE':([75,77,79,80,82,83,85,86,89,90,91,92,93,95,96,97,103,109,124,125,160,161,162,],[111,-95,-94,-98,-93,-102,-23,-104,-22,-24,-100,-99,-96,-101,-97,-103,-96,-62,-27,-29,-26,-21,-28,]),'IF':([8,28,32,34,39,41,42,45,48,53,54,56,66,68,142,169,173,175,176,177,181,183,187,189,],[-72,-104,51,-71,-59,-56,-72,-58,-57,51,-60,51,-61,-6,-19,-12,-104,-104,-9,-10,-4,-8,-20,-7,]),'INT':([6,16,29,58,],[15,15,15,15,]),'CTEFLOAT':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[92,92,92,92,92,92,-25,92,-44,92,-43,92,92,-39,-38,-52,92,-50,-49,-53,-48,-51,92,-33,-34,92,-18,92,92,]),'VOID':([6,16,29,58,],[10,10,10,10,]),'TRUE':([61,62,63,65,67,81,88,106,111,113,114,115,118,119,122,127,128,130,131,133,134,135,137,139,140,144,147,167,180,],[83,83,83,83,83,83,-25,83,-44,83,-43,83,83,-39,-38,-52,83,-50,-49,-53,-48,-51,83,-33,-34,83,-18,83,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,28,32,53,56,],[7,34,54,54,54,]),'factor':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expresion':([61,62,63,65,67,81,106,115,118,144,167,180,],[76,98,99,101,104,123,152,156,159,101,174,185,]),'masid':([19,],[26,]),'empty':([5,7,19,28,29,32,38,53,55,56,58,61,72,75,76,78,86,87,94,101,103,108,117,141,150,156,173,174,175,182,185,],[8,17,25,8,36,42,59,42,17,42,36,84,59,112,116,121,125,132,138,146,146,17,157,165,165,116,176,179,183,176,179,]),'prog':([0,],[2,]),'listaprint':([65,144,],[102,168,]),'masbloque':([175,],[181,]),'funcaux':([16,],[21,]),'ciclo':([32,53,56,],[45,45,45,]),'cteint':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'programa':([0,],[3,]),'varid':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'asignacion':([32,53,56,],[41,41,41,]),'exp':([61,62,63,65,67,81,106,115,118,128,137,144,167,180,],[87,87,87,87,87,87,87,87,87,87,164,87,87,87,]),'condicion':([32,53,56,],[48,48,48,]),'masprint':([101,103,],[145,149,]),'llamafunc':([32,53,56,61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[50,50,50,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'expcomp':([61,62,63,65,67,81,106,115,118,128,144,167,180,],[78,78,78,78,78,78,78,78,78,163,78,78,78,]),'rightparen':([123,],[161,]),'main':([18,],[24,]),'addQPAO':([78,],[118,]),'comaexpresion':([174,185,],[178,188,]),'expcompcontinuo':([87,],[129,]),'tipo':([6,16,29,58,],[11,22,37,37,]),'arr':([86,],[124,]),'funcs':([7,55,108,],[18,70,154,]),'checarparams':([117,],[158,]),'listaid':([11,27,],[20,33,]),'funcargs':([61,],[74,]),'ctebool':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'escritura':([32,53,56,],[39,39,39,]),'addQPComp':([87,],[128,]),'ctechar':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'print':([32,53,56,],[49,49,49,]),'ctefloat':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'while':([32,53,56,],[43,43,43,]),'retorno':([71,],[105,]),'gotoF':([141,150,],[166,170,]),'ctestring':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[93,93,93,103,93,93,93,93,93,93,93,93,103,93,93,]),'leftparen':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'goto':([173,182,],[177,186,]),'estatuto':([32,53,56,],[53,53,53,]),'varcte':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'listafuncargs':([76,156,],[117,172,]),'idfunc':([32,53,56,61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'masestatuto':([32,53,56,],[52,69,71,]),'masargs':([38,72,],[60,107,]),'masterminos':([75,],[110,]),'addQPPM':([94,],[137,]),'bloque':([24,166,170,186,],[31,173,175,189,]),'masexpresion':([78,],[120,]),'addQPP':([101,103,],[144,144,]),'termino':([61,62,63,65,67,81,106,113,115,118,128,137,144,167,180,],[94,94,94,94,94,94,94,155,94,94,94,94,94,94,94,]),'bloquefunc':([35,73,],[55,108,]),'args':([29,58,],[38,72,]),'addQTD':([75,],[113,]),'masexp':([94,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',174),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',180),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',195),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',203),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',207),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',214),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',217),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',218),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',220),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',227),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',232),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',236),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',239),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',243),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',244),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',248),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',249),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',252),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',257),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',258),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',264),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',265),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',266),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',267),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',270),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',274),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',278),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',282),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',283),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',286),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',289),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',290),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',294),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',295),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',300),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',301),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',304),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',307),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',308),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',313),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',314),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',318),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',321),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',322),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',327),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',328),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',332),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',335),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',336),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',337),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',338),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',339),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',340),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',345),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',346),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',350),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',351),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',352),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',353),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',354),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',355),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',358),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',367),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',381),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',382),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',385),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',386),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',389),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',396),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',397),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',400),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',401),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',404),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',409),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',410),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',413),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',414),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',415),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',418),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',421),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',422),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',440),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',446),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',447),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',454),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',455),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',458),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',459),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',460),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',461),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',462),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',463),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',468),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',469),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',470),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',471),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',472),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',475),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',479),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',483),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',487),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',491),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',492),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',500),
]
