
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EC4052CF583D80DBC3A364EF27E0CFB7'
    
_lr_action_items = {'CHAR':([6,23,65,147,],[9,9,9,9,]),'MORETHAN':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,85,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'$end':([2,62,140,],[0,-1,-9,]),'RBRACKET':([7,29,61,63,97,99,100,102,108,109,110,113,114,115,116,136,140,142,172,173,175,183,187,188,189,190,192,194,198,199,200,201,203,204,205,206,207,208,209,210,211,],[-82,-120,-81,-120,-62,-66,-65,-80,-63,140,-69,-120,-67,-64,-70,-68,-9,-79,-120,-21,-120,196,-120,-8,-71,-120,-15,-97,-120,-7,-6,-120,-96,-12,-13,-5,-120,-11,-22,-120,-10,]),'DIVIDE':([38,39,40,42,43,44,46,47,48,50,51,55,56,57,59,60,131,132,149,153,],[-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,-114,-112,-118,-117,92,-23,-28,-30,-72,]),'ID':([1,3,7,9,10,11,12,13,14,15,24,28,29,32,45,58,61,63,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,97,99,100,102,108,110,113,114,115,116,119,134,135,136,137,138,139,140,141,143,152,155,172,173,175,180,181,182,187,188,189,190,191,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-2,4,-82,-105,-106,-103,-107,-108,-104,19,19,39,-120,64,-27,39,-81,103,39,-40,-39,39,-45,39,-44,39,-55,-54,-56,-57,39,-59,-58,-50,39,-49,-62,-66,-65,-82,-63,-69,103,-67,-64,-70,145,39,39,-68,159,39,39,-9,39,103,39,39,-120,-21,-120,39,-20,39,103,-8,-71,103,39,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,103,-10,]),'LBRACKET':([30,31,117,166,172,175,187,188,190,204,207,210,],[-4,63,143,143,-120,-120,63,-8,63,-12,-120,63,]),'EQUALS':([19,103,176,],[28,135,191,]),'MAIN':([5,7,8,16,17,21,22,29,61,144,165,184,196,197,],[-120,-82,-120,-3,-120,30,-94,-120,-81,-120,-93,-120,-95,-92,]),'LPAREN':([28,33,39,45,53,58,64,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,98,101,103,105,106,111,112,134,135,138,139,141,152,155,180,181,182,191,],[45,65,-73,-27,81,45,-98,45,-40,-39,45,-45,45,-44,45,-55,-54,-56,-57,45,-59,-58,-50,45,-49,-16,134,-73,137,138,-14,141,45,45,45,45,45,45,45,45,-20,45,45,]),'MINUS':([37,38,39,40,42,43,44,46,47,48,50,51,55,56,57,59,60,94,96,131,132,133,149,153,],[72,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,-114,-112,-118,-117,-120,-52,-48,-23,-28,-51,-30,-72,]),'PRINT':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,98,-62,-66,-65,-82,-63,-69,98,-67,-64,-70,-68,-9,98,-120,-21,-120,98,-8,-71,98,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,98,-10,]),'AND':([37,38,39,40,42,43,44,46,47,48,49,50,51,54,55,56,57,59,60,71,74,83,84,94,96,122,130,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,80,-111,-119,-120,-114,-112,-118,-117,-120,-38,-36,-53,-61,-52,-48,-37,-60,-23,-28,-51,-30,-72,]),'SEMICOLON':([4,18,19,20,25,26,34,37,38,39,40,42,43,44,46,47,48,49,50,51,52,54,55,56,57,59,60,69,71,74,76,77,83,84,94,96,104,122,126,130,131,132,133,149,153,158,174,177,182,195,202,],[5,-120,-86,29,-91,-83,-90,-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-120,-111,-119,-84,-120,-114,-112,-118,-117,-120,-85,-38,-36,-43,-47,-53,-61,-52,-48,136,-37,-46,-60,-23,-28,-51,-30,-72,173,189,192,194,203,209,]),'FUNCTION':([5,7,8,16,17,29,61,144,184,196,],[-120,-82,-120,-3,23,-120,-81,23,23,-95,]),'PLUS':([37,38,39,40,42,43,44,46,47,48,50,51,55,56,57,59,60,94,96,131,132,133,149,153,],[73,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,-114,-112,-118,-117,-120,-52,-48,-23,-28,-51,-30,-72,]),'LSQBRACKET':([19,39,41,103,107,],[27,-31,75,-31,139,]),'PROGRAM':([0,],[1,]),'COMMA':([18,19,35,37,38,39,40,42,43,44,46,47,48,49,50,51,52,54,55,56,57,59,60,65,69,71,74,76,77,83,84,94,96,118,120,122,124,125,126,129,130,131,132,133,145,147,149,153,163,167,171,],[24,-86,66,-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-120,-111,-119,-84,-120,-114,-112,-118,-117,-120,-120,-85,-38,-36,-43,-47,-53,-61,-52,-48,-100,147,-37,152,-33,-46,155,-60,-23,-28,-51,-99,-120,-30,-72,181,147,155,]),'FLOAT':([6,23,65,147,],[14,14,14,14,]),'VAR':([5,7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[6,-82,6,-81,6,-62,-66,-65,-82,-63,-69,6,-67,-64,-70,-68,-9,6,-120,-21,-120,6,-8,-71,6,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,6,-10,]),'RSQBRACKET':([35,36,37,38,39,40,42,43,44,46,47,48,49,50,51,54,55,56,57,59,60,67,68,71,74,76,77,83,84,94,96,121,122,123,124,125,126,130,131,132,133,149,150,151,153,161,168,],[-120,69,-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-120,-111,-119,-120,-114,-112,-118,-117,-120,-89,-87,-38,-36,-43,-47,-53,-61,-52,-48,-88,-37,149,-120,-33,-46,-60,-23,-28,-51,-30,-35,-32,-72,176,-34,]),'RETURN':([7,29,61,97,99,100,102,108,110,113,114,115,116,136,140,142,143,164,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,-62,-66,-65,-80,-63,-69,-120,-67,-64,-70,-68,-9,-79,-120,182,-120,-21,-120,-120,-8,-71,-120,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,-120,-10,]),'RPAREN':([37,38,39,40,42,43,44,46,47,48,49,50,51,54,55,56,57,59,60,65,71,74,76,77,81,83,84,91,94,96,118,120,122,126,127,128,129,130,131,132,133,145,146,147,148,149,153,154,156,157,159,160,162,163,167,169,170,171,178,179,185,186,193,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-120,-111,-119,-120,-114,-112,-118,-117,-120,117,-38,-36,-43,-47,-120,-53,-61,132,-52,-48,-100,-120,-37,-46,-75,153,-120,-60,-23,-28,-51,-99,166,-120,-102,-30,-72,-120,-77,172,174,175,177,-120,-120,-78,-74,-120,-19,-17,-101,-76,-18,]),'NOTEQUAL':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,86,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'CTEFLOAT':([28,45,58,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[38,-27,38,38,-40,-39,38,-45,38,-44,38,-55,-54,-56,-57,38,-59,-58,-50,38,-49,38,38,38,38,38,38,38,38,-20,38,38,]),'TIMES':([38,39,40,42,43,44,46,47,48,50,51,55,56,57,59,60,131,132,149,153,],[-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,-114,-112,-118,-117,95,-23,-28,-30,-72,]),'BOOL':([6,23,65,147,],[10,10,10,10,]),'CTEINT':([27,28,45,58,66,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[35,55,-27,55,35,55,-40,-39,55,-45,55,-44,55,-55,-54,-56,-57,55,-59,-58,-50,55,-49,55,55,55,55,55,55,55,55,-20,55,55,]),'ISEQUALTO':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,87,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'LESSTHANEQUAL':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,89,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'READ':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,105,-62,-66,-65,-82,-63,-69,105,-67,-64,-70,-68,-9,105,-120,-21,-120,105,-8,-71,105,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,105,-10,]),'CTECHAR':([28,45,58,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[47,-27,47,47,-40,-39,47,-45,47,-44,47,-55,-54,-56,-57,47,-59,-58,-50,47,-49,47,47,47,47,47,47,47,47,-20,47,47,]),'LESSTHAN':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,82,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'IF':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,106,-62,-66,-65,-82,-63,-69,106,-67,-64,-70,-68,-9,106,-120,-21,-120,106,-8,-71,106,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,106,-10,]),'FALSE':([28,45,58,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[51,-27,51,51,-40,-39,51,-45,51,-44,51,-55,-54,-56,-57,51,-59,-58,-50,51,-49,51,51,51,51,51,51,51,51,-20,51,51,]),'COMMENT':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,110,-62,-66,-65,-82,-63,-69,110,-67,-64,-70,-68,-9,110,-120,-21,-120,110,-8,-71,110,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,110,-10,]),'WHILE':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,111,-62,-66,-65,-82,-63,-69,111,-67,-64,-70,-68,-9,111,-120,-21,-120,111,-8,-71,111,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,111,-10,]),'VOID':([6,23,65,147,],[13,13,13,13,]),'MORETHANEQUAL':([37,38,39,40,42,43,44,46,47,48,50,51,54,55,56,57,59,60,71,74,94,96,122,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,-111,-119,90,-114,-112,-118,-117,-120,-38,-36,-52,-48,-37,-23,-28,-51,-30,-72,]),'INT':([6,23,65,147,],[11,11,11,11,]),'OR':([37,38,39,40,42,43,44,46,47,48,49,50,51,54,55,56,57,59,60,71,74,83,84,94,96,122,130,131,132,133,149,153,],[-120,-115,-29,-113,-24,-26,-110,-109,-116,-25,78,-111,-119,-120,-114,-112,-118,-117,-120,-38,-36,-53,-61,-52,-48,-37,-60,-23,-28,-51,-30,-72,]),'ELSE':([7,29,61,97,99,100,108,110,114,115,116,136,140,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,-62,-66,-65,-63,-69,-67,-64,-70,-68,-9,-120,-21,-120,-120,-8,-71,-120,-15,-120,-7,-6,207,-12,-13,-5,-120,-11,-22,-120,-10,]),'STRING':([6,23,65,147,],[12,12,12,12,]),'CTESTRING':([28,45,58,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[59,-27,59,59,-40,-39,59,-45,59,-44,59,-55,-54,-56,-57,59,-59,-58,-50,59,-49,59,59,59,59,59,59,59,59,-20,59,59,]),'TRUE':([28,45,58,70,72,73,75,78,79,80,81,82,85,86,87,88,89,90,92,93,95,134,135,138,139,141,152,155,180,181,182,191,],[57,-27,57,57,-40,-39,57,-45,57,-44,57,-55,-54,-56,-57,57,-59,-58,-50,57,-49,57,57,57,57,57,57,57,57,-20,57,57,]),'CPPCOMMENT':([7,29,61,63,97,99,100,102,108,110,113,114,115,116,136,140,143,172,173,175,187,188,189,190,192,198,199,200,201,204,205,206,207,208,209,210,211,],[-82,-120,-81,116,-62,-66,-65,-82,-63,-69,116,-67,-64,-70,-68,-9,116,-120,-21,-120,116,-8,-71,116,-15,-120,-7,-6,-120,-12,-13,-5,-120,-11,-22,116,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'funcs':([17,144,184,],[21,165,197,]),'asignacion':([63,113,143,187,190,210,],[97,97,97,97,97,97,]),'estatutobloque':([187,190,210,],[198,201,211,]),'dimsvar':([75,139,152,],[123,161,168,]),'masdims':([35,],[68,]),'idfunc':([28,58,63,70,75,79,81,88,93,113,134,135,138,139,141,143,152,155,180,182,187,190,191,210,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'args':([65,147,],[120,167,]),'masterminos':([60,],[96,]),'lectura':([63,113,143,187,190,210,],[99,99,99,99,99,99,]),'ctefloat':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'listaid':([15,24,],[20,34,]),'tipo':([6,23,65,147,],[15,32,119,119,]),'prog':([0,],[3,]),'masexpresion':([49,],[76,]),'expcomp':([28,58,75,79,81,88,134,135,138,139,141,152,155,180,182,191,],[49,49,49,49,49,130,49,49,49,49,49,49,49,49,49,49,]),'expresion':([28,58,75,79,81,134,135,138,139,141,152,155,180,182,191,],[52,91,125,126,129,157,158,160,125,163,125,171,163,195,202,]),'addQPComp':([54,],[88,]),'masid':([18,],[26,]),'print':([63,113,143,187,190,210,],[112,112,112,112,112,112,]),'masestatuto':([63,113,143,],[109,142,164,]),'dims':([27,66,],[36,121,]),'checarparams':([154,],[170,]),'funcaux':([23,],[33,]),'masexp':([37,],[74,]),'masprint':([163,],[179,]),'leftparen':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'vars':([5,29,63,113,143,187,190,210,],[8,61,114,114,114,114,114,114,]),'factor':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'retorno':([164,],[183,]),'addQPPM':([37,],[70,]),'goto':([198,207,],[205,210,]),'masargs':([120,167,],[146,185,]),'bloque':([31,187,190,210,],[62,199,199,199,]),'programa':([0,],[2,]),'bloquefunc':([117,166,],[144,184,]),'eramain':([8,],[17,]),'termino':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[37,37,37,37,37,37,37,133,37,37,37,37,37,37,37,37,37,37,]),'listaprint':([141,180,],[162,193,]),'escritura':([63,113,143,187,190,210,],[100,100,100,100,100,100,]),'while':([63,113,143,187,190,210,],[101,101,101,101,101,101,]),'ctebool':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'idarray':([28,58,63,70,75,79,81,88,93,113,134,135,138,139,141,143,152,155,180,182,187,190,191,210,],[41,41,107,41,41,41,41,41,41,107,41,41,41,41,41,107,41,41,41,41,107,107,41,107,]),'empty':([5,8,17,18,29,35,37,49,54,60,63,65,81,113,120,124,129,143,144,147,154,163,167,171,172,175,184,187,190,198,201,207,210,],[7,16,22,25,7,67,71,77,84,94,102,118,127,102,148,150,156,102,22,118,169,178,148,156,188,188,22,7,7,204,208,204,7,]),'llamafunc':([28,58,63,70,75,79,81,88,93,113,134,135,138,139,141,143,152,155,180,182,187,190,191,210,],[43,43,104,43,43,43,43,43,43,104,43,43,43,43,43,104,43,43,43,43,104,104,43,104,]),'cteint':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'masdimsvar':([124,],[151,]),'main':([21,],[31,]),'rightparen':([91,],[131,]),'expcompcontinuo':([54,],[83,]),'varid':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'condicion':([63,113,143,187,190,210,],[108,108,108,108,108,108,]),'ctechar':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'initvar':([15,24,],[18,18,]),'addQPAO':([49,],[79,]),'funcargs':([81,],[128,]),'addQTD':([60,],[93,]),'varcte':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'exp':([28,58,70,75,79,81,88,134,135,138,139,141,152,155,180,182,191,],[54,54,122,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'listafuncargs':([129,171,],[154,186,]),'ctestring':([28,58,70,75,79,81,88,93,134,135,138,139,141,152,155,180,182,191,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'estatuto':([63,113,143,187,190,210,],[113,113,113,200,200,200,]),'expdimvar':([75,139,152,],[124,124,124,]),'addQPP':([163,],[180,]),'gotoF':([172,175,],[187,190,]),'ciclo':([63,113,143,187,190,210,],[115,115,115,115,115,115,]),'masbloque':([201,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',197),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',203),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',208),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',220),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',226),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',230),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',231),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',234),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',240),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',243),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',244),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',247),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',254),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',259),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',263),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',266),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',270),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',274),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',275),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',278),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',283),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',284),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',305),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',306),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',307),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',308),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',311),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',315),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',319),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',320),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',329),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',333),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',336),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',379),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',380),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',383),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',386),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',387),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',391),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',392),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',397),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',398),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',401),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',404),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',405),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',410),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',411),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',415),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',418),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',419),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',424),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',425),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',429),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',432),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',433),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',437),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',442),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',443),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',447),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',448),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',455),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',458),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',462),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',475),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',491),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',492),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',496),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',497),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',500),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',510),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',511),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',514),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',515),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',518),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',521),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',522),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',523),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',543),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',547),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',548),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',551),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',552),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',555),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',556),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',557),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',560),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',563),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',564),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',587),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',596),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',597),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',604),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',605),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',608),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',609),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',610),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',611),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',612),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',613),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',618),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',619),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',620),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',621),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',622),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',625),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',629),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',633),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',637),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',641),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',642),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',650),
]
