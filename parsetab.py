
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '334D0CC125A61BA9C0816BFF34C93FFF'
    
_lr_action_items = {'COMMENT':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,78,-78,78,-59,-60,-62,-64,-79,-66,-61,-67,-63,78,-65,-9,-113,-113,-22,-68,78,-8,-15,78,-6,-113,-7,-113,-113,-5,-11,-12,-13,78,-10,-23,]),'PRINT':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,68,-78,68,-59,-60,-62,-64,-79,-66,-61,-67,-63,68,-65,-9,-113,-113,-22,-68,68,-8,-15,68,-6,-113,-7,-113,-113,-5,-11,-12,-13,68,-10,-23,]),'VAR':([5,7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[8,-79,8,8,-78,8,-59,-60,-62,-64,-79,-66,-61,-67,-63,8,-65,-9,-113,-113,-22,-68,8,-8,-15,8,-6,-113,-7,-113,-113,-5,-11,-12,-13,8,-10,-23,]),'DIVIDE':([39,40,44,45,46,47,49,50,51,52,53,54,58,59,60,61,106,108,136,138,139,146,152,],[-108,-103,-109,-112,-25,-110,-106,102,-27,-111,-26,-113,-105,-107,-102,-104,-32,-30,-31,-24,-29,-105,-69,]),'LESSTHANEQUAL':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,88,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'SEMICOLON':([4,21,22,23,29,31,33,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,75,92,94,96,99,104,105,106,108,110,112,130,134,135,136,137,138,139,150,152,159,160,167,177,201,],[5,28,-113,-113,-82,-84,-80,-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-113,-81,-105,-107,-102,-104,-83,124,-58,-50,-33,-35,-45,-49,-32,-30,-40,-44,-57,-34,-48,-31,-43,-24,-29,169,-69,176,178,182,186,204,]),'RETURN':([7,28,38,67,71,72,73,76,77,78,79,80,84,118,121,124,126,142,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,-78,-113,-59,-60,-62,-64,-77,-66,-61,-67,-63,-113,-76,-65,-9,159,-113,-113,-22,-68,-113,-8,-15,-113,-6,-113,-7,-113,-113,-5,-11,-12,-13,-113,-10,-23,]),'OR':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,92,94,96,99,104,105,106,108,130,134,135,136,138,139,146,152,],[-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,109,-105,-107,-102,-104,-58,-50,-33,-35,-45,-49,-32,-30,-57,-34,-48,-31,-24,-29,-105,-69,]),'TRUE':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[52,-28,52,52,-54,-56,-53,-55,-52,-51,52,-36,-37,52,52,-47,-46,-42,52,-41,52,52,52,52,52,52,-21,52,52,52,]),'MORETHANEQUAL':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,90,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'ISEQUALTO':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,87,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'BOOL':([8,19,35,115,],[13,13,13,13,]),'RBRACKET':([7,28,37,38,67,71,72,73,76,77,78,79,80,82,84,121,124,126,158,161,168,169,176,178,179,180,182,183,186,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,-113,-78,-113,-59,-60,-62,-64,-77,-66,-61,-67,126,-63,-76,-65,-9,175,-113,-113,-22,-90,-68,-113,-8,-15,-113,-89,-6,-113,-7,-113,-113,-5,-11,-12,-13,-113,-10,-23,]),'FUNCTION':([5,6,7,9,10,28,38,119,157,175,],[-113,-113,-79,19,-3,-113,-78,19,19,-88,]),'MAIN':([5,6,7,9,10,18,20,28,38,119,143,157,174,175,],[-113,-113,-79,-113,-3,-87,27,-113,-78,-113,-86,-113,-85,-88,]),'VOID':([8,19,35,115,],[15,15,15,15,]),'CHAR':([8,19,35,115,],[11,11,11,11,]),'CPPCOMMENT':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,80,-78,80,-59,-60,-62,-64,-79,-66,-61,-67,-63,80,-65,-9,-113,-113,-22,-68,80,-8,-15,80,-6,-113,-7,-113,-113,-5,-11,-12,-13,80,-10,-23,]),'NOTEQUAL':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,89,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'COMMA':([22,23,29,35,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,63,66,92,94,96,99,104,105,106,108,110,112,115,120,130,133,134,135,136,137,138,139,140,146,147,152,171,191,202,],[-113,32,-82,-113,-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-113,-81,-105,-107,-102,-104,115,-93,-58,-50,-33,-35,-45,-49,-32,-30,-40,-44,-113,-92,-57,153,-34,-48,-31,-43,-24,-29,115,162,162,-69,153,199,199,]),'EQUALS':([22,85,151,],[30,128,170,]),'CTEINT':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[59,-28,59,59,-54,-56,-53,-55,-52,-51,59,-36,-37,59,59,-47,-46,-42,59,-41,59,59,59,59,59,59,-21,59,59,59,]),'LSQBRACKET':([54,85,170,],[107,129,184,]),'CTECHAR':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[44,-28,44,44,-54,-56,-53,-55,-52,-51,44,-36,-37,44,44,-47,-46,-42,44,-41,44,44,44,44,44,44,-21,44,44,44,]),'$end':([1,36,126,],[0,-1,-9,]),'CTEFLOAT':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[39,-28,39,39,-54,-56,-53,-55,-52,-51,39,-36,-37,39,39,-47,-46,-42,39,-41,39,39,39,39,39,39,-21,39,39,39,]),'LBRACKET':([26,27,64,141,161,168,179,180,183,192,195,200,],[37,-4,118,118,-113,-113,37,-8,37,-113,-12,37,]),'RSQBRACKET':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,92,94,96,99,104,105,106,107,108,110,112,129,130,134,135,136,137,138,139,152,191,197,198,202,205,],[-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-113,-105,-107,-102,-104,-58,-50,-33,-35,-45,-49,-32,136,-30,-40,-44,151,-57,-34,-48,-31,-43,-24,-29,-69,-113,-39,201,-113,-38,]),'TIMES':([39,40,44,45,46,47,49,50,51,52,53,54,58,59,60,61,106,108,136,138,139,146,152,],[-108,-103,-109,-112,-25,-110,-106,103,-27,-111,-26,-113,-105,-107,-102,-104,-32,-30,-31,-24,-29,-105,-69,]),'LPAREN':([25,30,34,42,43,54,56,68,69,70,74,81,83,85,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[35,43,-91,95,-28,-70,43,-16,122,123,-14,125,127,-70,43,-54,-56,-53,-55,-52,-51,43,-36,-37,43,43,-47,-46,-42,43,-41,43,43,43,43,43,43,-21,43,43,43,]),'STRING':([8,19,35,115,],[17,17,17,17,]),'MORETHAN':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,93,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'FALSE':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[45,-28,45,45,-54,-56,-53,-55,-52,-51,45,-36,-37,45,45,-47,-46,-42,45,-41,45,45,45,45,45,45,-21,45,45,45,]),'PROGRAM':([0,],[2,]),'CTESTRING':([30,43,56,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,123,125,127,128,153,159,162,163,184,199,],[47,-28,47,47,-54,-56,-53,-55,-52,-51,47,-36,-37,47,47,-47,-46,-42,47,-41,47,47,47,47,47,47,-21,47,47,47,]),'IF':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,70,-78,70,-59,-60,-62,-64,-79,-66,-61,-67,-63,70,-65,-9,-113,-113,-22,-68,70,-8,-15,70,-6,-113,-7,-113,-113,-5,-11,-12,-13,70,-10,-23,]),'AND':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,92,94,96,99,104,105,106,108,130,134,135,136,138,139,146,152,],[-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,113,-105,-107,-102,-104,-58,-50,-33,-35,-45,-49,-32,-30,-57,-34,-48,-31,-24,-29,-105,-69,]),'WHILE':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,74,-78,74,-59,-60,-62,-64,-79,-66,-61,-67,-63,74,-65,-9,-113,-113,-22,-68,74,-8,-15,74,-6,-113,-7,-113,-113,-5,-11,-12,-13,74,-10,-23,]),'INT':([8,19,35,115,],[12,12,12,12,]),'PLUS':([39,40,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,104,105,106,108,135,136,138,139,146,152,],[-108,-103,-109,-112,-25,-110,97,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-45,-49,-32,-30,-48,-31,-24,-29,-105,-69,]),'RPAREN':([35,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,63,66,92,94,95,96,99,104,105,106,108,110,112,114,115,116,117,120,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,152,154,155,156,164,165,166,171,172,173,181,185,],[64,-108,-103,-113,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-113,-105,-107,-102,-104,-113,-93,-58,-50,-113,-33,-35,-45,-49,-32,-30,-40,-44,139,-113,141,-95,-92,-57,152,-72,-113,-34,-48,-31,-43,-24,-29,-113,160,161,-105,-113,167,168,-69,-74,-113,-94,-20,-18,-17,-113,-75,-71,-19,-73,]),'READ':([7,28,37,38,67,71,72,73,76,77,78,79,80,84,118,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,69,-78,69,-59,-60,-62,-64,-79,-66,-61,-67,-63,69,-65,-9,-113,-113,-22,-68,69,-8,-15,69,-6,-113,-7,-113,-113,-5,-11,-12,-13,69,-10,-23,]),'ELSE':([7,28,38,71,72,73,76,78,79,80,84,124,126,161,168,169,178,179,180,182,183,187,188,189,190,192,193,194,195,196,200,203,204,],[-79,-113,-78,-59,-60,-62,-64,-66,-61,-67,-63,-65,-9,-113,-113,-22,-68,-113,-8,-15,-113,-6,192,-7,-113,-113,-5,-11,-12,-13,-113,-10,-23,]),'ID':([2,3,7,11,12,13,14,15,16,17,24,28,30,32,37,38,43,56,65,67,71,72,73,76,77,78,79,80,84,86,87,88,89,90,91,93,95,97,98,100,101,102,103,109,111,113,118,122,123,124,125,126,127,128,153,159,161,162,163,168,169,178,179,180,182,183,184,187,188,189,190,192,193,194,195,196,199,200,203,204,],[-2,4,-79,-98,-96,-99,22,-101,-97,-100,34,-113,54,22,85,-78,-28,54,120,85,-59,-60,-62,-64,-79,-66,-61,-67,-63,54,-54,-56,-53,-55,-52,-51,54,-36,-37,54,54,-47,-46,-42,54,-41,85,144,54,-65,54,-9,54,54,54,54,-113,-21,54,-113,-22,-68,85,-8,-15,85,54,-6,-113,-7,-113,-113,-5,-11,-12,-13,54,85,-10,-23,]),'MINUS':([39,40,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,104,105,106,108,135,136,138,139,146,152,],[-108,-103,-109,-112,-25,-110,98,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-45,-49,-32,-30,-48,-31,-24,-29,-105,-69,]),'LESSTHAN':([39,40,41,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,96,99,104,105,106,108,134,135,136,138,139,146,152,],[-108,-103,91,-109,-112,-25,-110,-113,-106,-113,-27,-111,-26,-113,-105,-107,-102,-104,-33,-35,-45,-49,-32,-30,-34,-48,-31,-24,-29,-105,-69,]),'FLOAT':([8,19,35,115,],[16,16,16,16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([20,],[26,]),'args':([35,115,],[63,140,]),'prog':([0,],[3,]),'ctefloat':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'arr':([54,],[108,]),'exp':([30,56,86,95,100,111,123,125,127,128,153,159,163,184,199,],[41,41,41,41,134,41,41,41,41,41,41,41,41,41,41,]),'idfunc':([30,37,56,67,86,95,100,101,111,118,123,125,127,128,153,159,163,179,183,184,199,200,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'cteint':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'gotoF':([161,168,],[179,183,]),'addQTD':([50,],[101,]),'masexpresion':([55,],[110,]),'masexp':([48,],[96,]),'termino':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[48,48,48,48,48,135,48,48,48,48,48,48,48,48,48,48,]),'ctebool':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'addQPAO':([55,],[111,]),'masterminos':([50,],[104,]),'initvar':([14,32,],[23,23,]),'condicion':([37,67,118,179,183,200,],[72,72,72,72,72,72,]),'vars':([5,28,37,67,118,179,183,200,],[6,38,76,76,76,76,76,76,]),'escritura':([37,67,118,179,183,200,],[73,73,73,73,73,73,]),'listaid':([14,32,],[21,62,]),'expcompcontinuo':([41,],[94,]),'listafuncargs':([133,171,],[155,185,]),'masbloque':([188,],[193,]),'varid':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ciclo':([37,67,118,179,183,200,],[79,79,79,79,79,79,]),'expcomp':([30,56,86,95,111,123,125,127,128,153,159,163,184,199,],[55,55,130,55,55,55,55,55,55,55,55,55,55,55,]),'while':([37,67,118,179,183,200,],[83,83,83,83,83,83,]),'bloquefunc':([64,141,],[119,157,]),'funcaux':([19,],[25,]),'tipo':([8,19,35,115,],[14,24,65,65,]),'addQPPM':([48,],[100,]),'ctechar':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'addQPComp':([41,],[86,]),'comaexpresion':([191,202,],[198,205,]),'funcargs':([95,],[131,]),'estatuto':([37,67,118,179,183,200,],[67,67,67,187,187,187,]),'rightparen':([114,],[138,]),'addQPP':([146,147,],[163,163,]),'masid':([23,],[33,]),'varcte':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'goto':([190,192,],[196,200,]),'asignacion':([37,67,118,179,183,200,],[71,71,71,71,71,71,]),'funcs':([9,119,157,],[20,143,174,]),'empty':([5,6,9,22,23,28,35,37,41,48,50,54,55,63,67,95,115,118,119,133,140,146,147,155,157,161,168,171,179,183,188,190,191,192,200,202,],[7,10,18,29,31,7,66,77,92,99,105,106,112,117,77,132,66,77,18,154,117,164,164,172,18,180,180,154,7,7,194,195,197,195,7,197,]),'factor':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'estatutobloque':([179,183,200,],[188,190,203,]),'llamafunc':([30,37,56,67,86,95,100,101,111,118,123,125,127,128,153,159,163,179,183,184,199,200,],[51,75,51,75,51,51,51,51,51,75,51,51,51,51,51,51,51,75,75,51,51,75,]),'eramain':([6,],[9,]),'masargs':([63,140,],[116,156,]),'bloque':([26,179,183,200,],[36,189,189,189,]),'print':([37,67,118,179,183,200,],[81,81,81,81,81,81,]),'masprint':([146,147,],[165,166,]),'retorno':([142,],[158,]),'programa':([0,],[1,]),'masestatuto':([37,67,118,],[82,121,142,]),'leftparen':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'expresion':([30,56,95,111,123,125,127,128,153,159,163,184,199,],[57,114,133,137,145,147,149,150,171,177,147,191,202,]),'lectura':([37,67,118,179,183,200,],[84,84,84,84,84,84,]),'ctestring':([30,56,86,95,100,101,111,123,125,127,128,153,159,163,184,199,],[58,58,58,58,58,58,58,58,146,58,58,58,58,146,58,58,]),'checarparams':([155,],[173,]),'listaprint':([125,163,],[148,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',191),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',197),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',202),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',214),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',220),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',224),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',225),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',228),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',234),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',237),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',238),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',241),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',248),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',253),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',257),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',260),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',264),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',265),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',269),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',270),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',273),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',278),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',279),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',285),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',286),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',287),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',288),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',291),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',295),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',299),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',303),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',304),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',307),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',310),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',311),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',315),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',316),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',321),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',322),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',325),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',328),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',329),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',334),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',335),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',339),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',342),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',343),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',348),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',349),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',353),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',356),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',357),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',358),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',359),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',360),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',361),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',366),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',367),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',371),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',372),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',373),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',374),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',375),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',376),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',377),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',378),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',379),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',382),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',387),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',400),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',416),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',417),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',421),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',422),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',425),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',435),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',436),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',439),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',440),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',443),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',446),
  ('initvar -> ID empty','initvar',2,'p_initvar','OpenRoonie.py',447),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',454),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',455),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',458),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',459),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',460),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',463),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',466),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',467),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',490),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',499),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',500),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',507),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',508),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',511),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',512),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',513),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',514),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',515),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',516),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',521),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',522),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',523),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',524),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',525),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',528),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',532),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',536),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',540),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',544),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',545),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',553),
]
