
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F73C359F1A864A9E84251C00A7DCDAA8'
    
_lr_action_items = {'TRUE':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[62,62,62,62,62,-19,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CTESTRING':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[63,63,63,63,63,-19,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'AND':([62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,83,84,92,95,98,100,108,111,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,106,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-49,-85,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-24,-25,-26,-27,-22,]),'FUNCTION':([5,7,8,24,32,54,58,],[-85,15,-58,-85,-57,-5,15,]),'ISEQUALTO':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,97,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'BOOL':([6,15,28,59,],[14,14,14,14,]),'CTECHAR':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[66,66,66,66,66,-19,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'CTEFLOAT':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[79,79,79,79,79,-19,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'SEMICOLON':([4,18,19,26,27,33,62,63,65,66,67,68,69,70,71,72,73,74,75,76,79,80,83,84,87,92,95,98,100,105,107,108,111,116,117,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,160,],[5,24,-85,-59,-61,-60,-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,-85,-84,-75,-85,-80,-85,-74,-77,122,-85,-40,-49,-85,-85,-35,-85,-28,-23,-21,148,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-34,-32,-31,-33,-24,-25,-26,-27,-22,162,]),'EQUALS':([44,88,],[55,123,]),'MORETHANEQUAL':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,102,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'CTEINT':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[69,69,69,69,69,-19,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'PRINT':([8,24,31,32,37,42,43,45,46,47,48,54,122,148,149,150,153,154,156,162,],[-58,-85,38,-57,-51,-58,-54,-50,38,-53,-52,-5,-14,-9,-85,-8,-4,-7,-6,-15,]),'RSQBRACKET':([56,62,63,65,66,67,68,69,70,71,72,73,74,75,76,79,80,83,84,92,95,98,100,105,107,108,111,116,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,155,157,159,161,163,],[88,-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,-85,-84,-75,-85,-80,-85,-74,-77,-85,-40,-49,-85,-85,-35,-85,-28,-23,-21,147,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-34,-32,-31,-33,-24,-25,-26,-27,-22,-85,160,-30,-85,-29,]),'RPAREN':([28,34,35,50,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,90,91,92,95,98,100,105,107,108,111,113,114,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,],[-85,49,-66,-85,-85,-65,-68,-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,-85,-84,-75,-85,-77,-85,-80,-85,119,-74,-77,120,121,-67,124,-85,-40,-49,-85,-85,-35,-85,-28,-13,-11,-10,-23,-21,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-34,-32,-31,-33,-24,-25,-26,-27,-12,-22,]),'FLOAT':([6,15,28,59,],[10,10,10,10,]),'LESSTHAN':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,99,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'INT':([6,15,28,59,],[13,13,13,13,]),'RBRACKET':([8,24,31,32,37,41,42,43,45,46,47,48,54,57,122,148,149,150,153,154,156,162,],[-58,-85,-85,-57,-51,54,-56,-54,-50,-85,-53,-52,-5,-55,-14,-9,-85,-8,-4,-7,-6,-15,]),'WHILE':([8,24,31,32,37,42,43,45,46,47,48,54,122,148,149,150,153,154,156,162,],[-58,-85,40,-57,-51,-58,-54,-50,40,-53,-52,-5,-14,-9,-85,-8,-4,-7,-6,-15,]),'IF':([8,24,31,32,37,42,43,45,46,47,48,54,122,148,149,150,153,154,156,162,],[-58,-85,39,-57,-51,-58,-54,-50,39,-53,-52,-5,-14,-9,-85,-8,-4,-7,-6,-15,]),'LBRACKET':([22,23,49,120,121,152,],[-3,31,31,31,31,31,]),'OR':([62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,83,84,92,95,98,100,108,111,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,104,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-49,-85,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-24,-25,-26,-27,-22,]),'ELSE':([54,149,],[-5,152,]),'CHAR':([6,15,28,59,],[12,12,12,12,]),'LSQBRACKET':([44,80,123,],[56,118,151,]),'FALSE':([51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[74,74,74,74,74,-19,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'MAIN':([5,7,8,16,17,24,32,54,58,89,],[-85,-85,-58,22,-63,-85,-57,-5,-85,-62,]),'COMMA':([19,50,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,92,95,98,100,105,107,108,111,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,155,161,],[25,59,-83,-82,-85,-81,-18,-78,-79,-17,-76,-85,-85,-84,-75,-85,112,112,-80,-85,-74,-77,-85,-40,-49,-85,-85,-35,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-45,-46,-44,-41,-42,-48,-47,-43,-34,-32,-31,-33,-24,-25,-26,-27,-22,158,158,]),'$end':([1,30,54,],[0,-1,-5,]),'LESSTHANEQUAL':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,101,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'ID':([2,3,8,9,10,11,12,13,14,21,24,25,31,32,36,37,42,43,45,46,47,48,51,52,53,54,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,122,148,149,150,151,153,154,156,158,162,],[-2,4,-58,-73,-70,19,-71,-69,-72,29,-85,19,44,-57,50,-51,-58,-54,-50,44,-53,-52,80,80,80,-5,80,80,-19,80,80,80,80,80,80,80,80,80,80,80,80,80,-14,-9,-85,-8,80,-4,-7,-6,80,-15,]),'MORETHAN':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,103,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'TIMES':([62,63,65,66,67,68,69,70,71,74,75,77,79,80,83,84,116,117,124,125,147,],[-83,-82,93,-81,-18,-78,-79,-17,-76,-84,-75,-77,-80,-85,-74,-77,-23,-21,-20,-16,-22,]),'NOTEQUAL':([62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,92,95,108,111,116,117,124,125,126,127,128,129,142,143,144,145,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,96,-84,-75,-85,-77,-80,-85,-74,-77,-85,-40,-85,-28,-23,-21,-20,-16,-36,-37,-38,-39,-24,-25,-26,-27,-22,]),'DIVIDE':([62,63,65,66,67,68,69,70,71,74,75,77,79,80,83,84,116,117,124,125,147,],[-83,-82,94,-81,-18,-78,-79,-17,-76,-84,-75,-77,-80,-85,-74,-77,-23,-21,-20,-16,-22,]),'VAR':([5,8,24,31,32,37,42,43,45,46,47,48,54,122,148,149,150,153,154,156,162,],[6,-58,6,6,-57,-51,-58,-54,-50,6,-53,-52,-5,-14,-9,-85,-8,-4,-7,-6,-15,]),'STRING':([6,15,28,59,],[9,9,9,9,]),'LPAREN':([20,29,38,39,40,51,52,53,55,64,82,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[28,-64,51,52,53,82,82,82,82,82,-19,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'PROGRAM':([0,],[2,]),'MINUS':([62,63,65,66,67,68,69,70,71,74,75,76,77,79,80,83,84,92,95,116,117,124,125,126,127,128,129,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,-84,-75,110,-77,-80,-85,-74,-77,-85,-40,-23,-21,-20,-16,-36,-37,-38,-39,-22,]),'PLUS':([62,63,65,66,67,68,69,70,71,74,75,76,77,79,80,83,84,92,95,116,117,124,125,126,127,128,129,147,],[-83,-82,-85,-81,-18,-78,-79,-17,-76,-84,-75,109,-77,-80,-85,-74,-77,-85,-40,-23,-21,-20,-16,-36,-37,-38,-39,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masid':([19,],[26,]),'factor':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'masexpresion':([73,],[105,]),'varid':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'masestatuto':([31,46,],[41,57,]),'arr':([80,],[117,]),'varcte':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'asignacion':([31,46,],[45,45,]),'cteint':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'main':([16,],[23,]),'listaid':([11,25,],[18,33,]),'empty':([5,7,19,24,28,31,46,50,58,59,65,72,73,76,77,78,80,92,100,105,108,149,155,161,],[8,17,27,8,35,42,42,61,17,35,95,98,107,111,113,113,116,127,134,139,143,154,159,159,]),'programa':([0,],[1,]),'comaexpresion':([155,161,],[157,163,]),'ctestring':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[77,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,77,84,84,]),'vars':([5,24,31,46,],[7,32,43,43,]),'masexp':([76,],[108,]),'addQPAO':([105,],[140,]),'ctefloat':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expresion':([51,52,53,55,64,104,106,112,151,158,],[78,85,86,87,91,138,141,78,155,161,]),'rightparen':([91,],[125,]),'listaprint':([51,112,],[81,146,]),'expcompcontinuo':([72,],[100,]),'estatuto':([31,46,],[46,46,]),'condicion':([31,46,],[37,37,]),'addQPPM':([108,],[142,]),'addQTD':([92,],[126,]),'ctebool':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'leftparen':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ctechar':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'args':([28,59,],[34,90,]),'masterminos':([65,],[92,]),'masbloque':([149,],[153,]),'expcomp':([51,52,53,55,64,96,97,99,101,102,103,104,106,112,151,158,],[73,73,73,73,73,130,131,132,135,136,137,73,73,73,73,73,]),'masprint':([77,78,],[114,115,]),'termino':([51,52,53,55,64,93,94,96,97,99,101,102,103,104,106,109,110,112,151,158,],[76,76,76,76,76,128,129,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'masargs':([50,],[60,]),'addQPComp':([100,],[133,]),'exp':([51,52,53,55,64,96,97,99,101,102,103,104,106,109,110,112,151,158,],[72,72,72,72,72,72,72,72,72,72,72,72,72,144,145,72,72,72,]),'funcs':([7,58,],[16,89,]),'tipo':([6,15,28,59,],[11,21,36,36,]),'prog':([0,],[3,]),'funcaux':([15,],[20,]),'bloque':([23,49,120,121,152,],[30,58,149,150,156,]),'escritura':([31,46,],[47,47,]),'ciclo':([31,46,],[48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',131),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',134),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',139),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',144),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',147),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',150),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',151),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',154),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',157),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',160),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',161),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',164),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',165),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',168),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',169),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',173),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',174),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',175),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',178),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',182),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',186),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',190),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',191),
  ('exp -> termino masexp addQPPM','exp',3,'p_exp','OpenRoonie.py',194),
  ('addQPPM -> empty','addQPPM',1,'p_addQPPM','OpenRoonie.py',197),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',201),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',202),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',203),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',207),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',208),
  ('expresion -> expcomp masexpresion addQPAO','expresion',3,'p_expresion','OpenRoonie.py',211),
  ('addQPAO -> empty','addQPAO',1,'p_addQPAO','OpenRoonie.py',214),
  ('masexpresion -> AND expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',218),
  ('masexpresion -> OR expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',219),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',220),
  ('termino -> factor masterminos addQTD','termino',3,'p_termino','OpenRoonie.py',224),
  ('addQTD -> empty','addQTD',1,'p_addQTD','OpenRoonie.py',227),
  ('masterminos -> TIMES termino','masterminos',2,'p_masterminos','OpenRoonie.py',231),
  ('masterminos -> DIVIDE termino','masterminos',2,'p_masterminos','OpenRoonie.py',232),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',233),
  ('expcomp -> exp expcompcontinuo addQPComp','expcomp',3,'p_expcomp','OpenRoonie.py',237),
  ('addQPComp -> empty','addQPComp',1,'p_addQPComp','OpenRoonie.py',240),
  ('expcompcontinuo -> MORETHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',244),
  ('expcompcontinuo -> LESSTHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',245),
  ('expcompcontinuo -> NOTEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',246),
  ('expcompcontinuo -> ISEQUALTO expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',247),
  ('expcompcontinuo -> MORETHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',248),
  ('expcompcontinuo -> LESSTHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',249),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',250),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',254),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',255),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',256),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',257),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',258),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',261),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',262),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',265),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',266),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',269),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',273),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',274),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',279),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',280),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',283),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',288),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',289),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',293),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',294),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',297),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',298),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',299),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',300),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',301),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',306),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',307),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',308),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',309),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',310),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',313),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',317),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',321),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',325),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',329),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',330),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',338),
]
