
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BCE32AF749F8553E8ADFA460EE392007'
    
_lr_action_items = {'STRING':([6,18,32,69,],[10,10,10,10,]),'NOTEQUAL':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[112,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),'COMMENT':([7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[-74,-106,36,-73,-62,-74,-60,-56,-57,36,-58,-59,-63,-6,-61,36,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'CTESTRING':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[73,73,73,73,73,73,-25,-53,73,-52,-49,-51,-50,-48,73,-33,-34,-44,-43,73,-38,73,-39,-18,73,73,73,73,73,]),'LBRACKET':([21,22,55,106,145,146,165,166,167,179,182,186,],[-3,30,68,68,-106,-106,-5,30,30,-106,-9,30,]),'FALSE':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[76,76,76,76,76,76,-25,-53,76,-52,-49,-51,-50,-48,76,-33,-34,-44,-43,76,-38,76,-39,-18,76,76,76,76,76,]),'TRUE':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[77,77,77,77,77,77,-25,-53,77,-52,-49,-51,-50,-48,77,-33,-34,-44,-43,77,-38,77,-39,-18,77,77,77,77,77,]),'PRINT':([7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[-74,-106,48,-73,-62,-74,-60,-56,-57,48,-58,-59,-63,-6,-61,48,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'VAR':([5,7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[6,-74,6,6,-73,-62,-74,-60,-56,-57,6,-58,-59,-63,-6,-61,6,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'BOOL':([6,18,32,69,],[11,11,11,11,]),'SEMICOLON':([4,19,20,27,28,34,47,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,92,94,97,101,113,115,118,119,121,123,127,131,132,138,139,141,150,153,154,155,156,157,159,161,171,188,],[5,25,-106,-77,-75,-76,62,-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-106,-100,-96,-95,-101,-99,-106,-98,147,-55,-47,-30,-32,-42,-46,158,-41,-37,-27,-29,-64,170,-54,-31,-45,-26,-21,-40,-28,177,191,]),'PLUS':([73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,121,123,138,139,141,155,156,157,161,],[-103,117,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-42,-46,-27,-29,-64,-45,-26,-21,-28,]),'MINUS':([73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,121,123,138,139,141,155,156,157,161,],[-103,120,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-42,-46,-27,-29,-64,-45,-26,-21,-28,]),'MAIN':([5,7,8,16,17,25,33,67,103,152,169,172,],[-106,-74,-106,21,-80,-106,-73,-106,-79,-106,-81,-78,]),'WHILE':([7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[-74,-106,44,-73,-62,-74,-60,-56,-57,44,-58,-59,-63,-6,-61,44,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'FUNCTION':([5,7,8,25,33,67,152,169,],[-106,-74,18,-106,-73,18,18,-81,]),'CTECHAR':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[80,80,80,80,80,80,-25,-53,80,-52,-49,-51,-50,-48,80,-33,-34,-44,-43,80,-38,80,-39,-18,80,80,80,80,80,]),'CTEFLOAT':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[89,89,89,89,89,89,-25,-53,89,-52,-49,-51,-50,-48,89,-33,-34,-44,-43,89,-38,89,-39,-18,89,89,89,89,89,]),'CHAR':([6,18,32,69,],[13,13,13,13,]),'LPAREN':([24,31,37,42,43,44,48,51,52,58,59,60,63,64,82,93,94,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[32,-84,58,59,60,-11,-13,63,-65,93,93,93,93,93,93,-25,-65,-53,93,-52,-49,-51,-50,-48,93,-33,-34,-44,-43,93,-38,93,-39,-18,93,93,93,93,93,]),'CPPCOMMENT':([7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[-74,-106,50,-73,-62,-74,-60,-56,-57,50,-58,-59,-63,-6,-61,50,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'ID':([1,3,7,9,10,11,12,13,14,15,23,25,26,30,33,36,38,39,40,41,45,46,49,50,53,57,58,59,60,62,63,64,68,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,147,150,158,168,174,175,178,180,181,182,183,189,191,],[-2,4,-74,-90,-93,-92,-94,-91,-89,20,31,-106,20,52,-73,-62,-74,-60,-56,-57,52,-58,-59,-63,66,-6,94,94,94,-61,94,94,52,94,-25,-53,94,-52,-49,-51,-50,-48,94,-33,-34,-44,-43,94,-38,94,-39,-18,94,94,-19,94,-12,94,-106,-106,-4,-8,-10,-9,94,-7,-20,]),'RSQBRACKET':([65,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,92,94,97,113,115,118,119,121,123,131,132,138,139,140,141,153,154,155,156,157,159,161,176,184,185,187,190,],[102,-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-106,-100,-96,-95,-101,-99,-106,-98,-55,-47,-30,-32,-42,-46,-41,-37,-27,-29,161,-64,-54,-31,-45,-26,-21,-40,-28,-106,-36,188,-106,-35,]),'ELSE':([57,174,],[-6,179,]),'LSQBRACKET':([52,94,148,],[65,140,168,]),'MORETHANEQUAL':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[109,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),'INT':([6,18,32,69,],[14,14,14,14,]),'ISEQUALTO':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[111,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),'RBRACKET':([7,25,30,33,35,36,38,39,40,41,45,46,49,50,57,61,62,147,149,158,170,174,175,177,178,180,181,182,189,191,],[-74,-106,-106,-73,57,-62,-72,-60,-56,-57,-106,-58,-59,-63,-6,-71,-61,-19,169,-12,-83,-106,-106,-82,-4,-8,-10,-9,-7,-20,]),'$end':([2,29,57,],[0,-1,-6,]),'EQUALS':([52,102,],[64,148,]),'LESSTHANEQUAL':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[107,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),'DIVIDE':([73,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,138,139,141,156,157,161,],[-103,-23,-105,-104,-97,122,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-27,-29,-64,-26,-21,-28,]),'COMMA':([20,32,54,56,66,69,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,94,97,98,105,113,115,118,119,121,123,131,132,138,139,141,153,154,155,156,157,159,161,164,176,187,],[26,-106,-86,69,-85,-106,-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-106,-100,-96,-95,-101,134,134,-99,-106,-98,144,69,-55,-47,-30,-32,-42,-46,-41,-37,-27,-29,-64,-54,-31,-45,-26,-21,-40,-28,144,183,183,]),'PROGRAM':([0,],[1,]),'RETURN':([7,25,33,36,38,39,40,41,45,46,49,50,57,61,62,68,104,147,158,174,175,178,180,181,182,189,191,],[-74,-106,-73,-62,-72,-60,-56,-57,-106,-58,-59,-63,-6,-71,-61,-106,150,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'IF':([7,25,30,33,36,38,39,40,41,45,46,49,50,57,62,68,147,158,174,175,178,180,181,182,189,191,],[-74,-106,43,-73,-62,-74,-60,-56,-57,43,-58,-59,-63,-6,-61,43,-19,-12,-106,-106,-4,-8,-10,-9,-7,-20,]),'LESSTHAN':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[110,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),'CTEINT':([58,59,60,63,64,82,93,107,108,109,110,111,112,114,116,117,120,122,124,125,128,129,130,134,135,144,150,168,183,],[86,86,86,86,86,86,-25,-53,86,-52,-49,-51,-50,-48,86,-33,-34,-44,-43,86,-38,86,-39,-18,86,86,86,86,86,]),'RPAREN':([32,54,56,59,66,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,105,113,115,118,119,121,123,126,131,132,133,136,137,138,139,141,142,143,151,153,154,155,156,157,159,160,161,162,163,164,173,],[55,-86,-106,-106,-85,-106,-88,106,-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,127,-24,-106,-100,-96,-95,-101,-98,-106,-99,-106,141,-67,-98,-106,145,146,-106,-55,-47,-30,-32,-42,-46,156,-41,-37,-15,-17,-14,-27,-29,-64,-69,-106,-87,-54,-31,-45,-26,-21,-40,-16,-28,-66,-70,-106,-68,]),'FLOAT':([6,18,32,69,],[9,9,9,9,]),'AND':([72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,90,92,94,97,113,115,118,119,121,123,138,139,141,153,154,155,156,157,161,],[-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,128,-100,-96,-95,-101,-98,-99,-106,-98,-55,-47,-30,-32,-42,-46,-27,-29,-64,-54,-31,-45,-26,-21,-28,]),'VOID':([6,18,32,69,],[12,12,12,12,]),'OR':([72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,90,92,94,97,113,115,118,119,121,123,138,139,141,153,154,155,156,157,161,],[-106,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,130,-100,-96,-95,-101,-98,-99,-106,-98,-55,-47,-30,-32,-42,-46,-27,-29,-64,-54,-31,-45,-26,-21,-28,]),'TIMES':([73,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,138,139,141,156,157,161,],[-103,-23,-105,-104,-97,124,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-27,-29,-64,-26,-21,-28,]),'MORETHAN':([72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,90,92,94,97,118,119,121,123,138,139,141,154,155,156,157,161,],[114,-103,-106,-23,-105,-104,-97,-106,-102,-22,-24,-100,-96,-95,-101,-98,-99,-106,-98,-30,-32,-42,-46,-27,-29,-64,-31,-45,-26,-21,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'print':([30,45,68,],[37,37,37,]),'addQPPM':([74,],[116,]),'asignacion':([30,45,68,],[40,40,40,]),'funcargs':([59,],[95,]),'addQTD':([79,],[125,]),'addQPP':([90,91,],[135,135,]),'varid':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'listaid':([15,26,],[19,34,]),'masargs':([56,105,],[71,151,]),'arr':([94,],[138,]),'exp':([58,59,60,63,64,82,108,116,129,135,144,150,168,183,],[72,72,72,72,72,72,72,154,72,72,72,72,72,72,]),'rightparen':([126,],[157,]),'factor':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'varcte':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'addQPAO':([85,],[129,]),'tipo':([6,18,32,69,],[15,23,53,53,]),'leftparen':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'checarparams':([143,],[162,]),'addQPComp':([72,],[108,]),'estatuto':([30,45,68,],[45,45,45,]),'ciclo':([30,45,68,],[46,46,46,]),'llamafunc':([30,45,58,59,60,63,64,68,82,108,116,125,129,135,144,150,168,183,],[47,47,84,84,84,84,84,47,84,84,84,84,84,84,84,84,84,84,]),'expcomp':([58,59,60,63,64,82,108,129,135,144,150,168,183,],[85,85,85,85,85,85,153,85,85,85,85,85,85,]),'empty':([5,8,20,25,30,32,45,56,59,67,68,69,72,74,79,85,90,91,94,98,105,143,145,146,152,164,174,175,176,179,187,],[7,17,27,7,38,54,38,70,96,17,38,54,113,119,123,131,136,136,139,142,70,163,165,165,17,142,180,182,184,182,184,]),'bloque':([22,166,167,186,],[29,174,175,189,]),'masexpresion':([85,],[132,]),'ctefloat':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'retorno':([104,],[149,]),'ctestring':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[90,97,97,97,97,97,97,97,97,97,90,97,97,97,97,]),'expresion':([58,59,60,63,64,82,129,135,144,150,168,183,],[91,98,99,100,101,126,159,91,164,171,176,187,]),'while':([30,45,68,],[51,51,51,]),'funcs':([8,67,152,],[16,103,172,]),'idfunc':([30,45,58,59,60,63,64,68,82,108,116,125,129,135,144,150,168,183,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'masestatuto':([30,45,68,],[35,61,104,]),'main':([16,],[22,]),'termino':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[74,74,74,74,74,74,74,74,155,74,74,74,74,74,74,]),'funcaux':([18,],[24,]),'escritura':([30,45,68,],[49,49,49,]),'vars':([5,25,30,45,68,],[8,33,39,39,39,]),'gotoF':([145,146,],[166,167,]),'masterminos':([79,],[121,]),'condicion':([30,45,68,],[41,41,41,]),'masexp':([74,],[118,]),'masid':([20,],[28,]),'prog':([0,],[3,]),'args':([32,69,],[56,105,]),'listaprint':([58,135,],[83,160,]),'comaexpresion':([176,187,],[185,190,]),'listafuncargs':([98,164,],[143,173,]),'bloquefunc':([55,106,],[67,152,]),'ctechar':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'expcompcontinuo':([72,],[115,]),'cteint':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'masprint':([90,91,],[133,137,]),'masbloque':([174,],[178,]),'ctebool':([58,59,60,63,64,82,108,116,125,129,135,144,150,168,183,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'programa':([0,],[2,]),'goto':([175,179,],[181,186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',194),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',200),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',215),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',221),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',225),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',231),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',234),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',235),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',237),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',244),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',249),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',253),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',256),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',260),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',261),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',265),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',266),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',269),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',274),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',275),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',281),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',282),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',283),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',284),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',287),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',291),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',295),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',299),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',300),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',303),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',306),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',307),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',311),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',312),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',317),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',318),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',321),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',324),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',325),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',330),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',331),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',335),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',338),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',339),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',344),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',345),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',349),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',352),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',353),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',354),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',355),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',356),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',357),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',362),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',363),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',367),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',368),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',369),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',370),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',371),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',372),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',373),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',374),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',377),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',389),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',405),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',406),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',409),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',410),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',413),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',421),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',422),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',425),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',426),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',429),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',434),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',435),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',438),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',439),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',440),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',443),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',446),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',447),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',470),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',479),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',480),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',487),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',488),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',491),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',492),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',493),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',494),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',495),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',496),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',501),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',502),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',503),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',504),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',505),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',508),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',512),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',516),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',520),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',524),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',525),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',533),
]
