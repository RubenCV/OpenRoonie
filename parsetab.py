
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DC995FA33F432275022C053DF3BC2CB2'
    
_lr_action_items = {'MINUS':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,98,99,101,105,106,116,135,136,137,138,],[91,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-29,-27,-46,-42,-95,-103,-26,-22,-28,-45,]),'LESSTHAN':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,121,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'VAR':([5,6,25,29,33,35,38,39,40,42,44,45,46,52,72,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[7,-75,7,7,-74,-59,-60,-57,-75,7,-61,-56,-62,-58,-71,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'ISEQUALTO':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,126,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'CTEFLOAT':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[60,60,60,-25,60,60,60,60,-34,-33,60,60,-43,-44,-49,-50,-48,60,-53,-51,-52,-38,60,-39,60,-18,60,60,60,]),'LESSTHANEQUAL':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,125,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'TIMES':([58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,98,99,106,116,135,136,137,],[-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,103,-100,-93,-94,-99,-29,-27,-95,-103,-26,-22,-28,]),'MORETHANEQUAL':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,127,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'FALSE':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[58,58,58,-25,58,58,58,58,-34,-33,58,58,-43,-44,-49,-50,-48,58,-53,-51,-52,-38,58,-39,58,-18,58,58,58,]),'$end':([2,30,83,],[0,-1,-6,]),'RBRACKET':([6,25,29,33,35,38,39,40,42,44,45,46,51,52,72,77,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[-75,-103,-103,-74,-59,-60,-57,-73,-103,-61,-56,-62,83,-58,-71,-72,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'CHAR':([7,17,31,87,],[9,9,9,9,]),'CTEINT':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[66,66,66,-25,66,66,66,66,-34,-33,66,66,-43,-44,-49,-50,-48,66,-53,-51,-52,-38,66,-39,66,-18,66,66,66,]),'LSQBRACKET':([50,68,116,150,],[81,100,100,165,]),'MAIN':([5,6,8,16,18,25,33,83,152,166,],[-103,-75,-103,22,-80,-103,-74,-6,-103,-79,]),'PRINT':([6,25,29,33,35,38,39,40,42,44,45,46,52,72,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[-75,-103,36,-74,-59,-60,-57,-75,36,-61,-56,-62,-58,-71,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'MORETHAN':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,123,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'WHILE':([6,25,29,33,35,38,39,40,42,44,45,46,52,72,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[-75,-103,49,-74,-59,-60,-57,-75,49,-61,-56,-62,-58,-71,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'SEMICOLON':([4,19,20,26,28,34,41,57,58,59,60,61,62,63,65,66,68,69,70,71,73,74,75,76,88,89,92,93,98,99,101,105,115,116,119,120,130,131,134,135,136,137,138,143,145,154,155,180,],[5,25,-103,-76,-78,-77,72,-103,-102,-23,-98,-92,96,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-103,-103,-32,-30,-29,-27,-46,-42,151,-103,-47,-55,-41,-37,-31,-26,-22,-28,-45,159,160,-54,-40,183,]),'CTESTRING':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[73,73,73,-25,73,73,73,73,-34,-33,73,73,-43,-44,-49,-50,-48,73,-53,-51,-52,-38,73,-39,73,-18,73,73,73,]),'AND':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,89,92,93,98,99,101,105,106,116,119,120,134,135,136,137,138,154,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-103,128,-32,-30,-29,-27,-46,-42,-95,-103,-47,-55,-31,-26,-22,-28,-45,-54,]),'BOOL':([7,17,31,87,],[12,12,12,12,]),'CTECHAR':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[76,76,76,-25,76,76,76,76,-34,-33,76,76,-43,-44,-49,-50,-48,76,-53,-51,-52,-38,76,-39,76,-18,76,76,76,]),'OR':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,89,92,93,98,99,101,105,106,116,119,120,134,135,136,137,138,154,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-103,132,-32,-30,-29,-27,-46,-42,-95,-103,-47,-55,-31,-26,-22,-28,-45,-54,]),'FUNCTION':([5,6,8,25,33,83,152,],[-103,-75,17,-103,-74,-6,17,]),'DIVIDE':([58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,98,99,106,116,135,136,137,],[-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,104,-100,-93,-94,-99,-29,-27,-95,-103,-26,-22,-28,]),'IF':([6,25,29,33,35,38,39,40,42,44,45,46,52,72,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[-75,-103,37,-74,-59,-60,-57,-75,37,-61,-56,-62,-58,-71,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'FLOAT':([7,17,31,87,],[14,14,14,14,]),'LBRACKET':([21,22,117,133,149,156,157,164,172,174,179,],[29,-3,29,-103,-103,-5,29,29,-103,-9,29,]),'INT':([7,17,31,87,],[10,10,10,10,]),'ELSE':([83,167,],[-6,172,]),'RETURN':([6,25,29,33,35,38,39,40,42,44,45,46,52,72,83,96,114,151,159,160,167,169,171,173,174,175,182,183,],[-75,-103,41,-74,-59,-60,-57,-75,41,-61,-56,-62,-58,-71,-6,-70,-21,-19,-12,-63,-103,-103,-8,-4,-9,-10,-7,-20,]),'PROGRAM':([0,],[3,]),'RPAREN':([31,54,55,57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,79,84,85,86,87,88,89,90,92,93,97,98,99,101,105,106,107,108,109,110,111,112,118,119,120,130,131,134,135,136,137,138,140,142,144,146,148,153,154,155,158,161,162,163,168,],[-103,-103,-83,-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-103,-82,117,-85,-103,-103,-103,133,-32,-30,135,-29,-27,-46,-42,-95,143,-103,145,-66,-103,149,-103,-47,-55,-41,-37,-31,-26,-22,-28,-45,-17,-15,-14,-103,-68,-84,-54,-40,-16,-69,-65,-103,-67,]),'LPAREN':([23,32,36,37,41,43,47,48,49,50,56,64,67,78,79,80,82,91,94,95,102,103,104,116,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[31,-81,-13,56,67,78,79,80,-11,-64,67,67,-25,67,67,67,67,-34,-33,67,67,-43,-44,-64,-49,-50,-48,67,-53,-51,-52,-38,67,-39,67,-18,67,67,67,]),'NOTEQUAL':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,88,92,93,98,99,101,105,106,116,134,135,136,137,138,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,122,-32,-30,-29,-27,-46,-42,-95,-103,-31,-26,-22,-28,-45,]),'PLUS':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,98,99,101,105,106,116,135,136,137,138,],[94,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-29,-27,-46,-42,-95,-103,-26,-22,-28,-45,]),'ID':([1,3,6,9,10,11,12,13,14,15,24,25,27,29,33,35,38,39,40,41,42,44,45,46,52,53,56,64,67,72,78,79,80,82,83,91,94,95,96,102,103,104,114,121,122,123,124,125,126,127,128,129,132,139,141,147,151,159,160,165,167,169,171,173,174,175,178,182,183,],[4,-2,-75,-88,-86,20,-89,-90,-87,-91,32,-103,20,50,-74,-59,-60,-57,-75,68,50,-61,-56,-62,-58,84,68,68,-25,-71,68,68,68,116,-6,-34,-33,68,-70,68,-43,-44,-21,-49,-50,-48,68,-53,-51,-52,-38,68,-39,68,-18,68,-19,-12,-63,68,-103,-103,-8,-4,-9,-10,68,-7,-20,]),'STRING':([7,17,31,87,],[13,13,13,13,]),'RSQBRACKET':([57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,81,88,89,92,93,98,99,100,101,105,119,120,130,131,134,135,136,137,138,154,155,170,176,177,181,184,],[-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,113,-103,-103,-32,-30,-29,-27,137,-46,-42,-47,-55,-41,-37,-31,-26,-22,-28,-45,-54,-40,-103,-36,180,-103,-35,]),'TRUE':([41,56,64,67,78,79,80,82,91,94,95,102,103,104,121,122,123,124,125,126,127,128,129,132,139,141,147,165,178,],[65,65,65,-25,65,65,65,65,-34,-33,65,65,-43,-44,-49,-50,-48,65,-53,-51,-52,-38,65,-39,65,-18,65,65,65,]),'EQUALS':([50,113,],[82,150,]),'COMMA':([20,31,54,55,57,58,59,60,61,63,65,66,68,69,70,71,73,74,75,76,84,87,88,89,92,93,98,99,101,105,106,108,111,118,119,120,130,131,134,135,136,137,138,154,155,163,170,181,],[27,-103,87,-83,-103,-102,-23,-98,-92,-96,-101,-97,-103,-95,-24,-103,-100,-93,-94,-99,-82,-103,-103,-103,-32,-30,-29,-27,-46,-42,141,141,147,87,-47,-55,-41,-37,-31,-26,-22,-28,-45,-54,-40,147,178,178,]),'VOID':([7,17,31,87,],[15,15,15,15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'listaid':([11,27,],[19,34,]),'addQTD':([71,],[102,]),'masterminos':([71,],[105,]),'addQPAO':([89,],[129,]),'tipo':([7,17,31,87,],[11,24,53,53,]),'termino':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[57,57,57,57,57,57,57,57,138,57,57,57,57,57,57,]),'rightparen':([97,],[136,]),'masexpresion':([89,],[131,]),'varcte':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'args':([31,87,],[54,118,]),'ctechar':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'comaexpresion':([170,181,],[177,184,]),'condicion':([29,42,],[39,39,]),'masprint':([106,108,],[142,144,]),'expcomp':([56,64,78,79,80,82,124,129,139,147,165,178,],[89,89,89,89,89,89,154,89,89,89,89,89,]),'funcs':([8,152,],[16,166,]),'gotoF':([133,149,],[157,164,]),'funcaux':([17,],[23,]),'print':([29,42,],[43,43,]),'retorno':([29,42,],[44,44,]),'estatuto':([29,42,],[42,42,]),'arr':([68,116,],[99,99,]),'bloque':([21,117,157,164,179,],[30,152,167,169,182,]),'addQPP':([106,108,],[139,139,]),'idfunc':([29,42,82,],[47,47,47,]),'addQPPM':([57,],[95,]),'addQPComp':([88,],[124,]),'masid':([20,],[26,]),'expcompcontinuo':([88,],[119,]),'escritura':([29,42,],[35,35,]),'checarparams':([146,],[162,]),'listafuncargs':([111,163,],[146,168,]),'while':([29,42,],[48,48,]),'vars':([5,25,29,42,],[8,33,38,38,]),'masargs':([54,118,],[85,153,]),'cteint':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'exp':([41,56,64,78,79,80,82,95,124,129,139,147,165,178,],[62,88,88,88,88,88,88,134,88,88,88,88,88,88,]),'masexp':([57,],[93,]),'funcargs':([79,],[109,]),'main':([16,],[21,]),'empty':([5,8,20,25,29,31,42,54,57,68,71,79,87,88,89,106,108,111,116,118,133,146,149,152,163,167,169,170,172,181,],[6,18,28,6,40,55,40,86,92,98,101,110,55,120,130,140,140,148,98,86,156,161,156,18,148,171,174,176,174,176,]),'leftparen':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'asignacion':([29,42,],[45,45,]),'llamafunc':([29,42,82,],[46,46,114,]),'ctestring':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[69,69,69,106,69,69,69,69,69,69,69,106,69,69,69,]),'listaprint':([78,139,],[107,158,]),'varid':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'factor':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'expresion':([56,64,78,79,80,82,129,139,147,165,178,],[90,97,108,111,112,115,155,108,163,170,181,]),'masbloque':([167,],[173,]),'prog':([0,],[1,]),'masestatuto':([29,42,],[51,77,]),'ctefloat':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ctebool':([41,56,64,78,79,80,82,95,102,124,129,139,147,165,178,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'goto':([169,172,],[175,179,]),'programa':([0,],[2,]),'ciclo':([29,42,],[52,52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',169),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',172),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',182),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',190),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',194),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',201),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',204),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',205),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',207),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',214),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',219),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',223),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',226),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',230),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',231),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',235),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',236),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',239),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',244),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',245),
  ('asignacion -> ID EQUALS llamafunc','asignacion',3,'p_asignacion','OpenRoonie.py',246),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',252),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',253),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',254),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',257),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',261),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',265),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',269),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',270),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',273),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',276),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',277),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',281),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',282),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',287),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',288),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',291),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',294),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',295),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',300),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',301),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',305),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',308),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',309),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',314),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',315),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',319),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',322),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',323),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',324),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',325),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',326),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',327),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',332),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',333),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',337),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',338),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',339),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',340),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',341),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','OpenRoonie.py',342),
  ('estatuto -> llamafunc','estatuto',1,'p_estatuto','OpenRoonie.py',343),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN SEMICOLON','llamafunc',5,'p_llamafunc','OpenRoonie.py',346),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',349),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',353),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',354),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',357),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',358),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',361),
  ('retorno -> RETURN exp SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',372),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',373),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',376),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',377),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',380),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',381),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',384),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',390),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',391),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloque funcs','funcs',8,'p_funcs','OpenRoonie.py',394),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',395),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',399),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',404),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',405),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',411),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',412),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',415),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',416),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',417),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',418),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',419),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',420),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',425),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',426),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',427),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',428),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',429),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',432),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',436),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',440),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',444),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',448),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',449),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',457),
]
