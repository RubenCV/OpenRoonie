
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C31E7F7A657435752E0977AB219F522A'
    
_lr_action_items = {'LPAREN':([23,32,36,37,39,42,44,45,48,49,57,61,69,79,81,82,83,96,99,100,101,103,105,109,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[31,-81,57,61,-64,-11,81,-13,82,83,61,-25,61,61,61,61,61,61,-34,-33,-44,61,-43,-64,-18,61,-52,-53,-49,61,-50,-48,-51,-39,61,-38,61,61,61,]),'MORETHAN':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,131,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'TRUE':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[62,62,-25,62,62,62,62,62,62,-34,-33,-44,62,-43,-18,62,-52,-53,-49,62,-50,-48,-51,-39,62,-38,62,62,62,]),'ID':([2,3,7,9,10,11,12,13,14,15,24,25,26,29,33,35,37,38,40,43,46,47,50,51,52,54,57,61,69,71,79,80,81,82,83,96,99,100,101,103,105,107,111,121,122,125,126,127,128,130,131,132,134,135,138,145,150,155,158,162,168,169,173,174,175,176,177,182,184,],[4,-2,-75,-89,20,-90,-86,-87,-91,-88,32,-103,20,39,-74,39,63,-56,-57,-60,-59,-58,-61,-75,-62,87,63,-25,63,-71,109,-6,63,63,63,63,-34,-33,-44,63,-43,-70,-21,-18,63,-52,-53,-49,63,-50,-48,-51,-39,63,-38,-19,63,-12,63,-63,-103,-103,63,-10,-9,-8,-4,-20,-7,]),'ELSE':([80,169,],[-6,178,]),'TIMES':([58,59,60,62,63,64,66,67,68,70,72,74,75,76,77,88,94,95,109,139,142,143,],[-97,-95,-24,-101,-103,-100,-93,105,-92,-23,-96,-99,-98,-94,-102,-95,-27,-29,-103,-28,-26,-22,]),'OR':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,92,94,95,97,98,102,104,109,129,133,139,140,141,142,143,156,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,-103,134,-27,-29,-32,-30,-46,-42,-103,-55,-47,-28,-31,-45,-26,-22,-54,]),'VAR':([5,7,25,29,33,35,38,40,43,46,47,50,51,52,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[6,-75,6,6,-74,6,-56,-57,-60,-59,-58,-61,-75,-62,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'STRING':([6,18,31,84,],[11,11,11,11,]),'LESSTHAN':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,127,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'PRINT':([7,25,29,33,35,38,40,43,46,47,50,51,52,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[-75,-103,45,-74,45,-56,-57,-60,-59,-58,-61,-75,-62,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'SEMICOLON':([4,19,20,27,28,34,37,58,59,60,62,63,64,65,66,67,68,70,72,73,74,75,76,77,91,92,94,95,97,98,102,104,109,110,123,129,133,136,137,139,140,141,142,143,148,156,157,179,],[5,25,-103,-78,-76,-77,71,-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,107,-99,-98,-94,-102,-103,-103,-27,-29,-32,-30,-46,-42,-103,145,155,-55,-47,-41,-37,-28,-31,-45,-26,-22,162,-54,-40,182,]),'CHAR':([6,18,31,84,],[15,15,15,15,]),'AND':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,92,94,95,97,98,102,104,109,129,133,139,140,141,142,143,156,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,-103,138,-27,-29,-32,-30,-46,-42,-103,-55,-47,-28,-31,-45,-26,-22,-54,]),'LESSTHANEQUAL':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,126,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'MAIN':([5,7,8,16,17,25,33,80,153,166,],[-103,-75,-103,21,-80,-103,-74,-6,-103,-79,]),'VOID':([6,18,31,84,],[14,14,14,14,]),'PROGRAM':([0,],[3,]),'EQUALS':([39,108,],[79,144,]),'CTEINT':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[58,58,-25,58,58,58,58,58,58,-34,-33,-44,58,-43,-18,58,-52,-53,-49,58,-50,-48,-51,-39,58,-38,58,58,58,]),'RSQBRACKET':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,78,91,92,93,94,95,97,98,102,104,129,133,136,137,139,140,141,142,143,156,157,167,171,172,180,183,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,108,-103,-103,139,-27,-29,-32,-30,-46,-42,-55,-47,-41,-37,-28,-31,-45,-26,-22,-54,-40,-103,179,-36,-103,-35,]),'FLOAT':([6,18,31,84,],[13,13,13,13,]),'RETURN':([7,25,29,33,35,38,40,43,46,47,50,51,52,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[-75,-103,37,-74,37,-56,-57,-60,-59,-58,-61,-75,-62,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'INT':([6,18,31,84,],[12,12,12,12,]),'MORETHANEQUAL':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,125,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'ISEQUALTO':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,132,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'BOOL':([6,18,31,84,],[9,9,9,9,]),'WHILE':([7,25,29,33,35,38,40,43,46,47,50,51,52,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[-75,-103,42,-74,42,-56,-57,-60,-59,-58,-61,-75,-62,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'RBRACKET':([7,25,29,33,35,38,40,41,43,46,47,50,51,52,56,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[-75,-103,-103,-74,-103,-56,-57,80,-60,-59,-58,-61,-73,-62,-72,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'LBRACKET':([21,22,118,146,147,159,160,161,175,178,181,],[-3,29,29,-103,-103,29,-5,29,-9,-103,29,]),'LSQBRACKET':([39,63,109,144,],[78,93,93,158,]),'MINUS':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,94,95,102,104,109,139,141,142,143,],[-97,-95,-24,-101,-103,-100,99,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,-27,-29,-46,-42,-103,-28,-45,-26,-22,]),'FUNCTION':([5,7,8,25,33,80,153,],[-103,-75,18,-103,-74,-6,18,]),'COMMA':([20,31,53,55,58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,84,87,88,90,91,92,94,95,97,98,102,104,115,117,129,133,136,137,139,140,141,142,143,156,157,163,167,180,],[26,-103,84,-83,-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-103,-82,121,121,-103,-103,-27,-29,-32,-30,-46,-42,150,84,-55,-47,-41,-37,-28,-31,-45,-26,-22,-54,-40,150,173,173,]),'IF':([7,25,29,33,35,38,40,43,46,47,50,51,52,71,80,107,111,145,155,162,168,169,174,175,176,177,182,184,],[-75,-103,48,-74,48,-56,-57,-60,-59,-58,-61,-75,-62,-71,-6,-70,-21,-19,-12,-63,-103,-103,-10,-9,-8,-4,-20,-7,]),'CTECHAR':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[74,74,-25,74,74,74,74,74,74,-34,-33,-44,74,-43,-18,74,-52,-53,-49,74,-50,-48,-51,-39,74,-38,74,74,74,]),'DIVIDE':([58,59,60,62,63,64,66,67,68,70,72,74,75,76,77,88,94,95,109,139,142,143,],[-97,-95,-24,-101,-103,-100,-93,101,-92,-23,-96,-99,-98,-94,-102,-95,-27,-29,-103,-28,-26,-22,]),'NOTEQUAL':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,91,94,95,97,98,102,104,109,139,140,141,142,143,],[-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,130,-27,-29,-32,-30,-46,-42,-103,-28,-31,-45,-26,-22,]),'$end':([1,30,80,],[0,-1,-6,]),'CTESTRING':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[64,64,-25,64,64,64,64,64,64,-34,-33,-44,64,-43,-18,64,-52,-53,-49,64,-50,-48,-51,-39,64,-38,64,64,64,]),'CTEFLOAT':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[75,75,-25,75,75,75,75,75,75,-34,-33,-44,75,-43,-18,75,-52,-53,-49,75,-50,-48,-51,-39,75,-38,75,75,75,]),'PLUS':([58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,88,94,95,102,104,109,139,141,142,143,],[-97,-95,-24,-101,-103,-100,100,-93,-103,-92,-23,-96,-99,-98,-94,-102,-95,-27,-29,-46,-42,-103,-28,-45,-26,-22,]),'RPAREN':([31,53,55,58,59,60,62,63,64,65,66,67,68,70,72,74,75,76,77,83,84,85,86,87,88,89,90,91,92,94,95,97,98,102,104,106,112,113,114,115,116,117,119,120,124,129,133,136,137,139,140,141,142,143,149,151,152,154,156,157,163,164,165,170,],[-103,-103,-83,-97,-95,-24,-101,-103,-100,-103,-93,-103,-92,-23,-96,-99,-98,-94,-102,-103,-103,118,-85,-82,-95,123,-103,-103,-103,-27,-29,-32,-30,-46,-42,142,146,147,148,-103,-66,-103,-15,-17,-14,-55,-47,-41,-37,-28,-31,-45,-26,-22,-68,-103,-84,-16,-54,-40,-103,-69,-65,-67,]),'FALSE':([37,57,61,69,79,81,82,83,96,99,100,101,103,105,121,122,125,126,127,128,130,131,132,134,135,138,150,158,173,],[77,77,-25,77,77,77,77,77,77,-34,-33,-44,77,-43,-18,77,-52,-53,-49,77,-50,-48,-51,-39,77,-38,77,77,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ctestring':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[59,88,59,59,59,59,59,59,59,88,59,59,59,59,59,]),'estatuto':([29,35,],[35,35,]),'tipo':([6,18,31,84,],[10,24,54,54,]),'main':([16,],[22,]),'asignacion':([29,35,],[38,38,]),'ciclo':([29,35,],[47,47,]),'termino':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[65,65,65,65,65,65,65,65,141,65,65,65,65,65,65,]),'while':([29,35,],[44,44,]),'masestatuto':([29,35,],[41,56,]),'bloque':([22,118,159,161,181,],[30,153,168,169,184,]),'addQPAO':([92,],[135,]),'factor':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cteint':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expcompcontinuo':([91,],[133,]),'vars':([5,25,29,35,],[8,33,43,43,]),'leftparen':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'programa':([0,],[1,]),'masbloque':([169,],[177,]),'escritura':([29,35,],[46,46,]),'prog':([0,],[2,]),'masargs':([53,117,],[85,152,]),'funcaux':([18,],[23,]),'ctebool':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expresion':([57,69,79,81,82,83,122,135,150,158,173,],[90,106,110,112,113,115,90,157,163,167,180,]),'masid':([20,],[28,]),'funcargs':([83,],[114,]),'addQPPM':([65,],[96,]),'empty':([5,8,20,25,29,31,35,53,63,65,67,83,84,88,90,91,92,109,115,117,146,147,151,153,163,167,168,169,178,180,],[7,17,27,7,51,55,51,86,95,97,102,116,55,120,120,129,136,95,149,86,160,160,164,17,149,172,175,176,175,172,]),'checarparams':([151,],[165,]),'gotoF':([146,147,],[159,161,]),'ctechar':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'idfunc':([29,35,79,],[49,49,49,]),'varid':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'listaid':([10,26,],[19,34,]),'funcs':([8,153,],[16,166,]),'print':([29,35,],[36,36,]),'masprint':([88,90,],[119,124,]),'condicion':([29,35,],[40,40,]),'addQPP':([88,90,],[122,122,]),'comaexpresion':([167,180,],[171,183,]),'addQPComp':([91,],[128,]),'rightparen':([106,],[143,]),'ctefloat':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'masterminos':([67,],[104,]),'listafuncargs':([115,163,],[151,170,]),'listaprint':([57,122,],[89,154,]),'goto':([168,178,],[174,181,]),'varcte':([37,57,69,79,81,82,83,96,103,122,128,135,150,158,173,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'addQTD':([67,],[103,]),'args':([31,84,],[53,117,]),'exp':([37,57,69,79,81,82,83,96,122,128,135,150,158,173,],[73,91,91,91,91,91,91,140,91,91,91,91,91,91,]),'retorno':([29,35,],[50,50,]),'arr':([63,109,],[94,94,]),'masexpresion':([92,],[137,]),'llamafunc':([29,35,79,],[52,52,111,]),'masexp':([65,],[98,]),'expcomp':([57,69,79,81,82,83,122,128,135,150,158,173,],[92,92,92,92,92,92,92,156,92,92,92,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',170),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',173),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',183),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',191),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',195),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',202),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',205),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',206),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',208),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',215),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',220),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',224),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',227),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',231),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',232),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',236),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',237),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',240),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',245),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',246),
  ('asignacion -> ID EQUALS llamafunc','asignacion',3,'p_asignacion','OpenRoonie.py',247),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',253),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',254),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',255),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',258),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',262),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',266),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',270),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',271),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',274),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',277),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',278),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',282),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',283),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',288),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',289),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',292),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',295),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',296),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',301),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',302),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',306),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',309),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',310),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',315),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',316),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',320),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',323),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',324),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',325),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',326),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',327),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',328),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',333),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',334),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',338),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',339),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',340),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',341),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',342),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','OpenRoonie.py',343),
  ('estatuto -> llamafunc','estatuto',1,'p_estatuto','OpenRoonie.py',344),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN SEMICOLON','llamafunc',5,'p_llamafunc','OpenRoonie.py',347),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',350),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',357),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',358),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',361),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',362),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',365),
  ('retorno -> RETURN exp SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',372),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',373),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',376),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',377),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',380),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',381),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',384),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',390),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',391),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloque funcs','funcs',8,'p_funcs','OpenRoonie.py',394),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',395),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',399),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',404),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',405),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',411),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',412),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',415),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',416),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',417),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',418),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',419),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',420),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',425),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',426),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',427),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',428),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',429),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',432),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',436),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',440),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',444),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',448),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',449),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',457),
]
