
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0F2CA633E3F6F883D4FEA4D8D568BA74'
    
_lr_action_items = {'FUNCTION':([5,7,8,16,17,24,34,138,180,196,],[-122,-122,-84,-3,21,-122,-83,21,21,-97,]),'COMMENT':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,106,-66,-70,-63,-64,-67,106,-84,-68,-71,-65,106,-9,-69,-21,-122,-122,-73,106,-8,106,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,106,-10,]),'CTEFLOAT':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[57,-28,57,-57,57,-60,-59,-55,-58,-56,57,57,-50,-51,57,-45,-46,-41,-40,57,57,57,57,57,57,57,57,57,57,57,57,57,-20,57,]),'RSQBRACKET':([35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,70,71,74,79,82,83,87,88,92,93,124,125,129,130,131,132,133,134,135,136,156,157,159,160,172,176,193,],[68,-122,-122,-115,-121,-30,-24,-114,-119,-122,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-89,-91,-62,-54,-49,-53,-44,-48,-37,-39,-90,-61,-52,-47,-38,-23,-29,-34,157,-122,-74,-31,-36,-33,191,-35,-72,]),'MINUS':([38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,129,132,133,156,157,193,],[-115,-121,-30,-24,-114,-119,-122,94,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-52,-23,-29,-74,-31,-72,]),'LBRACKET':([32,33,100,164,184,185,199,200,201,211,213,217,],[-4,66,139,139,-122,-122,66,-8,66,-12,-122,66,]),'COMMA':([19,20,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,65,68,74,79,82,83,87,88,92,93,102,103,125,126,129,130,131,132,133,134,136,137,140,142,156,157,165,170,175,193,],[-88,27,69,-122,-115,-121,-86,-30,-24,-114,-119,-122,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-122,-87,-62,-54,-49,-53,-44,-48,-37,-39,-102,142,-61,154,-52,-47,-38,-23,-29,-34,158,161,-101,-122,-74,-31,142,187,154,-72,]),'READ':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,105,-66,-70,-63,-64,-67,105,-84,-68,-71,-65,105,-9,-69,-21,-122,-122,-73,105,-8,105,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,105,-10,]),'SEMICOLON':([4,18,19,20,28,29,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,63,68,74,79,82,83,87,88,92,93,123,125,129,130,131,132,133,156,157,167,178,182,190,193,194,210,],[5,24,-88,-122,-85,-93,-122,-115,-121,-86,-30,-24,-114,-119,-122,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-92,-87,-62,-54,-49,-53,-44,-48,-37,-39,152,-61,-52,-47,-38,-23,-29,-74,-31,183,195,198,203,-72,205,216,]),'LPAREN':([26,31,41,42,44,54,61,64,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,105,108,111,113,116,117,118,145,146,148,150,151,154,158,161,178,186,187,204,],[44,65,-75,81,-28,44,99,-100,-57,44,-60,-59,-55,-58,-56,44,44,-50,-51,44,-45,-46,-41,-40,44,44,44,144,-75,146,148,-16,-14,150,44,44,44,44,44,44,44,44,44,44,-20,44,]),'DIVIDE':([38,39,41,43,45,46,47,50,51,52,53,55,56,57,58,60,62,132,133,156,157,193,],[-115,-121,-30,-24,-114,-119,86,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-23,-29,-74,-31,-72,]),'CTECHAR':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[50,-28,50,-57,50,-60,-59,-55,-58,-56,50,50,-50,-51,50,-45,-46,-41,-40,50,50,50,50,50,50,50,50,50,50,50,50,50,-20,50,]),'NOTEQUAL':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[72,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'MORETHANEQUAL':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[76,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'LESSTHANEQUAL':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[75,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'CPPCOMMENT':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,120,-66,-70,-63,-64,-67,120,-84,-68,-71,-65,120,-9,-69,-21,-122,-122,-73,120,-8,120,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,120,-10,]),'CTEINT':([25,26,44,54,69,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[36,51,-28,51,36,-57,51,-60,-59,-55,-58,-56,51,51,-50,-51,51,-45,-46,-41,-40,51,51,51,51,51,51,51,51,51,51,51,51,51,-20,51,]),'INT':([6,21,65,142,],[15,15,15,15,]),'OR':([37,38,39,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,74,79,82,83,92,93,125,129,131,132,133,156,157,193,],[-122,-115,-121,-30,-24,-114,-119,-122,91,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-62,-54,-49,-53,-37,-39,-61,-52,-38,-23,-29,-74,-31,-72,]),'MORETHAN':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[77,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'VAR':([5,8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[6,-84,6,-83,6,-66,-70,-63,-64,-67,6,-84,-68,-71,-65,6,-9,-69,-21,-122,-122,-73,6,-8,6,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,6,-10,]),'LESSTHAN':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[80,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'ISEQUALTO':([37,38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,92,93,129,131,132,133,156,157,193,],[78,-115,-121,-30,-24,-114,-119,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-37,-39,-52,-38,-23,-29,-74,-31,-72,]),'FALSE':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[39,-28,39,-57,39,-60,-59,-55,-58,-56,39,39,-50,-51,39,-45,-46,-41,-40,39,39,39,39,39,39,39,39,39,39,39,39,39,-20,39,]),'RPAREN':([37,38,39,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,65,74,79,81,82,83,87,88,92,93,97,102,103,125,126,127,128,129,130,131,132,133,140,141,142,143,153,155,156,157,165,166,168,169,170,171,173,174,175,177,181,188,189,192,193,202,],[-122,-115,-121,-30,-24,-114,-119,-122,-122,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,100,-62,-54,-122,-49,-53,-44,-48,-37,-39,133,-102,-122,-61,-122,-77,156,-52,-47,-38,-23,-29,-101,164,-122,-104,-122,-79,-74,-31,-122,182,184,185,-122,190,-76,-80,-122,193,-103,-19,-17,-78,-72,-18,]),'ID':([2,3,8,9,10,11,12,13,14,15,24,26,27,30,34,44,54,66,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,101,104,106,107,109,110,112,115,119,120,121,139,144,145,146,148,149,150,151,152,154,158,161,178,183,184,185,186,187,198,199,200,201,203,204,206,207,208,209,211,212,213,214,215,216,217,218,],[-2,4,-84,-107,-108,19,-109,-110,-106,-105,-122,41,19,64,-83,-28,41,108,-57,41,-60,-59,-55,-58,-56,41,41,-50,-51,41,-45,-46,-41,-40,41,41,41,140,-66,-70,-63,-64,-67,108,-84,-68,-71,-65,108,166,41,41,41,-9,41,41,-69,41,41,41,41,-21,-122,-122,41,-20,-73,108,-8,108,-15,41,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,108,-10,]),'FLOAT':([6,21,65,142,],[14,14,14,14,]),'RETURN':([8,24,34,104,106,107,109,110,112,115,119,120,121,139,147,149,152,163,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,-66,-70,-63,-64,-67,-122,-82,-68,-71,-65,-122,-81,-9,-69,178,-21,-122,-122,-73,-122,-8,-122,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,-122,-10,]),'WHILE':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,117,-66,-70,-63,-64,-67,117,-84,-68,-71,-65,117,-9,-69,-21,-122,-122,-73,117,-8,117,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,117,-10,]),'CTESTRING':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[46,-28,46,-57,46,-60,-59,-55,-58,-56,46,46,-50,-51,46,-45,-46,-41,-40,46,46,46,46,46,46,46,46,46,46,46,46,46,-20,46,]),'ELSE':([8,24,34,104,106,107,109,110,119,120,121,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,-66,-70,-63,-64,-67,-68,-71,-65,-9,-69,-21,-122,-122,-73,-122,-8,-122,-15,-6,-7,-122,213,-12,-13,-122,-11,-5,-22,-122,-10,]),'MAIN':([5,7,8,16,17,22,23,24,34,138,162,180,196,197,],[-122,-122,-84,-3,-122,32,-96,-122,-83,-122,-95,-122,-97,-94,]),'TIMES':([38,39,41,43,45,46,47,50,51,52,53,55,56,57,58,60,62,132,133,156,157,193,],[-115,-121,-30,-24,-114,-119,85,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-23,-29,-74,-31,-72,]),'PLUS':([38,39,41,43,45,46,47,49,50,51,52,53,55,56,57,58,60,62,82,83,129,132,133,156,157,193,],[-115,-121,-30,-24,-114,-119,-122,95,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-49,-53,-52,-23,-29,-74,-31,-72,]),'IF':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,113,-66,-70,-63,-64,-67,113,-84,-68,-71,-65,113,-9,-69,-21,-122,-122,-73,113,-8,113,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,113,-10,]),'RBRACKET':([8,24,34,66,104,106,107,109,110,112,114,115,119,120,121,147,149,152,179,183,184,185,195,198,199,200,201,203,205,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,-122,-66,-70,-63,-64,-67,-122,149,-82,-68,-71,-65,-81,-9,-69,196,-21,-122,-122,-99,-73,-122,-8,-122,-15,-98,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,-122,-10,]),'STRING':([6,21,65,142,],[12,12,12,12,]),'CHAR':([6,21,65,142,],[9,9,9,9,]),'TRUE':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[53,-28,53,-57,53,-60,-59,-55,-58,-56,53,53,-50,-51,53,-45,-46,-41,-40,53,53,53,53,53,53,53,53,53,53,53,53,53,-20,53,]),'BOOL':([6,21,65,142,],[10,10,10,10,]),'$end':([1,67,149,],[0,-1,-9,]),'PRINT':([8,24,34,66,104,106,107,109,110,112,115,119,120,121,139,149,152,183,184,185,198,199,200,201,203,206,207,208,209,211,212,213,214,215,216,217,218,],[-84,-122,-83,116,-66,-70,-63,-64,-67,116,-84,-68,-71,-65,116,-9,-69,-21,-122,-122,-73,116,-8,116,-15,-6,-7,-122,-122,-12,-13,-122,-11,-5,-22,116,-10,]),'VOID':([6,21,65,142,],[13,13,13,13,]),'PROGRAM':([0,],[2,]),'LSQBRACKET':([19,41,59,108,122,],[25,-32,98,-32,151,]),'AND':([37,38,39,41,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,62,74,79,82,83,92,93,125,129,131,132,133,156,157,193,],[-122,-115,-121,-30,-24,-114,-119,-122,90,-122,-118,-116,-112,-120,-25,-113,-117,-111,-27,-26,-62,-54,-49,-53,-37,-39,-61,-52,-38,-23,-29,-74,-31,-72,]),'EQUALS':([19,108,191,],[26,145,204,]),'RANDOM':([26,44,54,72,73,75,76,77,78,80,81,84,85,86,89,90,91,94,95,96,98,99,145,146,148,150,151,154,158,161,178,186,187,204,],[61,-28,61,-57,61,-60,-59,-55,-58,-56,61,61,-50,-51,61,-45,-46,-41,-40,61,61,61,61,61,61,61,61,61,61,61,61,61,-20,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'escritura':([66,112,139,199,201,217,],[104,104,104,104,104,104,]),'exp':([26,54,73,81,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[37,37,37,37,37,131,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ctebool':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'goto':([208,213,],[212,217,]),'prog':([0,],[3,]),'vars':([5,24,66,112,139,199,201,217,],[7,34,119,119,119,119,119,119,]),'idfunc':([26,54,66,73,81,84,89,96,98,99,112,139,145,146,148,150,151,154,158,161,178,186,199,201,204,217,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ctestring':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'masid':([20,],[28,]),'masexp':([49,],[92,]),'gotoF':([184,185,],[199,201,]),'factor':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'lectura':([66,112,139,199,201,217,],[110,110,110,110,110,110,]),'expcomp':([26,54,73,81,89,98,99,145,146,148,150,151,154,158,161,178,186,204,],[48,48,125,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'args':([65,142,],[103,165,]),'while':([66,112,139,199,201,217,],[111,111,111,111,111,111,]),'checarparams':([153,],[173,]),'funcs':([17,138,180,],[22,162,197,]),'masterminos':([47,],[82,]),'termino':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[49,49,49,49,129,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'funcargs':([81,],[128,]),'expcompcontinuo':([37,],[79,]),'addQPPM':([49,],[96,]),'leftparen':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'addQPP':([170,],[186,]),'programa':([0,],[1,]),'ctechar':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'addQTD':([47,],[84,]),'addQPAO':([48,],[89,]),'cteint':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'idarray':([26,54,66,73,81,84,89,96,98,99,112,139,145,146,148,150,151,154,158,161,178,186,199,201,204,217,],[59,59,122,59,59,59,59,59,59,59,122,122,59,59,59,59,59,59,59,59,59,59,122,122,59,122,]),'print':([66,112,139,199,201,217,],[118,118,118,118,118,118,]),'expdimvar':([98,151,158,],[136,136,136,]),'funcaux':([21,],[31,]),'llamafunc':([26,54,66,73,81,84,89,96,98,99,112,139,145,146,148,150,151,154,158,161,178,186,199,201,204,217,],[62,62,123,62,62,62,62,62,62,62,123,123,62,62,62,62,62,62,62,62,62,62,123,123,62,123,]),'dims':([25,69,],[35,124,]),'condicion':([66,112,139,199,201,217,],[109,109,109,109,109,109,]),'masexpresion':([48,],[87,]),'expresion':([26,54,81,89,98,99,145,146,148,150,151,154,158,161,178,186,204,],[40,97,126,130,134,137,167,168,169,170,134,175,134,177,194,170,210,]),'asignacion':([66,112,139,199,201,217,],[107,107,107,107,107,107,]),'varcte':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'tipo':([6,21,65,142,],[11,30,101,101,]),'masargs':([103,165,],[141,181,]),'listaid':([11,27,],[18,63,]),'addQPComp':([37,],[73,]),'bloque':([33,199,201,217,],[67,207,207,207,]),'rightparen':([97,],[132,]),'empty':([5,7,17,20,24,36,37,47,48,49,65,66,81,103,112,126,136,138,139,142,153,165,170,175,180,184,185,199,201,208,209,213,217,],[8,16,23,29,8,71,74,83,88,93,102,115,127,143,115,155,159,23,115,102,174,143,188,155,23,200,200,8,8,211,214,211,8,]),'estatuto':([66,112,139,199,201,217,],[112,112,112,206,206,206,]),'main':([22,],[33,]),'listaprint':([150,186,],[171,202,]),'masestatuto':([66,112,139,],[114,147,163,]),'masprint':([170,],[189,]),'retorno':([163,],[179,]),'bloquefunc':([100,164,],[138,180,]),'ctefloat':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'dimsvar':([98,151,158,],[135,172,176,]),'masbloque':([209,],[215,]),'estatutobloque':([199,201,217,],[208,209,218,]),'listafuncargs':([126,175,],[153,192,]),'varid':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'initvar':([11,27,],[20,20,]),'ciclo':([66,112,139,199,201,217,],[121,121,121,121,121,121,]),'random':([26,54,73,81,84,89,96,98,99,145,146,148,150,151,154,158,161,178,186,204,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'masdims':([36,],[70,]),'eramain':([7,],[17,]),'masdimsvar':([136,],[160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',198),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',204),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',209),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',221),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',227),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',231),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',232),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',235),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',241),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',244),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',245),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',248),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',255),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',260),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',264),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',267),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',271),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',275),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',276),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',279),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',284),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',285),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',306),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',307),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',308),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',309),
  ('factor -> random','factor',1,'p_factor','OpenRoonie.py',310),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',313),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',317),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',321),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',322),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',331),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',335),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',338),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',381),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',382),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',385),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',388),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',389),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',393),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',394),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',399),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',400),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',403),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',406),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',407),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',412),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',413),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',417),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',420),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',421),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',426),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',427),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',431),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',437),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',438),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',439),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',444),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',445),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',455),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',456),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',457),
  ('random -> RANDOM LPAREN expresion COMMA expresion RPAREN','random',6,'p_random','OpenRoonie.py',460),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',466),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',470),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',483),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',499),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',500),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',504),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',505),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',508),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',518),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',519),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',522),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',523),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',526),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',529),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',530),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',531),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',551),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',555),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',556),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',559),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',560),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',563),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',564),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',565),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',568),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',571),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',572),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',595),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',604),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',605),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',612),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',613),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',616),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',617),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',618),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',619),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',620),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',621),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',626),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',627),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',628),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',629),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',630),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',633),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',637),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',641),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',645),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',649),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',650),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',658),
]
