
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '105045C3133D8369469FD6B693485BC6'
    
_lr_action_items = {'RSQBRACKET':([52,62,63,64,66,67,68,69,71,72,73,74,75,76,85,86,87,88,89,95,96,99,103,106,109,118,119,120,121,122,123,124,125,126,127,128,129,131,132,137,141,143,146,148,],[77,-17,-18,-75,-75,-67,-72,-75,-75,-69,-66,-68,-70,-71,118,-65,-74,-25,-28,-29,-32,-33,-40,-19,-22,-73,-27,-26,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,-75,145,-24,-75,-23,]),'LESSTHANEQUAL':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,102,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'WHILE':([6,24,31,32,39,40,41,42,43,44,45,56,111,130,134,135,139,140,144,147,],[-49,-75,37,-48,-44,37,-45,-41,-49,-42,-43,-5,-14,-8,-75,-9,-4,-7,-6,-15,]),'ID':([2,3,6,9,10,11,12,13,14,20,24,27,31,32,35,39,40,41,42,43,44,45,51,53,55,56,57,65,90,91,93,94,97,98,100,101,102,104,107,108,111,115,130,133,134,135,139,140,142,144,147,],[4,-2,-49,-64,-63,-60,-61,-62,19,28,-75,19,38,-48,50,-44,38,-45,-41,-49,-42,-43,63,63,63,-5,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-14,63,-8,63,-75,-9,-4,-7,63,-6,-15,]),'PLUS':([62,63,66,67,68,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'ELSE':([56,134,],[-5,138,]),'IF':([6,24,31,32,39,40,41,42,43,44,45,56,111,130,134,135,139,140,144,147,],[-49,-75,46,-48,-44,46,-45,-41,-49,-42,-43,-5,-14,-8,-75,-9,-4,-7,-6,-15,]),'LPAREN':([21,28,37,46,48,51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[29,-55,51,55,57,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'DIVIDE':([62,63,66,67,68,72,73,74,75,76,82,86,87,118,121,],[-17,-18,94,-67,-72,-69,-66,-68,-70,-71,-69,-65,-74,-73,-16,]),'BOOL':([7,15,29,61,],[10,10,10,10,]),'$end':([1,30,56,],[0,-1,-5,]),'RBRACKET':([6,24,31,32,39,40,41,42,43,44,45,47,54,56,111,130,134,135,139,140,144,147,],[-49,-75,-75,-48,-44,-75,-45,-41,-47,-42,-43,56,-46,-5,-14,-8,-75,-9,-4,-7,-6,-15,]),'ISEQUALTO':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,104,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'STRING':([7,15,29,61,],[9,9,9,9,]),'EQUALS':([38,77,],[53,110,]),'PROGRAM':([0,],[3,]),'CTEFLOAT':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FALSE':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'MORETHAN':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,101,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'OR':([62,63,64,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,99,103,106,109,118,121,122,123,124,125,126,127,128,129,131,132,],[-17,-18,90,-75,-67,-72,-75,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-33,-40,-19,-22,-73,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,]),'MORETHANEQUAL':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,98,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'LSQBRACKET':([38,63,110,],[52,85,133,]),'LESSTHAN':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,97,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'FUNCTION':([5,6,8,24,32,56,58,],[-75,-49,15,-75,-48,-5,15,]),'INT':([7,15,29,61,],[11,11,11,11,]),'MAIN':([5,6,8,16,17,24,32,56,58,83,],[-75,-49,-75,-54,23,-75,-48,-5,-75,-53,]),'VAR':([5,6,24,31,32,39,40,41,42,43,44,45,56,111,130,134,135,139,140,144,147,],[7,-49,7,7,-48,-44,7,-45,-41,-49,-42,-43,-5,-14,-8,-75,-9,-4,-7,-6,-15,]),'TIMES':([62,63,66,67,68,72,73,74,75,76,82,86,87,118,121,],[-17,-18,93,-67,-72,-69,-66,-68,-70,-71,-69,-65,-74,-73,-16,]),'PRINT':([6,24,31,32,39,40,41,42,43,44,45,56,111,130,134,135,139,140,144,147,],[-49,-75,48,-48,-44,48,-45,-41,-49,-42,-43,-5,-14,-8,-75,-9,-4,-7,-6,-15,]),'MINUS':([62,63,66,67,68,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'CTESTRING':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[72,72,72,82,72,72,72,72,72,72,72,72,72,72,72,72,72,82,72,72,]),'CTEINT':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'RPAREN':([29,34,36,50,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,84,86,87,88,89,92,95,96,99,103,106,109,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,136,],[-75,49,-57,-75,-56,-59,-75,-17,-18,-75,-75,-67,-72,-75,105,-75,-69,-66,-68,-70,-71,112,113,-75,-69,-58,-65,-74,-25,-28,121,-29,-32,-33,-40,-19,-22,-10,-13,-11,-73,-27,-26,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,-12,]),'LBRACKET':([22,23,49,105,112,138,],[31,-3,31,31,31,31,]),'AND':([62,63,64,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,99,103,106,109,118,121,122,123,124,125,126,127,128,129,131,132,],[-17,-18,91,-75,-67,-72,-75,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-33,-40,-19,-22,-73,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,]),'CTECHAR':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'NOTEQUAL':([62,63,66,67,68,69,71,72,73,74,75,76,82,86,87,95,96,106,109,118,121,122,123,131,132,],[-17,-18,-75,-67,-72,100,-75,-69,-66,-68,-70,-71,-69,-65,-74,-29,-32,-19,-22,-73,-16,-30,-31,-21,-20,]),'FLOAT':([7,15,29,61,],[12,12,12,12,]),'CHAR':([7,15,29,61,],[13,13,13,13,]),'SEMICOLON':([4,18,19,25,26,33,62,63,64,66,67,68,69,71,72,73,74,75,76,78,86,87,88,89,95,96,99,103,106,109,113,118,119,120,121,122,123,124,125,126,127,128,129,131,132,145,],[5,24,-75,-50,-52,-51,-17,-18,-75,-75,-67,-72,-75,-75,-69,-66,-68,-70,-71,111,-65,-74,-25,-28,-29,-32,-33,-40,-19,-22,135,-73,-27,-26,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,147,]),'TRUE':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'COMMA':([19,50,62,63,64,66,67,68,69,71,72,73,74,75,76,81,82,86,87,88,89,95,96,99,103,106,109,118,119,120,121,122,123,124,125,126,127,128,129,131,132,137,146,],[27,61,-17,-18,-75,-75,-67,-72,-75,-75,-69,-66,-68,-70,-71,115,115,-65,-74,-25,-28,-29,-32,-33,-40,-19,-22,-73,-27,-26,-16,-30,-31,-35,-38,-36,-34,-39,-37,-21,-20,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varcte':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'masexp':([71,],[106,]),'masid':([19,],[25,]),'masargs':([50,],[59,]),'escritura':([31,40,],[39,39,]),'estatuto':([31,40,],[40,40,]),'expcomp':([51,53,55,57,65,90,91,115,133,142,],[64,64,64,64,64,119,120,64,64,64,]),'masexpresion':([64,],[88,]),'exp':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[69,69,69,69,69,69,69,122,123,124,125,126,127,128,129,131,132,69,69,69,]),'factor':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'vars':([5,24,31,40,],[8,32,41,41,]),'masprint':([81,82,],[114,117,]),'listaprint':([57,115,],[80,136,]),'expcompcontinuo':([69,],[99,]),'masterminos':([66,],[95,]),'funcs':([8,58,],[17,83,]),'args':([29,61,],[34,84,]),'comaexpresion':([137,146,],[141,148,]),'bloque':([22,49,105,112,138,],[30,58,130,134,144,]),'tipo':([7,15,29,61,],[14,20,35,35,]),'asignacion':([31,40,],[42,42,]),'empty':([5,8,19,24,29,31,40,50,58,61,63,64,66,69,71,81,82,134,137,146,],[6,16,26,6,36,43,43,60,16,36,87,89,96,103,109,116,116,140,143,143,]),'expresion':([51,53,55,57,65,115,133,142,],[70,78,79,81,92,81,137,146,]),'condicion':([31,40,],[44,44,]),'termino':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'programa':([0,],[1,]),'masbloque':([134,],[139,]),'ciclo':([31,40,],[45,45,]),'prog':([0,],[2,]),'funcaux':([15,],[21,]),'listaid':([14,27,],[18,33,]),'masestatuto':([31,40,],[47,54,]),'arr':([63,],[86,]),'ctebool':([51,53,55,57,65,90,91,93,94,97,98,100,101,102,104,107,108,115,133,142,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'main':([17,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',109),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',112),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',124),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',129),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',132),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',135),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',136),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',139),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',142),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',145),
  ('listaprint -> CTESTRING masprint','listaprint',2,'p_listaprint','OpenRoonie.py',146),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',149),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',150),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',153),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',154),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','OpenRoonie.py',157),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',158),
  ('factor -> ID','factor',1,'p_factor','OpenRoonie.py',159),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',162),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',165),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',166),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',167),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',170),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',171),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',174),
  ('masexpresion -> AND expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',177),
  ('masexpresion -> OR expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',178),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',179),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',182),
  ('masterminos -> TIMES exp','masterminos',2,'p_masterminos','OpenRoonie.py',185),
  ('masterminos -> DIVIDE exp','masterminos',2,'p_masterminos','OpenRoonie.py',186),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',187),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',190),
  ('expcompcontinuo -> MORETHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',193),
  ('expcompcontinuo -> LESSTHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',194),
  ('expcompcontinuo -> NOTEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',195),
  ('expcompcontinuo -> ISEQUALTO exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',196),
  ('expcompcontinuo -> MORETHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',197),
  ('expcompcontinuo -> LESSTHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',198),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',199),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',202),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',203),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',204),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',205),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',206),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',209),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',210),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',213),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',214),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',217),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',221),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',222),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',227),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',228),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',231),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',236),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',237),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',241),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',242),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',245),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',246),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',247),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',248),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',249),
  ('varcte -> ID arr','varcte',2,'p_varcte','OpenRoonie.py',253),
  ('varcte -> CTEINT','varcte',1,'p_varcte','OpenRoonie.py',254),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','OpenRoonie.py',255),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','OpenRoonie.py',256),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','OpenRoonie.py',257),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',258),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',261),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',262),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',265),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',266),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',272),
]
