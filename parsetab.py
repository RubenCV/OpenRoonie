
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3EF484B33A1EFB875D162F53F597E0C2'
    
_lr_action_items = {'RPAREN':([30,49,50,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,82,83,84,85,86,87,88,89,92,93,96,98,103,104,106,109,111,113,115,117,119,120,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,],[-89,-70,59,-89,-89,-87,-83,-89,-88,-79,-86,-89,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-89,-81,121,122,123,-72,-89,-69,-27,-25,-89,-53,-39,-89,-44,-89,-89,-32,147,-17,-14,-15,-71,-26,-51,-47,-45,-46,-52,-48,-50,-49,-38,-36,-35,-37,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,-16,]),'NOTEQUAL':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,101,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'ID':([2,3,6,9,10,11,12,13,14,23,24,25,29,32,36,37,38,39,41,42,45,48,51,53,54,55,57,78,80,94,95,97,99,100,101,102,105,107,108,110,112,114,118,149,151,156,157,159,161,162,164,165,170,171,],[4,-2,-62,-74,-75,-77,19,-73,-76,31,-89,19,34,-61,-55,-58,-57,-62,-56,-54,34,58,60,60,60,-6,60,-23,60,60,60,60,60,60,60,60,60,60,60,-18,60,60,60,60,-12,-89,-89,60,-4,-8,-10,-9,-19,-7,]),'$end':([1,28,55,],[0,-1,-6,]),'INT':([7,17,30,88,],[13,13,13,13,]),'LBRACKET':([20,21,59,122,123,152,153,154,163,165,168,],[29,-3,29,-89,-89,29,-5,29,-89,-9,29,]),'RBRACKET':([6,24,29,32,36,37,38,39,41,42,44,45,55,56,110,151,156,157,161,162,164,165,170,171,],[-62,-89,-89,-61,-55,-58,-57,-60,-56,-54,55,-89,-6,-59,-18,-12,-89,-89,-4,-8,-10,-9,-19,-7,]),'DIVIDE':([60,61,62,64,65,66,68,69,71,72,73,74,75,76,79,83,92,93,126,147,148,],[-89,-87,-83,-88,-79,-86,-22,108,-82,-80,-21,-78,-84,-81,-85,-81,-27,-25,-26,-24,-20,]),'SEMICOLON':([4,18,19,26,27,33,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,92,93,96,98,103,104,106,109,111,113,121,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,167,],[5,24,-89,-63,-65,-64,-89,-87,-83,-89,-88,-79,-86,-89,-22,-89,110,-82,-80,-21,-78,-84,-81,-89,-85,-27,-25,-89,-53,-39,-89,-44,-89,-89,-32,151,-26,-51,-47,-45,-46,-52,-48,-50,-49,-38,-36,-35,-37,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,170,]),'FALSE':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[64,64,64,64,-23,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'MAIN':([5,6,8,15,16,24,32,55,90,125,],[-89,-62,-89,-67,21,-89,-61,-6,-89,-66,]),'BOOL':([7,17,30,88,],[14,14,14,14,]),'OR':([60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,83,92,93,96,98,106,109,111,113,126,127,128,129,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,-89,-88,-79,-86,102,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-89,-53,-44,-89,-89,-32,-26,-51,-47,-45,-46,-52,-48,-50,-49,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'STRING':([7,17,30,88,],[11,11,11,11,]),'LESSTHANEQUAL':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,97,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'PLUS':([60,61,62,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,126,139,140,141,142,147,148,],[-89,-87,-83,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,112,-85,-81,-27,-25,-44,-89,-26,-42,-43,-41,-40,-24,-20,]),'LSQBRACKET':([34,60,116,],[52,91,149,]),'IF':([6,24,29,32,36,37,38,39,41,42,45,55,110,151,156,157,161,162,164,165,170,171,],[-62,-89,40,-61,-55,-58,-57,-62,-56,-54,40,-6,-18,-12,-89,-89,-4,-8,-10,-9,-19,-7,]),'CTESTRING':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[66,66,66,66,-23,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNCTION':([5,6,8,24,32,55,90,],[-89,-62,17,-89,-61,-6,17,]),'ELSE':([55,156,],[-6,163,]),'TRUE':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[61,61,61,61,-23,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FLOAT':([7,17,30,88,],[9,9,9,9,]),'MORETHANEQUAL':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,94,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'ISEQUALTO':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,100,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'PRINT':([6,24,29,32,36,37,38,39,41,42,45,55,110,151,156,157,161,162,164,165,170,171,],[-62,-89,43,-61,-55,-58,-57,-62,-56,-54,43,-6,-18,-12,-89,-89,-4,-8,-10,-9,-19,-7,]),'VAR':([5,6,24,29,32,36,37,38,39,41,42,45,55,110,151,156,157,161,162,164,165,170,171,],[7,-62,7,7,-61,-55,-58,-57,-62,-56,-54,7,-6,-18,-12,-89,-89,-4,-8,-10,-9,-19,-7,]),'WHILE':([6,24,29,32,36,37,38,39,41,42,45,55,110,151,156,157,161,162,164,165,170,171,],[-62,-89,47,-61,-55,-58,-57,-62,-56,-54,47,-6,-18,-12,-89,-89,-4,-8,-10,-9,-19,-7,]),'CHAR':([7,17,30,88,],[10,10,10,10,]),'AND':([60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,83,92,93,96,98,106,109,111,113,126,127,128,129,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,-89,-88,-79,-86,105,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-89,-53,-44,-89,-89,-32,-26,-51,-47,-45,-46,-52,-48,-50,-49,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'PROGRAM':([0,],[3,]),'CTEINT':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[62,62,62,62,-23,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CTECHAR':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[79,79,79,79,-23,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'MORETHAN':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,95,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'TIMES':([60,61,62,64,65,66,68,69,71,72,73,74,75,76,79,83,92,93,126,147,148,],[-89,-87,-83,-88,-79,-86,-22,107,-82,-80,-21,-78,-84,-81,-85,-81,-27,-25,-26,-24,-20,]),'RSQBRACKET':([52,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,91,92,93,96,98,103,104,106,109,111,113,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,155,158,160,166,169,],[81,-89,-87,-83,-89,-88,-79,-86,-89,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,126,-27,-25,-89,-53,-39,-89,-44,-89,-89,-32,-26,-51,-47,-45,-46,-52,-48,-50,-49,-38,-36,-35,-37,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,-89,-34,167,-89,-33,]),'LESSTHAN':([60,61,62,63,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,111,113,126,139,140,141,142,143,144,145,146,147,148,],[-89,-87,-83,99,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,-81,-27,-25,-44,-89,-89,-32,-26,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,]),'EQUALS':([34,81,],[51,116,]),'LPAREN':([22,31,35,40,43,46,47,51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[30,-68,53,54,-13,57,-11,78,78,78,78,-23,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MINUS':([60,61,62,64,65,66,68,69,71,72,73,74,75,76,77,79,83,92,93,106,109,126,139,140,141,142,147,148,],[-89,-87,-83,-88,-79,-86,-22,-89,-82,-80,-21,-78,-84,-81,114,-85,-81,-27,-25,-44,-89,-26,-42,-43,-41,-40,-24,-20,]),'COMMA':([19,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,82,83,92,93,96,98,103,104,106,109,111,113,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,155,166,],[25,88,-89,-87,-83,-89,-88,-79,-86,-89,-22,-89,-82,-80,-21,-78,-84,-81,-89,-85,118,118,-27,-25,-89,-53,-39,-89,-44,-89,-89,-32,-26,-51,-47,-45,-46,-52,-48,-50,-49,-38,-36,-35,-37,-42,-43,-41,-40,-28,-29,-30,-31,-24,-20,159,159,]),'CTEFLOAT':([51,53,54,57,78,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[75,75,75,75,-23,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masexp':([77,],[111,]),'empty':([5,8,19,24,29,30,45,58,60,63,67,69,77,82,83,88,90,96,104,109,111,122,123,155,156,157,163,166,],[6,15,27,6,39,49,39,87,92,98,103,106,113,117,117,49,15,130,136,141,144,153,153,158,162,165,165,158,]),'masbloque':([156,],[161,]),'ctestring':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[76,83,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,83,76,76,]),'ctefloat':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'programa':([0,],[1,]),'addQTD':([109,],[142,]),'escritura':([29,45,],[38,38,]),'expcomp':([51,53,54,57,80,94,95,97,99,100,101,102,105,118,149,159,],[67,67,67,67,67,127,128,131,132,133,134,67,67,67,67,67,]),'ciclo':([29,45,],[41,41,]),'expresion':([51,53,54,57,80,102,105,118,149,159,],[70,82,85,86,115,135,138,82,155,166,]),'goto':([157,163,],[164,168,]),'ctechar':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'masterminos':([69,],[109,]),'while':([29,45,],[46,46,]),'masestatuto':([29,45,],[44,56,]),'varid':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'funcs':([8,90,],[16,125,]),'gotoF':([122,123,],[152,154,]),'masprint':([82,83,],[119,120,]),'masexpresion':([67,],[104,]),'args':([30,88,],[50,124,]),'exp':([51,53,54,57,80,94,95,97,99,100,101,102,105,112,114,118,149,159,],[63,63,63,63,63,63,63,63,63,63,63,63,63,145,146,63,63,63,]),'condicion':([29,45,],[36,36,]),'prog':([0,],[2,]),'bloque':([20,59,152,154,168,],[28,90,156,157,171,]),'listaid':([12,25,],[18,33,]),'addQPPM':([111,],[143,]),'vars':([5,24,29,45,],[8,32,37,37,]),'main':([16,],[20,]),'comaexpresion':([155,166,],[160,169,]),'estatuto':([29,45,],[45,45,]),'masid':([19,],[26,]),'cteint':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'funcaux':([17,],[22,]),'factor':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'listaprint':([53,118,],[84,150,]),'rightparen':([115,],[148,]),'ctebool':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'asignacion':([29,45,],[42,42,]),'varcte':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'tipo':([7,17,30,88,],[12,23,48,48,]),'expcompcontinuo':([63,],[96,]),'termino':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[77,77,77,77,77,77,77,77,77,77,77,77,77,139,140,77,77,77,77,77,]),'print':([29,45,],[35,35,]),'addQPComp':([96,],[129,]),'leftparen':([51,53,54,57,80,94,95,97,99,100,101,102,105,107,108,112,114,118,149,159,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'masargs':([58,],[89,]),'arr':([60,],[93,]),'addQPAO':([104,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',158),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',161),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',166),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',171),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',175),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',182),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',185),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',186),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',188),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',195),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',200),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',204),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',207),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',211),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',212),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',215),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',216),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',222),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',223),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',229),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',230),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',231),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',234),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',238),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',242),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',246),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',247),
  ('exp -> termino masexp addQPPM','exp',3,'p_exp','OpenRoonie.py',250),
  ('addQPPM -> empty','addQPPM',1,'p_addQPPM','OpenRoonie.py',253),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',257),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',258),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',259),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',263),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',264),
  ('expresion -> expcomp masexpresion addQPAO','expresion',3,'p_expresion','OpenRoonie.py',267),
  ('addQPAO -> empty','addQPAO',1,'p_addQPAO','OpenRoonie.py',270),
  ('masexpresion -> AND expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',274),
  ('masexpresion -> OR expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',275),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',276),
  ('termino -> factor masterminos addQTD','termino',3,'p_termino','OpenRoonie.py',280),
  ('addQTD -> empty','addQTD',1,'p_addQTD','OpenRoonie.py',283),
  ('masterminos -> TIMES termino','masterminos',2,'p_masterminos','OpenRoonie.py',287),
  ('masterminos -> DIVIDE termino','masterminos',2,'p_masterminos','OpenRoonie.py',288),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',289),
  ('expcomp -> exp expcompcontinuo addQPComp','expcomp',3,'p_expcomp','OpenRoonie.py',293),
  ('addQPComp -> empty','addQPComp',1,'p_addQPComp','OpenRoonie.py',296),
  ('expcompcontinuo -> MORETHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',300),
  ('expcompcontinuo -> LESSTHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',301),
  ('expcompcontinuo -> NOTEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',302),
  ('expcompcontinuo -> ISEQUALTO expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',303),
  ('expcompcontinuo -> MORETHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',304),
  ('expcompcontinuo -> LESSTHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',305),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',306),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',310),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',311),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',312),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',313),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',314),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',317),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',318),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',321),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',322),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',325),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',329),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',330),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',334),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',335),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',338),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',343),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',344),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',348),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',349),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',352),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',353),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',354),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',355),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',356),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',361),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',362),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',363),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',364),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',365),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',368),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',372),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',376),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',380),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',384),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',385),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',393),
]
