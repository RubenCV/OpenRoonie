
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0474E7EFED8C948981F6B2C49911EC9C'
    
_lr_action_items = {'VOID':([6,16,29,61,],[9,9,9,9,]),'LSQBRACKET':([40,98,111,],[63,138,157,]),'VAR':([5,7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[6,-74,6,6,-73,-63,6,-74,-60,-56,-57,-58,-59,-62,6,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'INT':([6,16,29,61,],[14,14,14,14,]),'FALSE':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[80,80,80,80,80,-25,80,80,80,-33,-34,-39,80,-38,-51,-53,-50,-48,80,-49,-52,-43,-44,80,80,80,-18,80,80,]),'RBRACKET':([7,28,31,34,39,41,43,44,48,49,52,53,54,56,65,67,69,108,117,154,171,173,175,177,181,182,183,185,189,191,],[-74,-106,-106,-73,-63,-106,-72,-60,-56,69,-57,-58,-59,-62,-71,-61,-6,155,-19,-83,-12,-82,-106,-106,-9,-10,-8,-4,-20,-7,]),'CTECHAR':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[90,90,90,90,90,-25,90,90,90,-33,-34,-39,90,-38,-51,-53,-50,-48,90,-49,-52,-43,-44,90,90,90,-18,90,90,]),'COMMENT':([7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[-74,-106,56,-73,-63,56,-74,-60,-56,-57,-58,-59,-62,56,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'COMMA':([19,29,36,38,57,61,75,77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,98,100,103,105,112,116,118,121,126,129,134,135,139,140,145,158,159,160,161,162,163,164,167,174,187,],[26,-106,-86,61,-85,-106,61,-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-106,-102,-98,-101,-106,-97,-106,-100,-106,142,149,149,-30,-32,-37,-41,-55,-47,-46,-42,-29,-27,-64,-31,-40,-26,-21,-54,-45,-28,142,180,180,]),'TIMES':([78,79,80,81,82,83,84,86,87,90,91,92,95,96,97,98,105,139,140,145,160,161,164,],[-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,-97,133,-100,-106,-98,-29,-27,-64,-26,-21,-28,]),'MAIN':([5,7,8,17,18,28,34,59,73,109,155,156,],[-106,-74,-106,23,-80,-106,-73,-106,-79,-106,-81,-78,]),'TRUE':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[83,83,83,83,83,-25,83,83,83,-33,-34,-39,83,-38,-51,-53,-50,-48,83,-49,-52,-43,-44,83,83,83,-18,83,83,]),'AND':([77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,98,105,112,116,126,129,134,135,139,140,145,158,160,161,162,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,122,-102,-98,-101,-106,-97,-106,-100,-106,-98,-30,-32,-55,-47,-46,-42,-29,-27,-64,-31,-26,-21,-54,-45,-28,]),'STRING':([6,16,29,61,],[12,12,12,12,]),'LPAREN':([21,30,40,42,46,47,50,51,55,64,66,68,70,71,88,93,98,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[29,-84,-65,66,-11,68,70,-13,71,88,88,88,88,88,-25,88,-65,88,88,-33,-34,-39,88,-38,-51,-53,-50,-48,88,-49,-52,-43,-44,88,88,88,-18,88,88,]),'DIVIDE':([78,79,80,81,82,83,84,86,87,90,91,92,95,96,97,98,105,139,140,145,160,161,164,],[-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,-97,136,-100,-106,-98,-29,-27,-64,-26,-21,-28,]),'MORETHANEQUAL':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,132,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),'FUNCTION':([5,7,8,28,34,59,109,155,],[-106,-74,16,-106,-73,16,16,-81,]),'RETURN':([7,28,34,39,41,43,44,48,52,53,54,56,58,65,67,69,72,117,171,175,177,181,182,183,185,189,191,],[-74,-106,-73,-63,-106,-72,-60,-56,-57,-58,-59,-62,-106,-71,-61,-6,107,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'CPPCOMMENT':([7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[-74,-106,39,-73,-63,39,-74,-60,-56,-57,-58,-59,-62,39,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'LBRACKET':([23,24,37,74,141,152,165,166,172,181,184,188,],[-3,31,58,58,-106,-106,31,-5,31,-9,-106,31,]),'PROGRAM':([0,],[1,]),'OR':([77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,98,105,112,116,126,129,134,135,139,140,145,158,160,161,162,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,119,-102,-98,-101,-106,-97,-106,-100,-106,-98,-30,-32,-55,-47,-46,-42,-29,-27,-64,-31,-26,-21,-54,-45,-28,]),'$end':([2,32,69,],[0,-1,-6,]),'WHILE':([7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[-74,-106,46,-73,-63,46,-74,-60,-56,-57,-58,-59,-62,46,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'PRINT':([7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[-74,-106,51,-73,-63,51,-74,-60,-56,-57,-58,-59,-62,51,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'MORETHAN':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,128,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),'IF':([7,28,31,34,39,41,43,44,48,52,53,54,56,58,67,69,117,171,175,177,181,182,183,185,189,191,],[-74,-106,55,-73,-63,55,-74,-60,-56,-57,-58,-59,-62,55,-61,-6,-19,-12,-106,-106,-9,-10,-8,-4,-20,-7,]),'LESSTHAN':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,131,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),'CTEINT':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[97,97,97,97,97,-25,97,97,97,-33,-34,-39,97,-38,-51,-53,-50,-48,97,-49,-52,-43,-44,97,97,97,-18,97,97,]),'RSQBRACKET':([63,77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,98,112,116,118,121,126,129,134,135,138,139,140,145,158,159,160,161,162,163,164,174,178,179,187,190,],[76,-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-106,-102,-98,-101,-106,-97,-106,-100,-106,-30,-32,-37,-41,-55,-47,-46,-42,164,-29,-27,-64,-31,-40,-26,-21,-54,-45,-28,-106,186,-36,-106,-35,]),'ELSE':([69,177,],[-6,184,]),'ID':([1,3,7,9,10,11,12,13,14,15,22,26,28,31,34,35,39,41,43,44,48,52,53,54,56,58,64,66,67,68,69,70,71,88,93,107,113,114,115,117,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,171,175,177,180,181,182,183,185,189,191,],[-2,4,-74,-94,19,-91,-93,-92,-89,-90,30,19,-106,40,-73,57,-63,40,-74,-60,-56,-57,-58,-59,-62,40,98,98,-61,98,-6,98,98,-25,98,98,98,-33,-34,-19,-39,98,-38,-51,-53,-50,-48,98,-49,-52,-43,-44,98,98,98,-18,98,-12,-106,-106,98,-9,-10,-8,-4,-20,-7,]),'FLOAT':([6,16,29,61,],[15,15,15,15,]),'NOTEQUAL':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,127,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),'CTESTRING':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[82,82,82,82,82,-25,82,82,82,-33,-34,-39,82,-38,-51,-53,-50,-48,82,-49,-52,-43,-44,82,82,82,-18,82,82,]),'ISEQUALTO':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,124,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),'RPAREN':([29,36,38,57,60,61,62,68,75,77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,110,112,116,118,121,123,126,129,134,135,139,140,143,144,145,146,147,151,158,159,160,161,162,163,164,167,168,169,170,176,],[37,-86,-106,-85,74,-106,-88,-106,-106,-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-106,-102,-98,-101,-106,-97,-106,-100,-106,141,-106,145,-67,-106,150,-98,152,-87,-30,-32,-37,-41,160,-55,-47,-46,-42,-29,-27,-106,-69,-64,-14,-17,-15,-31,-40,-26,-21,-54,-45,-28,-106,-66,-70,-16,-68,]),'SEMICOLON':([4,19,20,25,27,33,45,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,94,95,96,97,98,107,112,116,118,121,126,129,134,135,139,140,145,150,153,158,159,160,161,162,163,164,186,],[5,-106,28,-77,-75,-76,67,-106,-22,-99,-105,-96,-103,-104,-23,117,-24,-95,-106,-102,-98,-101,-106,-97,-106,-100,-106,154,-30,-32,-37,-41,-55,-47,-46,-42,-29,-27,-64,171,173,-31,-40,-26,-21,-54,-45,-28,189,]),'CHAR':([6,16,29,61,],[11,11,11,11,]),'BOOL':([6,16,29,61,],[13,13,13,13,]),'MINUS':([77,78,79,80,81,82,83,84,86,87,90,91,92,95,96,97,98,105,134,135,139,140,145,160,161,163,164,],[115,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,-97,-106,-100,-106,-98,-46,-42,-29,-27,-64,-26,-21,-45,-28,]),'CTEFLOAT':([64,66,68,70,71,88,93,107,113,114,115,119,120,122,124,125,127,128,130,131,132,133,136,137,142,148,149,157,180,],[92,92,92,92,92,-25,92,92,92,-33,-34,-39,92,-38,-51,-53,-50,-48,92,-49,-52,-43,-44,92,92,92,-18,92,92,]),'EQUALS':([40,76,],[64,111,]),'PLUS':([77,78,79,80,81,82,83,84,86,87,90,91,92,95,96,97,98,105,134,135,139,140,145,160,161,163,164,],[114,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,-97,-106,-100,-106,-98,-46,-42,-29,-27,-64,-26,-21,-45,-28,]),'LESSTHANEQUAL':([77,78,79,80,81,82,83,84,86,87,90,91,92,94,95,96,97,98,105,112,116,134,135,139,140,145,158,160,161,163,164,],[-106,-22,-99,-105,-96,-103,-104,-23,-24,-95,-102,-98,-101,125,-97,-106,-100,-106,-98,-30,-32,-46,-42,-29,-27,-64,-31,-26,-21,-45,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masexpresion':([89,],[118,]),'ctebool':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'prog':([0,],[3,]),'listaid':([10,26,],[20,33,]),'asignacion':([31,41,58,],[48,48,48,]),'comaexpresion':([174,187,],[178,190,]),'tipo':([6,16,29,61,],[10,22,35,35,]),'addQPPM':([77,],[113,]),'masprint':([103,105,],[146,151,]),'llamafunc':([31,41,58,64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[45,45,45,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'cteint':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'checarparams':([143,],[168,]),'masid':([19,],[27,]),'listaprint':([70,148,],[104,170,]),'masestatuto':([31,41,58,],[49,65,72,]),'print':([31,41,58,],[50,50,50,]),'leftparen':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'estatuto':([31,41,58,],[41,41,41,]),'rightparen':([123,],[161,]),'exp':([64,66,68,70,71,93,107,113,120,130,142,148,157,180,],[94,94,94,94,94,94,94,158,94,94,94,94,94,94,]),'expcompcontinuo':([94,],[129,]),'programa':([0,],[2,]),'masterminos':([96,],[135,]),'retorno':([72,],[108,]),'termino':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[77,77,77,77,77,77,77,77,77,77,163,77,77,77,77,]),'varcte':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'masargs':([38,75,],[60,110,]),'listafuncargs':([100,167,],[143,176,]),'idfunc':([31,41,58,64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'escritura':([31,41,58,],[54,54,54,]),'addQPComp':([94,],[130,]),'ctefloat':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'addQTD':([96,],[137,]),'funcaux':([16,],[21,]),'args':([29,61,],[38,75,]),'addQPAO':([89,],[120,]),'empty':([5,8,19,28,29,31,38,41,58,59,61,68,75,77,89,94,96,98,100,103,105,109,141,143,152,167,174,175,177,184,187,],[7,18,25,7,36,43,62,43,43,18,36,102,62,116,121,126,134,139,144,147,147,18,166,169,166,144,179,181,183,181,179,]),'masexp':([77,],[112,]),'while':([31,41,58,],[42,42,42,]),'expresion':([64,66,68,70,71,93,107,120,142,148,157,180,],[85,99,100,103,106,123,153,159,167,103,174,187,]),'goto':([175,184,],[182,188,]),'vars':([5,28,31,41,58,],[8,34,44,44,44,]),'expcomp':([64,66,68,70,71,93,107,120,130,142,148,157,180,],[89,89,89,89,89,89,89,89,162,89,89,89,89,]),'arr':([98,],[140,]),'gotoF':([141,152,],[165,172,]),'main':([17,],[24,]),'bloque':([24,165,172,188,],[32,175,177,191,]),'ctestring':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[91,91,91,105,91,91,91,91,91,91,91,91,105,91,91,]),'bloquefunc':([37,74,],[59,109,]),'addQPP':([103,105,],[148,148,]),'condicion':([31,41,58,],[52,52,52,]),'ciclo':([31,41,58,],[53,53,53,]),'funcargs':([68,],[101,]),'ctechar':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'factor':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'masbloque':([177,],[185,]),'funcs':([8,59,109,],[17,73,156,]),'varid':([64,66,68,70,71,93,107,113,120,130,137,142,148,157,180,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',185),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',191),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',206),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',214),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',218),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',225),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',228),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',229),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',231),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',238),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',243),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',247),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',250),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',254),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',255),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',259),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',260),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',263),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',268),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',269),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',275),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',276),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',277),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',278),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',281),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',285),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',289),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',293),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',294),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',297),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',300),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',301),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',305),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',306),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',311),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',312),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',315),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',318),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',319),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',324),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',325),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',329),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',332),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',333),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',338),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',339),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',343),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',346),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',347),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',348),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',349),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',350),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',351),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',356),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',357),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',361),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',362),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',363),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',364),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',365),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',366),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',367),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',368),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',371),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',377),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',391),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',392),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',395),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',396),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',399),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',407),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',408),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',411),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',412),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',415),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',420),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',421),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',424),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',425),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',426),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',429),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',432),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',433),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',451),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',457),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',458),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',465),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',466),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',469),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',470),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',471),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',472),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',473),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',474),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',479),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',480),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',481),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',482),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',483),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',486),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',490),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',494),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',498),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',502),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',503),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',511),
]
