
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F322A017BE15C95DD80070A9B1AF322D'
    
_lr_action_items = {'LPAREN':([24,32,34,36,41,55,62,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,92,96,99,101,104,109,110,125,127,130,133,141,162,163,171,175,192,],[34,61,-28,-70,34,91,-91,34,-42,-41,-56,-52,-55,34,-51,-53,-54,34,-46,-47,-37,34,-36,34,-70,127,130,131,-16,-14,133,34,34,34,34,34,-21,34,34,34,34,]),'MAIN':([5,6,8,16,17,21,22,29,58,134,152,173,182,185,],[-113,-79,-113,-113,-3,-87,31,-113,-78,-113,-86,-113,-88,-85,]),'RPAREN':([35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,61,63,64,68,69,77,79,80,84,85,87,90,91,111,114,115,116,117,118,119,120,121,122,123,124,136,137,138,139,140,142,143,146,147,148,149,150,151,154,156,157,158,164,165,166,172,174,177,],[-25,-113,-26,-113,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,112,-32,-30,-40,-44,-58,-50,118,-45,-49,-33,-35,-113,-93,-113,-31,-43,-57,-29,-24,-48,-34,-113,-72,143,-92,-113,-95,155,-74,-113,-69,161,-113,-105,167,168,169,-113,-113,-75,-71,-20,-17,-18,-94,-73,-19,]),'LESSTHANEQUAL':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,71,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'TRUE':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[40,-28,40,40,-42,-41,-56,-52,-55,40,-51,-53,-54,40,-46,-47,-37,40,-36,40,40,40,40,40,40,-21,40,40,40,40,]),'RETURN':([6,29,58,93,94,95,97,100,102,103,105,106,108,128,129,132,135,153,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,-59,-62,-61,-113,-64,-63,-77,-67,-60,-66,-76,-65,-9,-113,171,-22,-113,-113,-15,-8,-113,-68,-113,-6,-7,-113,-113,-5,-113,-11,-13,-12,-113,-23,-10,]),'SEMICOLON':([4,18,19,20,25,27,28,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,63,64,68,69,77,79,84,85,87,90,98,115,116,117,118,119,120,121,143,144,161,168,171,184,201,],[5,-113,-113,29,-82,-84,-80,-25,-113,-26,-113,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-81,-109,-113,-105,-113,-102,-83,-32,-30,-40,-44,-58,-50,-45,-49,-33,-35,129,-31,-43,-57,-29,-24,-48,-34,-69,159,176,180,183,191,204,]),'STRING':([7,23,61,137,],[10,10,10,10,]),'INT':([7,23,61,137,],[13,13,13,13,]),'CTEINT':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[46,-28,46,46,-42,-41,-56,-52,-55,46,-51,-53,-54,46,-46,-47,-37,46,-36,46,46,46,46,46,46,-21,46,46,46,46,]),'IF':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,99,-59,-62,-61,99,-64,-63,-79,-67,-60,-66,-65,-9,99,-22,-113,-113,-15,-8,99,-68,99,-6,-7,-113,-113,-5,-113,-11,-13,-12,99,-23,-10,]),'CTESTRING':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[47,-28,47,47,-42,-41,-56,-52,-55,47,-51,-53,-54,47,-46,-47,-37,47,-36,47,47,47,47,47,47,-21,47,47,47,47,]),'TIMES':([35,36,37,40,42,43,44,45,46,47,48,49,51,52,53,56,63,64,115,118,119,143,148,],[-25,-113,-26,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,82,-105,-102,-32,-30,-31,-29,-24,-69,-105,]),'NOTEQUAL':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,76,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'$end':([2,59,132,],[0,-1,-9,]),'CPPCOMMENT':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,105,-59,-62,-61,105,-64,-63,-79,-67,-60,-66,-65,-9,105,-22,-113,-113,-15,-8,105,-68,105,-6,-7,-113,-113,-5,-113,-11,-13,-12,105,-23,-10,]),'LESSTHAN':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,72,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'MORETHANEQUAL':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,73,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'AND':([35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,77,79,84,85,87,90,115,117,118,119,120,121,143,148,],[-25,-113,-26,70,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-58,-50,-45,-49,-33,-35,-31,-57,-29,-24,-48,-34,-69,-105,]),'DIVIDE':([35,36,37,40,42,43,44,45,46,47,48,49,51,52,53,56,63,64,115,118,119,143,148,],[-25,-113,-26,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,83,-105,-102,-32,-30,-31,-29,-24,-69,-105,]),'PLUS':([35,36,37,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,115,118,119,120,143,148,],[-25,-113,-26,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,89,-102,-32,-30,-45,-49,-31,-29,-24,-48,-69,-105,]),'OR':([35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,77,79,84,85,87,90,115,117,118,119,120,121,143,148,],[-25,-113,-26,67,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-58,-50,-45,-49,-33,-35,-31,-57,-29,-24,-48,-34,-69,-105,]),'MORETHAN':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,75,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'BOOL':([7,23,61,137,],[9,9,9,9,]),'ISEQUALTO':([35,36,37,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,87,90,115,118,119,120,121,143,148,],[-25,-113,-26,78,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,-45,-49,-33,-35,-31,-29,-24,-48,-34,-69,-105,]),'ID':([1,3,6,9,10,11,12,13,14,15,24,26,29,33,34,41,58,60,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,93,94,95,97,100,102,103,105,106,108,113,125,127,129,130,131,132,133,135,141,159,162,163,167,169,171,175,176,178,179,180,181,187,188,189,190,192,195,196,197,198,199,202,204,205,],[4,-2,-79,-99,-100,18,-98,-96,-101,-97,36,18,-113,62,-28,36,-78,92,36,-42,-41,-56,-52,-55,36,-51,-53,-54,36,-46,-47,-37,36,-36,36,-59,-62,-61,92,-64,-63,-79,-67,-60,-66,136,36,36,-65,36,150,-9,36,92,36,-22,-21,36,-113,-113,36,36,-15,-8,92,-68,92,-6,-7,-113,-113,36,-5,-113,-11,-13,-12,92,-23,-10,]),'COMMENT':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,108,-59,-62,-61,108,-64,-63,-79,-67,-60,-66,-65,-9,108,-22,-113,-113,-15,-8,108,-68,108,-6,-7,-113,-113,-5,-113,-11,-13,-12,108,-23,-10,]),'VOID':([7,23,61,137,],[14,14,14,14,]),'FALSE':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[43,-28,43,43,-42,-41,-56,-52,-55,43,-51,-53,-54,43,-46,-47,-37,43,-36,43,43,43,43,43,43,-21,43,43,43,43,]),'EQUALS':([18,92,145,],[24,125,160,]),'READ':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,101,-59,-62,-61,101,-64,-63,-79,-67,-60,-66,-65,-9,101,-22,-113,-113,-15,-8,101,-68,101,-6,-7,-113,-113,-5,-113,-11,-13,-12,101,-23,-10,]),'MINUS':([35,36,37,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,84,85,115,118,119,120,143,148,],[-25,-113,-26,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,86,-102,-32,-30,-45,-49,-31,-29,-24,-48,-69,-105,]),'CHAR':([7,23,61,137,],[12,12,12,12,]),'ELSE':([6,29,58,93,94,95,100,102,105,106,108,129,132,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,-59,-62,-61,-64,-63,-67,-60,-66,-65,-9,-22,-113,-113,-15,-8,-113,-68,-113,-6,-7,196,-113,-5,-113,-11,-13,-12,-113,-23,-10,]),'FLOAT':([7,23,61,137,],[15,15,15,15,]),'CTECHAR':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[51,-28,51,51,-42,-41,-56,-52,-55,51,-51,-53,-54,51,-46,-47,-37,51,-36,51,51,51,51,51,51,-21,51,51,51,51,]),'VAR':([5,6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[7,-79,7,-78,7,-59,-62,-61,7,-64,-63,-79,-67,-60,-66,-65,-9,7,-22,-113,-113,-15,-8,7,-68,7,-6,-7,-113,-113,-5,-113,-11,-13,-12,7,-23,-10,]),'PRINT':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,104,-59,-62,-61,104,-64,-63,-79,-67,-60,-66,-65,-9,104,-22,-113,-113,-15,-8,104,-68,104,-6,-7,-113,-113,-5,-113,-11,-13,-12,104,-23,-10,]),'RSQBRACKET':([35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,52,53,54,56,63,64,65,68,69,77,79,84,85,87,90,115,116,117,118,119,120,121,126,143,186,193,194,200,203,],[-25,-113,-26,-113,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-109,-113,-105,-113,-102,-32,-30,115,-40,-44,-58,-50,-45,-49,-33,-35,-31,-43,-57,-29,-24,-48,-34,145,-69,-113,201,-39,-113,-38,]),'LSQBRACKET':([36,92,160,],[65,126,175,]),'CTEFLOAT':([24,34,41,66,67,70,71,72,73,74,75,76,78,81,82,83,86,88,89,91,125,127,130,133,141,162,163,171,175,192,],[48,-28,48,48,-42,-41,-56,-52,-55,48,-51,-53,-54,48,-46,-47,-37,48,-36,48,48,48,48,48,48,-21,48,48,48,48,]),'LBRACKET':([30,31,112,155,167,169,178,179,181,196,199,202,],[60,-4,135,135,-113,-113,-8,60,60,-113,-12,60,]),'RBRACKET':([6,29,58,60,93,94,95,97,100,102,103,105,106,107,108,128,129,132,159,167,169,170,176,178,179,180,181,183,187,188,189,190,191,195,196,197,198,199,202,204,205,],[-79,-113,-78,-113,-59,-62,-61,-113,-64,-63,-77,-67,-60,132,-66,-76,-65,-9,-22,-113,-113,182,-15,-8,-113,-68,-113,-90,-6,-7,-113,-113,-89,-5,-113,-11,-13,-12,-113,-23,-10,]),'PROGRAM':([0,],[3,]),'WHILE':([6,29,58,60,93,94,95,97,100,102,103,105,106,108,129,132,135,159,167,169,176,178,179,180,181,187,188,189,190,195,196,197,198,199,202,204,205,],[-79,-113,-78,109,-59,-62,-61,109,-64,-63,-79,-67,-60,-66,-65,-9,109,-22,-113,-113,-15,-8,109,-68,109,-6,-7,-113,-113,-5,-113,-11,-13,-12,109,-23,-10,]),'COMMA':([18,19,25,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,61,63,64,68,69,77,79,84,85,87,90,111,114,115,116,117,118,119,120,121,122,136,137,143,147,148,154,156,186,200,],[-113,26,-82,-25,-113,-26,-113,-113,-111,-27,-112,-103,-104,-107,-110,-108,-106,-81,-109,-113,-105,-113,-102,-113,-32,-30,-40,-44,-58,-50,-45,-49,-33,-35,-93,137,-31,-43,-57,-29,-24,-48,-34,141,-92,-113,-69,162,162,137,141,192,192,]),'FUNCTION':([5,6,8,16,17,29,58,134,173,182,],[-113,-79,-113,23,-3,-113,-78,23,23,-88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masexp':([54,],[87,]),'bloquefunc':([112,155,],[134,173,]),'masexpresion':([38,],[68,]),'asignacion':([60,97,135,179,181,202,],[93,93,93,93,93,93,]),'escritura':([60,97,135,179,181,202,],[94,94,94,94,94,94,]),'programa':([0,],[2,]),'masargs':([114,154,],[139,172,]),'masprint':([147,148,],[165,166,]),'leftparen':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'estatuto':([60,97,135,179,181,202,],[97,97,97,187,187,187,]),'vars':([5,29,60,97,135,179,181,202,],[8,58,100,100,100,100,100,100,]),'print':([60,97,135,179,181,202,],[96,96,96,96,96,96,]),'listaprint':([127,163,],[146,177,]),'addQPAO':([38,],[66,]),'masid':([19,],[28,]),'addQPPM':([54,],[88,]),'prog':([0,],[1,]),'initvar':([11,26,],[19,19,]),'gotoF':([167,169,],[179,181,]),'ctestring':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[53,53,53,53,53,53,53,53,148,53,53,53,148,53,53,53,]),'masbloque':([189,],[195,]),'addQTD':([52,],[81,]),'tipo':([7,23,61,137,],[11,33,113,113,]),'funcargs':([91,],[124,]),'masterminos':([52,],[84,]),'cteint':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'goto':([190,196,],[198,202,]),'estatutobloque':([179,181,202,],[189,190,205,]),'main':([22,],[30,]),'ctebool':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'addQPP':([147,148,],[163,163,]),'varcte':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'funcs':([16,134,173,],[22,152,185,]),'listafuncargs':([122,156,],[142,174,]),'varid':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'arr':([36,],[64,]),'exp':([24,41,66,74,88,91,125,127,130,133,141,163,171,175,192,],[39,39,39,39,121,39,39,39,39,39,39,39,39,39,39,]),'ciclo':([60,97,135,179,181,202,],[95,95,95,95,95,95,]),'expcomp':([24,41,66,74,91,125,127,130,133,141,163,171,175,192,],[38,38,38,117,38,38,38,38,38,38,38,38,38,38,]),'while':([60,97,135,179,181,202,],[110,110,110,110,110,110,]),'llamafunc':([24,41,60,66,74,81,88,91,97,125,127,130,133,135,141,163,171,175,179,181,192,202,],[42,42,98,42,42,42,42,42,98,42,42,42,42,98,42,42,42,42,98,98,42,98,]),'ctefloat':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ctechar':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'addQPComp':([39,],[74,]),'retorno':([153,],[170,]),'lectura':([60,97,135,179,181,202,],[102,102,102,102,102,102,]),'expresion':([24,41,66,91,125,127,130,133,141,163,171,175,192,],[50,80,116,122,144,147,149,151,156,147,184,186,200,]),'eramain':([8,],[16,]),'checarparams':([142,],[158,]),'empty':([5,8,16,18,19,29,36,38,39,52,54,60,61,91,97,114,122,134,135,137,142,147,148,154,156,167,169,173,179,181,186,189,190,196,200,202,],[6,17,21,25,27,6,63,69,77,85,90,103,111,123,103,138,140,21,103,111,157,164,164,138,140,178,178,21,6,6,194,197,199,199,194,6,]),'factor':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'listaid':([11,26,],[20,57,]),'termino':([24,41,66,74,81,88,91,125,127,130,133,141,163,171,175,192,],[54,54,54,54,120,54,54,54,54,54,54,54,54,54,54,54,]),'rightparen':([80,],[119,]),'condicion':([60,97,135,179,181,202,],[106,106,106,106,106,106,]),'masestatuto':([60,97,135,],[107,128,153,]),'funcaux':([23,],[32,]),'idfunc':([24,41,60,66,74,81,88,91,97,125,127,130,133,135,141,163,171,175,179,181,192,202,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'args':([61,137,],[114,154,]),'bloque':([30,179,181,202,],[59,188,188,188,]),'expcompcontinuo':([39,],[79,]),'comaexpresion':([186,200,],[193,203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',191),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',197),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',202),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',214),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',220),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',224),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',225),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',228),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',234),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',237),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',238),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',241),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',248),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',253),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',257),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',260),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',264),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',265),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',269),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',270),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',273),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',278),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',279),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',285),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',286),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',287),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',288),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',291),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',295),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',299),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',303),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',304),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',307),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',310),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',311),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',315),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',316),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',321),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',322),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',325),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',328),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',329),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',334),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',335),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',339),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',342),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',343),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',348),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',349),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',353),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',356),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',357),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',358),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',359),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',360),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',361),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',366),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',367),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',371),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',372),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',373),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',374),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',375),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',376),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',377),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',378),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',379),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',382),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',387),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',400),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',416),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',417),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',421),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',422),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',425),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',435),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',436),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',439),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',440),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',443),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',446),
  ('initvar -> ID empty','initvar',2,'p_initvar','OpenRoonie.py',447),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',454),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',455),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',458),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',459),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',460),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',463),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',466),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',467),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',490),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',499),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',500),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',507),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',508),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',511),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',512),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',513),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',514),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',515),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',516),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',521),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',522),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',523),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',524),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',525),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',528),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',532),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',536),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',540),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',544),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',545),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',553),
]
