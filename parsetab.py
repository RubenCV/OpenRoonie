
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5C16496B8463A793D3ADBAFCB873F642'
    
_lr_action_items = {'COMMA':([24,27,49,52,66,67,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,90,91,95,96,98,103,110,112,115,117,120,121,126,127,131,132,142,151,152,153,156,157,158,159,163,172,185,],[30,-104,-84,67,-83,-104,-104,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-104,-103,137,137,143,67,-55,-47,-30,-32,-46,-42,-27,-29,-41,-37,-62,-54,-31,-45,-28,-26,-21,-40,143,179,179,]),'CTEINT':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[75,75,75,75,75,75,-25,75,-49,-50,-51,-48,-53,-52,-34,75,-33,-44,-43,75,75,-39,-38,-18,75,75,75,75,75,]),'LESSTHANEQUAL':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[111,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'IF':([8,26,29,37,38,39,41,42,44,45,53,55,56,64,134,161,171,174,177,178,182,183,187,189,],[-72,35,-104,-56,-59,-60,35,-58,-72,-57,-71,-6,-61,35,-19,-12,-104,-104,-8,-4,-10,-9,-7,-20,]),'RPAREN':([27,49,52,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,94,95,96,97,98,99,100,103,110,112,115,117,120,121,126,127,128,131,132,138,140,141,142,144,145,149,151,152,153,156,157,158,159,162,163,164,165,173,],[50,-84,-104,-104,-83,-104,-86,104,-104,-22,-24,-104,-102,-98,-95,-104,-101,124,-104,-99,-94,-96,-23,-93,-100,-97,-104,-103,136,-104,-96,142,-104,-65,146,-104,-55,-47,-30,-32,-46,-42,-27,-29,157,-41,-37,-14,-17,-15,-62,-104,-67,-85,-54,-31,-45,-28,-26,-21,-40,-16,-104,-64,-68,-66,]),'CHAR':([7,11,27,67,],[17,17,17,17,]),'LESSTHAN':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[106,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'DIVIDE':([71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,126,127,142,156,157,158,],[-22,-24,-102,-98,-95,119,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-27,-29,-62,-28,-26,-21,]),'WHILE':([8,26,29,37,38,39,41,42,44,45,53,55,56,64,134,161,171,174,177,178,182,183,187,189,],[-72,40,-104,-56,-59,-60,40,-58,-72,-57,-71,-6,-61,40,-19,-12,-104,-104,-8,-4,-10,-9,-7,-20,]),'OR':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,90,91,96,110,112,115,117,120,121,126,127,142,151,152,153,156,157,158,],[-104,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,130,-103,-96,-55,-47,-30,-32,-46,-42,-27,-29,-62,-54,-31,-45,-28,-26,-21,]),'CTEFLOAT':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[81,81,81,81,81,81,-25,81,-49,-50,-51,-48,-53,-52,-34,81,-33,-44,-43,81,81,-39,-38,-18,81,81,81,81,81,]),'ISEQUALTO':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[108,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'PROGRAM':([0,],[2,]),'RSQBRACKET':([60,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,90,91,110,112,115,117,120,121,125,126,127,131,132,142,151,152,153,156,157,158,159,172,180,181,185,188,],[93,-104,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-104,-103,-55,-47,-30,-32,-46,-42,156,-27,-29,-41,-37,-62,-54,-31,-45,-28,-26,-21,-40,-104,186,-36,-104,-35,]),'INT':([7,11,27,67,],[18,18,18,18,]),'AND':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,90,91,96,110,112,115,117,120,121,126,127,142,151,152,153,156,157,158,],[-104,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,133,-103,-96,-55,-47,-30,-32,-46,-42,-27,-29,-62,-54,-31,-45,-28,-26,-21,]),'LPAREN':([21,28,35,36,40,43,46,47,48,57,59,61,62,63,80,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[27,-82,57,-13,-11,-63,61,62,63,87,87,87,87,87,-63,87,-25,87,-49,-50,-51,-48,-53,-52,-34,87,-33,-44,-43,87,87,-39,-38,-18,87,87,87,87,87,]),'EQUALS':([43,93,],[59,135,]),'$end':([1,25,55,],[0,-1,-6,]),'CTECHAR':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[88,88,88,88,88,88,-25,88,-49,-50,-51,-48,-53,-52,-34,88,-33,-44,-43,88,88,-39,-38,-18,88,88,88,88,88,]),'MAIN':([5,6,8,9,10,29,53,65,102,150,167,170,],[-104,-104,-72,-78,20,-104,-71,-104,-77,-104,-79,-76,]),'STRING':([7,11,27,67,],[16,16,16,16,]),'MORETHANEQUAL':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[113,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'VAR':([5,8,26,29,37,38,39,41,42,44,45,53,55,56,64,134,161,171,174,177,178,182,183,187,189,],[7,-72,7,7,-56,-59,-60,7,-58,-72,-57,-71,-6,-61,7,-19,-12,-104,-104,-8,-4,-10,-9,-7,-20,]),'MORETHAN':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[109,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'TRUE':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[74,74,74,74,74,74,-25,74,-49,-50,-51,-48,-53,-52,-34,74,-33,-44,-43,74,74,-39,-38,-18,74,74,74,74,74,]),'FLOAT':([7,11,27,67,],[15,15,15,15,]),'PRINT':([8,26,29,37,38,39,41,42,44,45,53,55,56,64,134,161,171,174,177,178,182,183,187,189,],[-72,36,-104,-56,-59,-60,36,-58,-72,-57,-71,-6,-61,36,-19,-12,-104,-104,-8,-4,-10,-9,-7,-20,]),'NOTEQUAL':([70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,115,117,120,121,126,127,142,152,153,156,157,158,],[107,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-30,-32,-46,-42,-27,-29,-62,-31,-45,-28,-26,-21,]),'CTESTRING':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[78,78,78,78,78,78,-25,78,-49,-50,-51,-48,-53,-52,-34,78,-33,-44,-43,78,78,-39,-38,-18,78,78,78,78,78,]),'PLUS':([71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,120,121,126,127,142,153,156,157,158,],[-22,-24,118,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-46,-42,-27,-29,-62,-45,-28,-26,-21,]),'MINUS':([71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,120,121,126,127,142,153,156,157,158,],[-22,-24,114,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-46,-42,-27,-29,-62,-45,-28,-26,-21,]),'ID':([2,3,8,12,13,14,15,16,17,18,22,26,29,30,37,38,39,41,42,44,45,51,53,55,56,57,59,61,62,63,64,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,134,137,139,143,148,160,161,171,174,177,178,179,182,183,187,189,],[-2,4,-72,-90,-92,24,-88,-91,-89,-87,28,43,-104,24,-56,-59,-60,43,-58,-72,-57,66,-71,-6,-61,80,80,80,80,80,43,80,-25,80,-49,-50,-51,-48,-53,-52,-34,80,-33,-44,-43,80,80,-39,-38,-19,-18,80,80,80,80,-12,-104,-104,-8,-4,80,-10,-9,-7,-20,]),'VOID':([7,11,27,67,],[13,13,13,13,]),'TIMES':([71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,91,96,126,127,142,156,157,158,],[-22,-24,-102,-98,-95,122,-101,-104,-99,-94,-96,-23,-93,-100,-97,-103,-96,-27,-29,-62,-28,-26,-21,]),'SEMICOLON':([4,23,24,31,32,34,54,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,90,91,92,110,112,115,117,120,121,126,127,131,132,136,142,148,151,152,153,156,157,158,159,168,186,],[5,29,-104,-75,-73,56,-74,-104,-22,-24,-104,-102,-98,-95,-104,-101,-104,-99,-94,-96,-23,-93,-100,-97,-104,-103,134,-55,-47,-30,-32,-46,-42,-27,-29,-41,-37,161,-62,169,-54,-31,-45,-28,-26,-21,-40,175,189,]),'ELSE':([55,171,],[-6,176,]),'FUNCTION':([5,6,8,29,53,65,150,167,],[-104,11,-72,-104,-71,11,11,-79,]),'RBRACKET':([8,26,29,33,37,38,39,41,42,44,45,53,55,56,58,134,147,161,169,171,174,175,177,178,182,183,187,189,],[-72,-104,-104,55,-56,-59,-60,-104,-58,-70,-57,-71,-6,-61,-69,-19,167,-12,-81,-104,-104,-80,-8,-4,-10,-9,-7,-20,]),'LSQBRACKET':([43,80,135,],[60,125,160,]),'BOOL':([7,11,27,67,],[12,12,12,12,]),'RETURN':([8,29,37,38,39,41,42,44,45,53,55,56,58,64,101,134,161,171,174,177,178,182,183,187,189,],[-72,-104,-56,-59,-60,-104,-58,-70,-57,-71,-6,-61,-69,-104,148,-19,-12,-104,-104,-8,-4,-10,-9,-7,-20,]),'LBRACKET':([19,20,50,104,124,146,154,155,166,176,183,184,],[26,-3,64,64,-104,-104,-5,26,26,-104,-9,26,]),'FALSE':([57,59,61,62,63,86,87,105,106,107,108,109,111,113,114,116,118,119,122,123,129,130,133,137,139,143,148,160,179,],[91,91,91,91,91,91,-25,91,-49,-50,-51,-48,-53,-52,-34,91,-33,-44,-43,91,91,-39,-38,-18,91,91,91,91,91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'masestatuto':([26,41,64,],[33,58,101,]),'varcte':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'termino':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[73,73,73,73,73,73,73,73,153,73,73,73,73,73,73,]),'listaid':([14,30,],[23,54,]),'estatuto':([26,41,64,],[41,41,41,]),'escritura':([26,41,64,],[38,38,38,]),'bloquefunc':([50,104,],[65,150,]),'rightparen':([128,],[158,]),'main':([10,],[19,]),'masprint':([95,96,],[138,141,]),'addQTD':([77,],[123,]),'funcaux':([11,],[21,]),'expresion':([57,59,61,62,63,86,129,139,143,160,179,],[79,92,95,98,100,128,159,95,163,172,185,]),'masargs':([52,103,],[69,149,]),'ctefloat':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'prog':([0,],[3,]),'goto':([174,176,],[182,184,]),'cteint':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'print':([26,41,64,],[46,46,46,]),'addQPPM':([73,],[116,]),'addQPAO':([90,],[129,]),'ctestring':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[83,83,96,83,83,83,83,83,83,83,96,83,83,83,83,]),'leftparen':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'funcargs':([62,],[97,]),'idfunc':([26,41,57,59,61,62,63,64,86,105,116,123,129,139,143,148,160,179,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'retorno':([101,],[147,]),'masexpresion':([90,],[132,]),'addQPP':([95,96,],[139,139,]),'listafuncargs':([98,163,],[144,173,]),'checarparams':([144,],[164,]),'listaprint':([61,139,],[94,162,]),'arr':([80,],[126,]),'llamafunc':([26,41,57,59,61,62,63,64,86,105,116,123,129,139,143,148,160,179,],[34,34,72,72,72,72,72,34,72,72,72,72,72,72,72,72,72,72,]),'ciclo':([26,41,64,],[42,42,42,]),'expcompcontinuo':([70,],[112,]),'asignacion':([26,41,64,],[37,37,37,]),'gotoF':([124,146,],[155,166,]),'addQPComp':([70,],[105,]),'ctechar':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'factor':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'tipo':([7,11,27,67,],[14,22,51,51,]),'args':([27,67,],[52,103,]),'condicion':([26,41,64,],[45,45,45,]),'masid':([24,],[32,]),'vars':([5,26,29,41,64,],[6,39,53,39,39,]),'varid':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'masbloque':([171,],[178,]),'empty':([5,6,24,26,27,29,41,52,62,64,65,67,70,73,77,80,90,95,96,98,103,124,144,146,150,163,171,172,174,176,185,],[8,9,31,44,49,8,44,68,99,44,9,49,110,117,120,127,131,140,140,145,68,154,165,154,9,145,177,181,183,183,181,]),'comaexpresion':([172,185,],[180,188,]),'exp':([57,59,61,62,63,86,105,116,129,139,143,148,160,179,],[70,70,70,70,70,70,70,152,70,70,70,168,70,70,]),'funcs':([6,65,150,],[10,102,170,]),'bloque':([19,155,166,184,],[25,171,174,187,]),'programa':([0,],[1,]),'masterminos':([77,],[121,]),'ctebool':([57,59,61,62,63,86,105,116,123,129,139,143,148,160,179,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'expcomp':([57,59,61,62,63,86,105,129,139,143,160,179,],[90,90,90,90,90,90,151,90,90,90,90,90,]),'masexp':([73,],[115,]),'while':([26,41,64,],[48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',172),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',178),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',193),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',201),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',205),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',212),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',215),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',216),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',218),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',225),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',230),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',234),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',237),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',241),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',242),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',246),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',247),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',250),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',255),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',256),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',262),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',263),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',264),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',265),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',268),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',272),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',276),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',280),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',281),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',284),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',287),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',288),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',292),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',293),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',298),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',299),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',302),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',305),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',306),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',311),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',312),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',316),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',319),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',320),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',325),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',326),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',330),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',333),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',334),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',335),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',336),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',337),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',338),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',343),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',344),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',348),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',349),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',350),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',351),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',352),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',353),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',356),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',364),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',376),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',377),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',380),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',381),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',384),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',391),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',392),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',395),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',396),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',399),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',405),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',406),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',409),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',410),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',411),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',414),
  ('retorno -> RETURN exp SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',417),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',418),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',431),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',436),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',437),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',444),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',445),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',448),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',449),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',450),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',451),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',452),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',453),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',458),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',459),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',460),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',461),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',462),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',465),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',469),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',473),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',477),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',481),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',482),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',490),
]
