
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2C01ACF1FA6319654F82C4EEC5476CEF'
    
_lr_action_items = {'NOTEQUAL':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[85,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'PLUS':([63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'BOOL':([6,15,28,60,],[11,11,11,11,]),'COMMA':([19,50,62,63,64,65,67,68,69,70,71,72,74,75,76,80,82,89,90,95,97,99,100,102,103,108,109,118,119,120,121,122,123,125,126,127,128,129,130,131,132,140,145,],[27,60,-75,-70,-17,-67,-71,-68,-66,-75,-18,-75,-69,-72,-75,115,115,-40,-33,-28,-25,-65,-74,-32,-29,-22,-19,-36,-37,-35,-34,-39,-38,-27,-26,-73,-31,-30,-16,-20,-21,142,142,]),'LBRACKET':([22,23,49,93,112,139,],[30,-3,30,30,30,30,]),'SEMICOLON':([4,18,19,25,26,33,62,63,64,65,67,68,69,70,71,72,74,75,76,78,89,90,95,97,99,100,102,103,108,109,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,146,],[5,24,-75,-52,-50,-51,-75,-70,-17,-67,-71,-68,-66,-75,-18,-75,-69,-72,-75,111,-40,-33,-28,-25,-65,-74,-32,-29,-22,-19,136,-36,-37,-35,-34,-39,-38,-27,-26,-73,-31,-30,-16,-20,-21,148,]),'CTEFLOAT':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FUNCTION':([5,7,8,24,32,51,58,],[-75,-49,15,-75,-48,-5,15,]),'VAR':([5,7,24,30,32,37,38,41,42,43,45,46,51,111,124,134,136,137,138,141,148,],[6,-49,6,6,-48,-49,-42,-45,-41,6,-43,-44,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'EQUALS':([44,77,],[55,110,]),'MAIN':([5,7,8,16,17,24,32,51,58,83,],[-75,-49,-75,23,-54,-75,-48,-5,-75,-53,]),'CTECHAR':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'DIVIDE':([63,64,65,67,68,69,71,72,74,75,82,99,100,127,130,],[-70,-17,-67,-71,-68,-66,-18,101,-69,-72,-69,-65,-74,-73,-16,]),'PROGRAM':([0,],[2,]),'WHILE':([7,24,30,32,37,38,41,42,43,45,46,51,111,124,134,136,137,138,141,148,],[-49,-75,47,-48,-49,-42,-45,-41,47,-43,-44,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'IF':([7,24,30,32,37,38,41,42,43,45,46,51,111,124,134,136,137,138,141,148,],[-49,-75,40,-48,-49,-42,-45,-41,40,-43,-44,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'RBRACKET':([7,24,30,32,37,38,39,41,42,43,45,46,51,53,111,124,134,136,137,138,141,148,],[-49,-75,-75,-48,-47,-42,51,-45,-41,-75,-43,-44,-5,-46,-14,-75,-8,-9,-7,-4,-6,-15,]),'MINUS':([63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'MORETHANEQUAL':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[92,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'PRINT':([7,24,30,32,37,38,41,42,43,45,46,51,111,124,134,136,137,138,141,148,],[-49,-75,48,-48,-49,-42,-45,-41,48,-43,-44,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'ELSE':([51,124,],[-5,139,]),'OR':([62,63,64,65,67,68,69,70,71,72,74,75,76,82,89,90,99,100,102,103,108,109,118,119,120,121,122,123,127,128,129,130,131,132,],[-75,-70,-17,-67,-71,-68,-66,94,-18,-75,-69,-72,-75,-69,-40,-33,-65,-74,-32,-29,-22,-19,-36,-37,-35,-34,-39,-38,-73,-31,-30,-16,-20,-21,]),'LESSTHAN':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[87,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'MORETHAN':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[88,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'ID':([1,2,7,9,10,11,12,13,14,21,24,27,30,32,36,37,38,41,42,43,45,46,51,52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,111,115,124,133,134,136,137,138,141,142,148,],[4,-2,-49,-61,19,-63,-62,-64,-60,29,-75,19,44,-48,50,-49,-42,-45,-41,44,-43,-44,-5,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-14,71,-75,71,-8,-9,-7,-4,-6,71,-15,]),'AND':([62,63,64,65,67,68,69,70,71,72,74,75,76,82,89,90,99,100,102,103,108,109,118,119,120,121,122,123,127,128,129,130,131,132,],[-75,-70,-17,-67,-71,-68,-66,96,-18,-75,-69,-72,-75,-69,-40,-33,-65,-74,-32,-29,-22,-19,-36,-37,-35,-34,-39,-38,-73,-31,-30,-16,-20,-21,]),'RPAREN':([28,34,35,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,79,80,81,82,84,89,90,95,97,99,100,102,103,105,108,109,113,114,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,135,],[-75,49,-57,-75,-56,-75,-59,-75,-70,-17,-67,93,-71,-68,-66,-75,-18,-75,-69,-72,-75,112,-75,116,-69,-58,-40,-33,-28,-25,-65,-74,-32,-29,130,-22,-19,-13,-10,-11,-36,-37,-35,-34,-39,-38,-27,-26,-73,-31,-30,-16,-20,-21,-12,]),'LESSTHANEQUAL':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[91,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'TRUE':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'INT':([6,15,28,60,],[14,14,14,14,]),'CTEINT':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LSQBRACKET':([44,71,110,],[54,98,133,]),'$end':([3,31,51,],[0,-1,-5,]),'ISEQUALTO':([62,63,64,65,67,68,69,71,72,74,75,76,82,99,100,102,103,108,109,127,128,129,130,131,132,],[86,-70,-17,-67,-71,-68,-66,-18,-75,-69,-72,-75,-69,-65,-74,-32,-29,-22,-19,-73,-31,-30,-16,-20,-21,]),'FLOAT':([6,15,28,60,],[9,9,9,9,]),'FALSE':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'CTESTRING':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[74,74,74,82,74,74,74,74,74,74,74,74,74,74,74,74,74,82,74,74,]),'CHAR':([6,15,28,60,],[12,12,12,12,]),'STRING':([6,15,28,60,],[13,13,13,13,]),'RSQBRACKET':([54,62,63,64,65,67,68,69,70,71,72,74,75,76,89,90,95,97,98,99,100,102,103,108,109,118,119,120,121,122,123,125,126,127,128,129,130,131,132,140,143,144,145,147,],[77,-75,-70,-17,-67,-71,-68,-66,-75,-18,-75,-69,-72,-75,-40,-33,-28,-25,127,-65,-74,-32,-29,-22,-19,-36,-37,-35,-34,-39,-38,-27,-26,-73,-31,-30,-16,-20,-21,-75,146,-24,-75,-23,]),'LPAREN':([20,29,40,47,48,52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[28,-55,52,56,57,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'TIMES':([63,64,65,67,68,69,71,72,74,75,82,99,100,127,130,],[-70,-17,-67,-71,-68,-66,-18,104,-69,-72,-69,-65,-74,-73,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[62,62,62,62,62,118,119,120,121,122,123,62,62,128,129,131,132,62,62,62,]),'masid':([19,],[26,]),'masprint':([80,82,],[114,117,]),'ctebool':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'empty':([5,8,19,24,28,30,43,50,58,60,62,70,71,72,76,80,82,124,140,145,],[7,17,25,7,35,37,37,61,17,35,89,95,100,102,108,113,113,137,144,144,]),'expcompcontinuo':([62,],[90,]),'factor':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expresion':([52,55,56,57,73,115,133,142,],[66,78,79,80,105,80,140,145,]),'condicion':([30,43,],[38,38,]),'listaprint':([57,115,],[81,135,]),'masexp':([76,],[109,]),'tipo':([6,15,28,60,],[10,21,36,36,]),'arr':([71,],[99,]),'masestatuto':([30,43,],[39,53,]),'estatuto':([30,43,],[43,43,]),'varcte':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'programa':([0,],[3,]),'vars':([5,24,30,43,],[8,32,41,41,]),'asignacion':([30,43,],[42,42,]),'funcaux':([15,],[20,]),'masterminos':([72,],[103,]),'args':([28,60,],[34,84,]),'expcomp':([52,55,56,57,73,94,96,115,133,142,],[70,70,70,70,70,125,126,70,70,70,]),'masbloque':([124,],[138,]),'masexpresion':([70,],[97,]),'prog':([0,],[1,]),'ciclo':([30,43,],[45,45,]),'escritura':([30,43,],[46,46,]),'bloque':([22,49,93,112,139,],[31,58,124,134,141,]),'comaexpresion':([140,145,],[143,147,]),'listaid':([10,27,],[18,33,]),'masargs':([50,],[59,]),'funcs':([8,58,],[16,83,]),'main':([16,],[22,]),'termino':([52,55,56,57,73,85,86,87,88,91,92,94,96,101,104,106,107,115,133,142,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',109),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',112),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',118),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',123),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',126),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',129),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',130),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',133),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',136),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',139),
  ('listaprint -> CTESTRING masprint','listaprint',2,'p_listaprint','OpenRoonie.py',140),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',143),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',144),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',147),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',148),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','OpenRoonie.py',151),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',152),
  ('factor -> ID','factor',1,'p_factor','OpenRoonie.py',153),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',156),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',159),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',160),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',161),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',164),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',165),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',168),
  ('masexpresion -> AND expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',171),
  ('masexpresion -> OR expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',172),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',173),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',176),
  ('masterminos -> TIMES exp','masterminos',2,'p_masterminos','OpenRoonie.py',179),
  ('masterminos -> DIVIDE exp','masterminos',2,'p_masterminos','OpenRoonie.py',180),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',181),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',184),
  ('expcompcontinuo -> MORETHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',187),
  ('expcompcontinuo -> LESSTHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',188),
  ('expcompcontinuo -> NOTEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',189),
  ('expcompcontinuo -> ISEQUALTO exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',190),
  ('expcompcontinuo -> MORETHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',191),
  ('expcompcontinuo -> LESSTHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',192),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',193),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',196),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',197),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',198),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',199),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',200),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',203),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',204),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',207),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',208),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',211),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',215),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',216),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',221),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',222),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',225),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',230),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',231),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',235),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',236),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',239),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',240),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',241),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',242),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',243),
  ('varcte -> ID arr','varcte',2,'p_varcte','OpenRoonie.py',247),
  ('varcte -> CTEINT','varcte',1,'p_varcte','OpenRoonie.py',248),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','OpenRoonie.py',249),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','OpenRoonie.py',250),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','OpenRoonie.py',251),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',252),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',255),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',256),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',259),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',260),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',266),
]
