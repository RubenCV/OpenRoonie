
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3CCA604C119D8499369F1E1245F57CAB'
    
_lr_action_items = {'$end':([2,35,129,],[0,-1,-9,]),'CTEFLOAT':([32,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[56,56,-27,-59,-58,-54,-57,56,-56,-55,56,56,-45,56,-44,-49,56,-50,56,-39,-40,56,56,56,56,56,56,56,56,-20,56,56,]),'LBRACKET':([24,25,88,159,168,177,186,187,192,205,208,210,],[34,-4,131,131,-120,-120,-8,34,34,-12,-120,34,]),'TRUE':([32,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[41,41,-27,-59,-58,-54,-57,41,-56,-55,41,41,-45,41,-44,-49,41,-50,41,-39,-40,41,41,41,41,41,41,41,41,-20,41,41,]),'LSQBRACKET':([23,46,48,73,80,],[33,-31,99,123,-31,]),'ID':([1,3,6,11,12,13,14,15,16,17,26,28,30,32,34,38,49,51,66,68,70,74,75,76,78,81,82,85,86,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,121,122,123,125,126,127,128,129,131,161,164,168,170,171,176,177,178,186,187,188,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-2,4,-82,-107,-104,-103,-106,-105,-108,23,36,-120,23,46,80,-81,46,-27,-64,-66,-82,-65,-70,80,-69,-63,-67,-62,130,-59,-58,-54,-57,46,-56,-55,46,46,-45,46,-44,-49,46,-50,46,-39,-40,-68,46,46,46,153,46,46,-9,80,46,46,-120,46,-20,-21,-120,46,-8,80,46,-15,-71,80,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,80,-10,]),'COMMA':([22,23,37,40,41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,65,87,89,96,98,103,106,109,111,112,116,117,130,133,136,137,138,140,141,142,145,146,147,151,158,163,167,183,],[30,-86,-120,-84,-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,-120,-119,-120,-112,-120,-113,118,-100,133,-53,-61,-43,-47,-48,-52,-36,-38,-85,-99,-120,-60,-33,161,-23,-28,164,-46,-51,-37,171,133,-30,-72,164,]),'CPPCOMMENT':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,75,-81,-64,-66,-82,-65,-70,75,-69,-63,-67,-62,-68,-9,75,-120,-21,-120,-8,75,-15,-71,75,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,75,-10,]),'FUNCTION':([5,6,7,9,10,28,38,132,181,195,],[-120,-82,-120,-3,19,-120,-81,19,19,-95,]),'PLUS':([41,42,43,44,45,46,50,52,53,54,55,56,59,60,61,62,63,109,111,140,141,146,163,167,],[-118,-109,-24,-26,-110,-29,-25,-114,-111,-116,-117,-115,-119,-120,-112,114,-113,-48,-52,-23,-28,-51,-30,-72,]),'RETURN':([6,28,38,66,68,70,74,75,76,78,81,82,85,121,124,129,131,156,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,-64,-66,-80,-65,-70,-120,-69,-63,-67,-62,-68,-79,-9,-120,178,-120,-21,-120,-8,-120,-15,-71,-120,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,-120,-10,]),'CTECHAR':([32,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[54,54,-27,-59,-58,-54,-57,54,-56,-55,54,54,-45,54,-44,-49,54,-50,54,-39,-40,54,54,54,54,54,54,54,54,-20,54,54,]),'RBRACKET':([6,28,34,38,66,68,70,74,75,76,78,81,82,84,85,121,124,129,168,176,177,179,186,187,190,191,192,194,198,199,200,202,203,204,205,206,207,208,209,210,211,],[-82,-120,-120,-81,-64,-66,-80,-65,-70,-120,-69,-63,-67,129,-62,-68,-79,-9,-120,-21,-120,195,-8,-120,-15,-71,-120,-97,-6,-7,-120,-120,-96,-13,-12,-22,-5,-120,-11,-120,-10,]),'COMMENT':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,78,-81,-64,-66,-82,-65,-70,78,-69,-63,-67,-62,-68,-9,78,-120,-21,-120,-8,78,-15,-71,78,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,78,-10,]),'ISEQUALTO':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,93,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),'CHAR':([8,19,37,133,],[15,15,15,15,]),'FALSE':([32,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[59,59,-27,-59,-58,-54,-57,59,-56,-55,59,59,-45,59,-44,-49,59,-50,59,-39,-40,59,59,59,59,59,59,59,59,-20,59,59,]),'IF':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,83,-81,-64,-66,-82,-65,-70,83,-69,-63,-67,-62,-68,-9,83,-120,-21,-120,-8,83,-15,-71,83,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,83,-10,]),'DIVIDE':([41,42,43,44,45,46,50,52,53,54,55,56,59,60,61,63,140,141,163,167,],[-118,-109,-24,-26,-110,-29,-25,-114,-111,-116,-117,-115,-119,110,-112,-113,-23,-28,-30,-72,]),'AND':([41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,96,98,109,111,112,116,136,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,105,-119,-120,-112,-120,-113,-53,-61,-48,-52,-36,-38,-60,-23,-28,-51,-37,-30,-72,]),'ELSE':([6,28,38,66,68,74,75,78,81,82,85,121,129,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,-81,-64,-66,-65,-70,-69,-63,-67,-62,-68,-9,-120,-21,-120,-8,-120,-15,-71,-120,-6,-7,-120,208,-13,-12,-22,-5,-120,-11,-120,-10,]),'OR':([41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,96,98,109,111,112,116,136,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,102,-119,-120,-112,-120,-113,-53,-61,-48,-52,-36,-38,-60,-23,-28,-51,-37,-30,-72,]),'EQUALS':([23,80,169,],[32,127,188,]),'RSQBRACKET':([41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,64,65,96,98,103,106,109,111,112,116,119,120,136,137,138,139,140,141,145,146,147,148,150,160,162,163,167,182,],[-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,-120,-119,-120,-112,-120,-113,117,-120,-53,-61,-43,-47,-48,-52,-36,-38,-87,-89,-60,-33,-120,163,-23,-28,-46,-51,-37,-88,169,-32,-35,-30,-72,-34,]),'PRINT':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,67,-81,-64,-66,-82,-65,-70,67,-69,-63,-67,-62,-68,-9,67,-120,-21,-120,-8,67,-15,-71,67,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,67,-10,]),'MORETHANEQUAL':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,91,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),'VOID':([8,19,37,133,],[16,16,16,16,]),'MINUS':([41,42,43,44,45,46,50,52,53,54,55,56,59,60,61,62,63,109,111,140,141,146,163,167,],[-118,-109,-24,-26,-110,-29,-25,-114,-111,-116,-117,-115,-119,-120,-112,115,-113,-48,-52,-23,-28,-51,-30,-72,]),'LPAREN':([27,32,36,46,49,51,57,67,71,72,77,79,80,83,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[37,51,-98,-73,51,-27,101,-16,122,-14,125,126,-73,128,-59,-58,-54,-57,51,-56,-55,51,51,-45,51,-44,-49,51,-50,51,-39,-40,51,51,51,51,51,51,51,51,-20,51,51,]),'INT':([8,19,37,133,],[13,13,13,13,]),'MORETHAN':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,92,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),'CTEINT':([32,33,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,118,122,123,125,127,128,161,164,170,171,178,188,],[52,65,52,-27,-59,-58,-54,-57,52,-56,-55,52,52,-45,52,-44,-49,52,-50,52,-39,-40,65,52,52,52,52,52,52,52,52,-20,52,52,]),'TIMES':([41,42,43,44,45,46,50,52,53,54,55,56,59,60,61,63,140,141,163,167,],[-118,-109,-24,-26,-110,-29,-25,-114,-111,-116,-117,-115,-119,107,-112,-113,-23,-28,-30,-72,]),'NOTEQUAL':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,95,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),'SEMICOLON':([4,21,22,23,29,31,39,40,41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,69,96,98,103,106,109,111,112,116,117,136,140,141,145,146,147,154,163,167,174,175,178,193,201,],[5,28,-120,-86,-91,-83,-90,-84,-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,-120,-119,-120,-112,-120,-113,121,-53,-61,-43,-47,-48,-52,-36,-38,-85,-60,-23,-28,-46,-51,-37,176,-30,-72,190,191,194,203,206,]),'STRING':([8,19,37,133,],[11,11,11,11,]),'READ':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,79,-81,-64,-66,-82,-65,-70,79,-69,-63,-67,-62,-68,-9,79,-120,-21,-120,-8,79,-15,-71,79,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,79,-10,]),'MAIN':([5,6,7,9,10,18,20,28,38,132,157,181,195,196,],[-120,-82,-120,-3,-120,25,-94,-120,-81,-120,-93,-120,-95,-92,]),'PROGRAM':([0,],[1,]),'WHILE':([6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[-82,-120,72,-81,-64,-66,-82,-65,-70,72,-69,-63,-67,-62,-68,-9,72,-120,-21,-120,-8,72,-15,-71,72,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,72,-10,]),'RPAREN':([37,41,42,43,44,45,46,47,50,52,53,54,55,56,58,59,60,61,62,63,87,89,96,98,100,101,103,106,109,111,112,116,130,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,155,158,163,165,166,167,172,173,180,183,184,185,189,197,],[88,-118,-109,-24,-26,-110,-29,-120,-25,-114,-111,-116,-117,-115,-120,-119,-120,-112,-120,-113,-100,-120,-53,-61,141,-120,-43,-47,-48,-52,-36,-38,-99,-120,-102,159,-60,-23,-28,-120,167,-75,-46,-51,-37,168,-120,174,175,177,-120,-30,-120,-77,-72,-17,-19,-101,-120,-74,-78,-18,-76,]),'FLOAT':([8,19,37,133,],[12,12,12,12,]),'VAR':([5,6,28,34,38,66,68,70,74,75,76,78,81,82,85,121,129,131,168,176,177,186,187,190,191,192,198,199,200,202,204,205,206,207,208,209,210,211,],[8,-82,8,8,-81,-64,-66,-82,-65,-70,8,-69,-63,-67,-62,-68,-9,8,-120,-21,-120,-8,8,-15,-71,8,-6,-7,-120,-120,-13,-12,-22,-5,-120,-11,8,-10,]),'BOOL':([8,19,37,133,],[14,14,14,14,]),'LESSTHANEQUAL':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,90,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),'CTESTRING':([32,49,51,90,91,92,93,94,95,97,99,101,102,104,105,107,108,110,113,114,115,122,123,125,127,128,161,164,170,171,178,188,],[55,55,-27,-59,-58,-54,-57,55,-56,-55,55,55,-45,55,-44,-49,55,-50,55,-39,-40,55,55,55,55,55,55,55,55,-20,55,55,]),'LESSTHAN':([41,42,43,44,45,46,47,50,52,53,54,55,56,59,60,61,62,63,109,111,112,116,140,141,146,147,163,167,],[-118,-109,-24,-26,-110,-29,97,-25,-114,-111,-116,-117,-115,-119,-120,-112,-120,-113,-48,-52,-36,-38,-23,-28,-51,-37,-30,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ciclo':([34,76,131,187,192,210,],[66,66,66,66,66,66,]),'masexp':([62,],[112,]),'masexpresion':([58,],[103,]),'cteint':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'bloque':([24,187,192,210,],[35,199,199,199,]),'empty':([5,7,10,22,28,34,37,47,58,60,62,65,76,89,101,131,132,133,138,142,151,158,165,168,177,181,183,187,192,200,202,208,210,],[6,9,20,29,6,70,87,98,106,111,116,120,70,134,144,70,20,87,162,166,173,134,185,186,186,20,166,6,6,205,209,205,6,]),'idarray':([32,34,49,76,94,99,101,104,108,113,122,123,125,127,128,131,161,164,170,178,187,188,192,210,],[48,73,48,73,48,48,48,48,48,48,48,48,48,48,48,73,48,48,48,48,73,48,73,73,]),'estatuto':([34,76,131,187,192,210,],[76,76,76,198,198,198,]),'while':([34,76,131,187,192,210,],[71,71,71,71,71,71,]),'varid':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'checarparams':([165,],[184,]),'listaid':([17,30,],[21,39,]),'listaprint':([125,170,],[152,189,]),'initvar':([17,30,],[22,22,]),'expdimvar':([99,123,161,],[138,138,138,]),'masdims':([65,],[119,]),'programa':([0,],[2,]),'dimsvar':([99,123,161,],[139,150,182,]),'expcomp':([32,49,94,99,101,104,122,123,125,127,128,161,164,170,178,188,],[58,58,136,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'escritura':([34,76,131,187,192,210,],[74,74,74,74,74,74,]),'funcaux':([19,],[27,]),'vars':([5,28,34,76,131,187,192,210,],[7,38,82,82,82,82,82,82,]),'addQPPM':([62,],[113,]),'varcte':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'masid':([22,],[31,]),'factor':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ctestring':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ctebool':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'condicion':([34,76,131,187,192,210,],[81,81,81,81,81,81,]),'masbloque':([202,],[207,]),'expresion':([32,49,99,101,104,122,123,125,127,128,161,164,170,178,188,],[40,100,137,142,145,149,137,151,154,155,137,183,151,193,201,]),'expcompcontinuo':([47,],[96,]),'prog':([0,],[3,]),'ctechar':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'funcargs':([101,],[143,]),'funcs':([10,132,181,],[18,157,196,]),'masterminos':([60,],[109,]),'lectura':([34,76,131,187,192,210,],[68,68,68,68,68,68,]),'llamafunc':([32,34,49,76,94,99,101,104,108,113,122,123,125,127,128,131,161,164,170,178,187,188,192,210,],[44,69,44,69,44,44,44,44,44,44,44,44,44,44,44,69,44,44,44,44,69,44,69,69,]),'ctefloat':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'tipo':([8,19,37,133,],[17,26,86,86,]),'bloquefunc':([88,159,],[132,181,]),'dims':([33,118,],[64,148,]),'exp':([32,49,94,99,101,104,113,122,123,125,127,128,161,164,170,178,188,],[47,47,47,47,47,47,147,47,47,47,47,47,47,47,47,47,47,]),'gotoF':([168,177,],[187,192,]),'retorno':([156,],[179,]),'addQTD':([60,],[108,]),'addQPAO':([58,],[104,]),'leftparen':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'eramain':([7,],[10,]),'addQPComp':([47,],[94,]),'termino':([32,49,94,99,101,104,108,113,122,123,125,127,128,161,164,170,178,188,],[62,62,62,62,62,62,146,62,62,62,62,62,62,62,62,62,62,62,]),'print':([34,76,131,187,192,210,],[77,77,77,77,77,77,]),'main':([18,],[24,]),'estatutobloque':([187,192,210,],[200,202,211,]),'addQPP':([151,],[170,]),'masprint':([151,],[172,]),'idfunc':([32,34,49,76,94,99,101,104,108,113,122,123,125,127,128,131,161,164,170,178,187,188,192,210,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'masargs':([89,158,],[135,180,]),'goto':([200,208,],[204,210,]),'args':([37,133,],[89,158,]),'masdimsvar':([138,],[160,]),'listafuncargs':([142,183,],[165,197,]),'masestatuto':([34,76,131,],[84,124,156,]),'rightparen':([100,],[140,]),'asignacion':([34,76,131,187,192,210,],[85,85,85,85,85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',196),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',202),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',207),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',219),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',225),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',229),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',230),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',233),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',239),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',242),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',243),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',246),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',253),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',258),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',262),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',265),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',269),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',273),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',274),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',277),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',282),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',283),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',304),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',305),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',306),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',307),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',310),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',314),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',318),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',319),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',328),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',332),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',335),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',378),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',379),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',382),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',385),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',386),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',390),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',391),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',396),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',397),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',400),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',403),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',404),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',409),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',410),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',414),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',417),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',418),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',423),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',424),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',428),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',431),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',432),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',433),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',441),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',442),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',446),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',447),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',448),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',457),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',461),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',474),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',490),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',491),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',495),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',496),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',499),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',509),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',510),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',513),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',514),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',517),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',520),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',521),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',522),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',542),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',546),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',547),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',550),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',551),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',554),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',555),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',556),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',559),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',562),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',563),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',586),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',595),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',596),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',603),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',604),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',607),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',608),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',609),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',610),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',611),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',612),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',617),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',618),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',619),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',620),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',621),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',624),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',628),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',632),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',636),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',640),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',641),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',649),
]
