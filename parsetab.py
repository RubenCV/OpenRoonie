
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4F78D686C524C4AD2CE493920A23C97C'
    
_lr_action_items = {'INT':([7,15,28,62,],[9,9,9,9,]),'OR':([64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,98,105,106,108,110,112,114,115,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,],[94,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,-89,-85,-84,-79,-82,-89,-81,-53,-89,-27,-25,-32,-89,-44,-89,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'CTEINT':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[65,65,65,65,65,-23,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RPAREN':([28,34,35,52,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,92,93,96,97,98,105,106,108,110,112,114,115,118,120,121,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,151,],[-89,-70,51,-89,-72,-89,-69,-89,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,109,-89,-85,-84,-79,-82,-89,-89,-81,122,123,-71,-89,-39,131,-53,-89,-27,-25,-32,-89,-44,-89,-17,-14,-15,-35,-36,-38,-37,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,-16,]),'BOOL':([7,15,28,62,],[14,14,14,14,]),'FUNCTION':([5,6,8,24,32,53,60,],[-89,-62,15,-89,-61,-6,15,]),'FALSE':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[68,68,68,68,68,-23,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'$end':([2,30,53,],[0,-1,-6,]),'MORETHANEQUAL':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,104,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'PRINT':([6,24,31,32,41,42,43,44,46,47,48,53,124,152,155,156,158,159,160,162,169,171,],[-62,-89,39,-61,-55,-56,-57,-58,39,-62,-54,-6,-18,-12,-89,-89,-9,-10,-8,-4,-7,-19,]),'LPAREN':([20,29,38,39,40,45,49,54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[28,-68,54,-13,-11,55,57,80,80,80,80,80,-23,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'ISEQUALTO':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,102,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'NOTEQUAL':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,101,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'MINUS':([65,66,67,68,69,71,72,73,75,76,78,79,81,82,83,84,86,106,108,114,115,130,131,140,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,-81,-89,113,-85,-84,-79,-82,-89,-81,-27,-25,-44,-89,-20,-24,-26,-41,-40,-43,-42,]),'WHILE':([6,24,31,32,41,42,43,44,46,47,48,53,124,152,155,156,158,159,160,162,169,171,],[-62,-89,40,-61,-55,-56,-57,-58,40,-62,-54,-6,-18,-12,-89,-89,-9,-10,-8,-4,-7,-19,]),'RBRACKET':([6,24,31,32,37,41,42,43,44,46,47,48,53,56,124,152,155,156,158,159,160,162,169,171,],[-62,-89,-89,-61,53,-55,-56,-57,-58,-89,-60,-54,-6,-59,-18,-12,-89,-89,-9,-10,-8,-4,-7,-19,]),'CTESTRING':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[71,71,71,71,71,-23,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'ELSE':([53,156,],[-6,161,]),'COMMA':([19,52,64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,85,86,93,96,98,105,106,108,110,112,114,115,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,157,167,],[26,62,-89,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,-89,-85,-84,-79,-82,-89,119,119,-89,-39,-53,-89,-27,-25,-32,-89,-44,-89,-35,-36,-38,-37,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,164,164,]),'AND':([64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,98,105,106,108,110,112,114,115,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,],[95,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,-89,-85,-84,-79,-82,-89,-81,-53,-89,-27,-25,-32,-89,-44,-89,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'FLOAT':([7,15,28,62,],[13,13,13,13,]),'EQUALS':([50,90,],[58,125,]),'PLUS':([65,66,67,68,69,71,72,73,75,76,78,79,81,82,83,84,86,106,108,114,115,130,131,140,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,-81,-89,111,-85,-84,-79,-82,-89,-81,-27,-25,-44,-89,-20,-24,-26,-41,-40,-43,-42,]),'VAR':([5,6,24,31,32,41,42,43,44,46,47,48,53,124,152,155,156,158,159,160,162,169,171,],[7,-62,7,7,-61,-55,-56,-57,-58,7,-62,-54,-6,-18,-12,-89,-89,-9,-10,-8,-4,-7,-19,]),'LESSTHAN':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,103,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'LESSTHANEQUAL':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,100,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'IF':([6,24,31,32,41,42,43,44,46,47,48,53,124,152,155,156,158,159,160,162,169,171,],[-62,-89,49,-61,-55,-56,-57,-58,49,-62,-54,-6,-18,-12,-89,-89,-9,-10,-8,-4,-7,-19,]),'LBRACKET':([22,23,51,109,123,141,142,153,158,161,166,],[-3,31,31,-89,-89,-5,31,31,-9,-89,31,]),'TIMES':([65,66,67,68,69,71,72,73,75,76,79,81,82,83,84,86,106,108,130,131,140,],[-83,-22,-78,-88,-80,-86,-87,-21,-81,-89,-85,-84,-79,-82,117,-81,-27,-25,-20,-24,-26,]),'TRUE':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[72,72,72,72,72,-23,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'CHAR':([7,15,28,62,],[10,10,10,10,]),'CTECHAR':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[79,79,79,79,79,-23,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'STRING':([7,15,28,62,],[12,12,12,12,]),'RSQBRACKET':([59,64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,93,96,98,105,106,107,108,110,112,114,115,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,157,163,165,167,170,],[90,-89,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,-89,-85,-84,-79,-82,-89,-89,-39,-53,-89,-27,140,-25,-32,-89,-44,-89,-35,-36,-38,-37,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,-89,-34,168,-89,-33,]),'MAIN':([5,6,8,16,17,24,32,53,60,91,],[-89,-62,-89,-67,22,-89,-61,-6,-89,-66,]),'DIVIDE':([65,66,67,68,69,71,72,73,75,76,79,81,82,83,84,86,106,108,130,131,140,],[-83,-22,-78,-88,-80,-86,-87,-21,-81,-89,-85,-84,-79,-82,116,-81,-27,-25,-20,-24,-26,]),'CTEFLOAT':([54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[81,81,81,81,81,-23,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'LSQBRACKET':([50,76,125,],[59,107,154,]),'PROGRAM':([0,],[3,]),'SEMICOLON':([4,18,19,25,27,33,64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,89,93,96,98,105,106,108,110,112,114,115,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,168,],[5,24,-89,-65,-63,-64,-89,-83,-22,-78,-88,-80,-86,-87,-21,-89,-81,-89,-89,-85,-84,-79,-82,-89,124,-89,-39,-53,-89,-27,-25,-32,-89,-44,-89,152,-35,-36,-38,-37,-20,-24,-47,-52,-49,-50,-48,-51,-46,-45,-26,-30,-29,-28,-31,-41,-40,-43,-42,171,]),'MORETHAN':([65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,83,84,86,106,108,110,112,114,115,130,131,140,143,144,145,146,147,148,149,150,],[-83,-22,-78,-88,-80,-86,-87,-21,99,-81,-89,-89,-85,-84,-79,-82,-89,-81,-27,-25,-32,-89,-44,-89,-20,-24,-26,-30,-29,-28,-31,-41,-40,-43,-42,]),'ID':([1,3,6,9,10,11,12,13,14,21,24,26,31,32,36,41,42,43,44,46,47,48,53,54,55,57,58,70,80,94,95,99,100,101,102,103,104,111,113,116,117,119,124,152,154,155,156,158,159,160,162,164,169,171,],[4,-2,-62,-73,-75,19,-77,-74,-76,29,-89,19,50,-61,52,-55,-56,-57,-58,50,-62,-54,-6,76,76,76,76,76,-23,76,76,76,76,76,76,76,76,76,76,76,76,76,-18,-12,76,-89,-89,-9,-10,-8,-4,76,-7,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expcomp':([54,55,57,58,70,94,95,99,100,101,102,103,104,119,154,164,],[64,64,64,64,64,64,64,132,133,134,135,136,137,64,64,64,]),'print':([31,46,],[45,45,]),'comaexpresion':([157,167,],[165,170,]),'programa':([0,],[2,]),'masargs':([52,],[63,]),'addQPAO':([93,],[126,]),'while':([31,46,],[38,38,]),'prog':([0,],[1,]),'gotoF':([109,123,],[142,153,]),'masid':([19,],[27,]),'masterminos':([84,],[115,]),'addQPPM':([112,],[145,]),'ciclo':([31,46,],[42,42,]),'expresion':([54,55,57,58,70,94,95,119,154,164,],[77,85,88,89,97,128,129,85,157,167,]),'ctechar':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'varcte':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'exp':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,119,154,164,],[74,74,74,74,74,74,74,74,74,74,74,74,74,143,146,74,74,74,]),'tipo':([7,15,28,62,],[11,21,36,36,]),'ctestring':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[75,86,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,86,75,75,]),'masexp':([78,],[112,]),'goto':([155,161,],[159,166,]),'vars':([5,24,31,46,],[8,32,44,44,]),'arr':([76,],[108,]),'estatuto':([31,46,],[46,46,]),'masbloque':([156,],[162,]),'main':([17,],[23,]),'ctefloat':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'masestatuto':([31,46,],[37,56,]),'bloque':([23,51,142,153,166,],[30,60,155,156,169,]),'listaid':([11,26,],[18,33,]),'args':([28,62,],[35,92,]),'cteint':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'expcompcontinuo':([74,],[105,]),'leftparen':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'funcs':([8,60,],[17,91,]),'condicion':([31,46,],[41,41,]),'rightparen':([97,],[130,]),'addQTD':([115,],[148,]),'funcaux':([15,],[20,]),'escritura':([31,46,],[43,43,]),'masprint':([85,86,],[120,121,]),'termino':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,149,150,78,78,78,]),'empty':([5,8,19,24,28,31,46,52,60,62,64,74,76,78,84,85,86,93,105,109,112,115,123,155,156,157,161,167,],[6,16,25,6,34,47,47,61,16,34,96,98,106,110,114,118,118,127,138,141,144,147,141,158,160,163,158,163,]),'masexpresion':([64,],[93,]),'addQPComp':([105,],[139,]),'varid':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'asignacion':([31,46,],[48,48,]),'listaprint':([55,119,],[87,151,]),'ctebool':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'factor':([54,55,57,58,70,94,95,99,100,101,102,103,104,111,113,116,117,119,154,164,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',139),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',142),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',147),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',152),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',156),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',163),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',166),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',167),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',169),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',176),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',181),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',185),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',188),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',192),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',193),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',196),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',197),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',203),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',204),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',211),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',212),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',213),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',216),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',220),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',224),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',228),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',229),
  ('exp -> termino masexp addQPPM','exp',3,'p_exp','OpenRoonie.py',232),
  ('addQPPM -> empty','addQPPM',1,'p_addQPPM','OpenRoonie.py',235),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',239),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',240),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',241),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',245),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',246),
  ('expresion -> expcomp masexpresion addQPAO','expresion',3,'p_expresion','OpenRoonie.py',249),
  ('addQPAO -> empty','addQPAO',1,'p_addQPAO','OpenRoonie.py',252),
  ('masexpresion -> AND expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',256),
  ('masexpresion -> OR expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',257),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',258),
  ('termino -> factor masterminos addQTD','termino',3,'p_termino','OpenRoonie.py',262),
  ('addQTD -> empty','addQTD',1,'p_addQTD','OpenRoonie.py',265),
  ('masterminos -> TIMES termino','masterminos',2,'p_masterminos','OpenRoonie.py',269),
  ('masterminos -> DIVIDE termino','masterminos',2,'p_masterminos','OpenRoonie.py',270),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',271),
  ('expcomp -> exp expcompcontinuo addQPComp','expcomp',3,'p_expcomp','OpenRoonie.py',275),
  ('addQPComp -> empty','addQPComp',1,'p_addQPComp','OpenRoonie.py',278),
  ('expcompcontinuo -> MORETHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',282),
  ('expcompcontinuo -> LESSTHAN expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',283),
  ('expcompcontinuo -> NOTEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',284),
  ('expcompcontinuo -> ISEQUALTO expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',285),
  ('expcompcontinuo -> MORETHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',286),
  ('expcompcontinuo -> LESSTHANEQUAL expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',287),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',288),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',292),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',293),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',294),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',295),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',296),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',299),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',300),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',303),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',304),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',307),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',311),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',312),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',317),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',318),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',321),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',326),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',327),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',331),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',332),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',335),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',336),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',337),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',338),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',339),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',344),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',345),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',346),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',347),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',348),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',351),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',355),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',359),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',363),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',367),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',368),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',376),
]
