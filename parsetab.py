
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A9E055056B5799386ACFD457EDF0787D'
    
_lr_action_items = {'CTESTRING':([25,52,59,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[45,-28,45,-51,45,-50,-58,45,-60,-56,-59,-55,-57,45,45,-40,-41,45,-46,-45,45,45,45,45,45,45,45,45,-21,45,45,45,]),'VOID':([7,23,65,148,],[11,11,11,11,]),'CHAR':([7,23,65,148,],[12,12,12,12,]),'TRUE':([25,52,59,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[39,-28,39,-51,39,-50,-58,39,-60,-56,-59,-55,-57,39,39,-40,-41,39,-46,-45,39,39,39,39,39,39,39,39,-21,39,39,39,]),'INT':([7,23,65,148,],[15,15,15,15,]),'READ':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,103,-70,-64,-67,103,-66,-65,-83,-68,-71,-63,-9,-69,103,-121,-121,-22,-15,-72,-8,103,103,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,103,-10,]),'WHILE':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,104,-70,-64,-67,104,-66,-65,-83,-68,-71,-63,-9,-69,104,-121,-121,-22,-15,-72,-8,104,104,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,104,-10,]),'FUNCTION':([5,6,8,16,17,29,61,144,186,198,],[-121,-83,-121,-3,23,-121,-82,23,23,-96,]),'IF':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,107,-70,-64,-67,107,-66,-65,-83,-68,-71,-63,-9,-69,107,-121,-121,-22,-15,-72,-8,107,107,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,107,-10,]),'TIMES':([36,37,38,39,40,41,43,44,45,47,48,49,51,53,55,58,132,133,152,153,157,],[-25,-111,-110,-119,74,-113,-117,-30,-118,-120,-115,-27,-114,-116,-26,-112,-29,-24,-31,-73,-113,]),'COMMENT':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,97,-70,-64,-67,97,-66,-65,-83,-68,-71,-63,-9,-69,97,-121,-121,-22,-15,-72,-8,97,97,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,97,-10,]),'ID':([1,2,6,9,10,11,12,13,14,15,25,26,29,32,52,59,61,62,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,97,98,99,100,108,112,113,114,115,116,117,135,136,137,138,139,140,141,142,145,149,154,174,175,181,182,183,184,190,191,192,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[4,-2,-83,-105,18,-109,-106,-107,-108,-104,44,18,-121,64,-28,44,-82,109,-51,44,-50,-58,44,-60,-56,-59,-55,-57,44,44,-40,-41,44,-46,-45,44,-70,-64,-67,109,-66,-65,-83,-68,-71,-63,143,44,160,44,44,44,44,-9,-69,109,44,44,-21,44,-121,-121,-22,44,-15,-72,44,-8,109,109,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,109,-10,]),'RPAREN':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,57,58,65,70,71,75,82,85,86,87,91,92,96,119,120,122,123,127,128,129,130,131,132,133,143,146,147,148,152,153,155,156,157,158,159,160,162,163,168,170,171,172,173,176,177,187,188,189,],[-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-121,-112,118,-53,-49,-62,-54,-121,-39,-37,-44,-48,132,-101,-121,-52,-61,153,-76,-121,-38,-47,-29,-24,-100,167,-103,-121,-31,-73,-121,-78,-113,-121,178,179,181,182,-121,-121,-79,-75,-20,-18,-17,-102,-77,-19,]),'MORETHANEQUAL':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,80,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'EQUALS':([18,109,180,],[25,140,192,]),'COMMA':([18,19,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,56,57,58,65,66,70,71,75,82,86,87,91,92,119,120,122,123,124,126,129,130,131,132,133,143,148,152,153,157,158,168,170,],[-87,26,67,-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-85,-121,-112,-121,-86,-53,-49,-62,-54,-39,-37,-44,-48,-101,148,-52,-61,149,-34,154,-38,-47,-29,-24,-100,-121,-31,-73,174,174,148,154,]),'LSQBRACKET':([18,44,46,105,109,],[24,-32,84,137,-32,]),'LPAREN':([25,33,44,50,52,59,64,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,101,102,103,104,106,107,109,135,137,138,139,140,149,154,174,175,184,192,],[52,65,-74,85,-28,52,-99,-51,52,-50,-58,52,-60,-56,-59,-55,-57,52,52,-40,-41,52,-46,-45,52,-16,135,136,-14,138,139,-74,52,52,52,52,52,52,52,-21,52,52,52,]),'RSQBRACKET':([34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,57,58,68,69,70,71,75,82,86,87,91,92,121,122,123,124,125,126,130,131,132,133,150,151,152,153,161,169,],[66,-121,-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-121,-112,-90,-88,-53,-49,-62,-54,-39,-37,-44,-48,-89,-52,-61,-121,152,-34,-38,-47,-29,-24,-33,-36,-31,-73,180,-35,]),'PLUS':([36,37,38,39,40,41,43,44,45,47,48,49,51,53,54,55,58,70,71,122,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,-117,-30,-118,-120,-115,-27,-114,-116,88,-26,-112,-53,-49,-52,-29,-24,-31,-73,-113,]),'MINUS':([36,37,38,39,40,41,43,44,45,47,48,49,51,53,54,55,58,70,71,122,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,-117,-30,-118,-120,-115,-27,-114,-116,89,-26,-112,-53,-49,-52,-29,-24,-31,-73,-113,]),'SEMICOLON':([4,18,19,20,27,28,36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,56,57,58,60,66,70,71,75,82,86,87,91,92,111,122,123,130,131,132,133,152,153,164,178,179,184,196,200,],[5,-87,-121,29,-92,-84,-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-85,-121,-112,-91,-86,-53,-49,-62,-54,-39,-37,-44,-48,142,-52,-61,-38,-47,-29,-24,-31,-73,183,190,191,197,205,206,]),'STRING':([7,23,65,148,],[14,14,14,14,]),'CTECHAR':([25,52,59,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[43,-28,43,-51,43,-50,-58,43,-60,-56,-59,-55,-57,43,43,-40,-41,43,-46,-45,43,43,43,43,43,43,43,43,-21,43,43,43,]),'RBRACKET':([6,29,61,62,97,98,99,100,108,110,112,113,114,115,116,134,141,142,181,182,183,185,190,191,193,194,195,197,201,202,203,204,205,206,207,208,209,210,211,212,213,],[-83,-121,-82,-121,-70,-64,-67,-121,-66,141,-65,-81,-68,-71,-63,-80,-9,-69,-121,-121,-22,198,-15,-72,-8,-121,-121,-98,-7,-6,-121,-121,-97,-23,-12,-13,-11,-121,-5,-121,-10,]),'RETURN':([6,29,61,97,98,99,100,108,112,113,114,115,116,134,141,142,145,166,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,-70,-64,-67,-121,-66,-65,-81,-68,-71,-63,-80,-9,-69,-121,184,-121,-121,-22,-15,-72,-8,-121,-121,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,-121,-10,]),'OR':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,57,58,70,71,75,82,86,87,122,123,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,93,-112,-53,-49,-62,-54,-39,-37,-52,-61,-38,-29,-24,-31,-73,-113,]),'DIVIDE':([36,37,38,39,40,41,43,44,45,47,48,49,51,53,55,58,132,133,152,153,157,],[-25,-111,-110,-119,72,-113,-117,-30,-118,-120,-115,-27,-114,-116,-26,-112,-29,-24,-31,-73,-113,]),'VAR':([5,6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[7,-83,7,-82,7,-70,-64,-67,7,-66,-65,-83,-68,-71,-63,-9,-69,7,-121,-121,-22,-15,-72,-8,7,7,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,7,-10,]),'PROGRAM':([0,],[2,]),'CPPCOMMENT':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,115,-70,-64,-67,115,-66,-65,-83,-68,-71,-63,-9,-69,115,-121,-121,-22,-15,-72,-8,115,115,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,115,-10,]),'PRINT':([6,29,61,62,97,98,99,100,108,112,113,114,115,116,141,142,145,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,101,-70,-64,-67,101,-66,-65,-83,-68,-71,-63,-9,-69,101,-121,-121,-22,-15,-72,-8,101,101,-7,-6,-121,-121,-23,-12,-13,-11,-121,-5,101,-10,]),'$end':([3,63,141,],[0,-1,-9,]),'LESSTHANEQUAL':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,78,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'FALSE':([25,52,59,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[47,-28,47,-51,47,-50,-58,47,-60,-56,-59,-55,-57,47,47,-40,-41,47,-46,-45,47,47,47,47,47,47,47,47,-21,47,47,47,]),'CTEINT':([24,25,52,59,67,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[35,48,-28,48,35,-51,48,-50,-58,48,-60,-56,-59,-55,-57,48,48,-40,-41,48,-46,-45,48,48,48,48,48,48,48,48,-21,48,48,48,]),'AND':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,57,58,70,71,75,82,86,87,122,123,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,-121,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,94,-112,-53,-49,-62,-54,-39,-37,-52,-61,-38,-29,-24,-31,-73,-113,]),'ELSE':([6,29,61,97,98,99,108,112,114,115,116,141,142,181,182,183,190,191,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,],[-83,-121,-82,-70,-64,-67,-66,-65,-68,-71,-63,-9,-69,-121,-121,-22,-15,-72,-8,-121,-121,-7,-6,-121,210,-23,-12,-13,-11,-121,-5,-121,-10,]),'MAIN':([5,6,8,16,17,21,22,29,61,144,165,186,198,199,],[-121,-83,-121,-3,-121,-95,31,-121,-82,-121,-94,-121,-96,-93,]),'FLOAT':([7,23,65,148,],[9,9,9,9,]),'NOTEQUAL':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,83,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'CTEFLOAT':([25,52,59,72,73,74,76,77,78,79,80,81,83,84,85,88,89,90,93,94,95,135,137,138,139,140,149,154,174,175,184,192,],[53,-28,53,-51,53,-50,-58,53,-60,-56,-59,-55,-57,53,53,-40,-41,53,-46,-45,53,53,53,53,53,53,53,53,-21,53,53,53,]),'LESSTHAN':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,79,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'LBRACKET':([30,31,118,167,181,182,193,194,195,207,210,212,],[62,-4,145,145,-121,-121,-8,62,62,-12,-121,62,]),'MORETHAN':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,81,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'ISEQUALTO':([36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,58,70,71,86,87,122,130,132,133,152,153,157,],[-25,-111,-110,-119,-121,-113,76,-117,-30,-118,-120,-115,-27,-114,-116,-121,-26,-112,-53,-49,-39,-37,-52,-38,-29,-24,-31,-73,-113,]),'BOOL':([7,23,65,148,],[13,13,13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varcte':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'cteint':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'addQPComp':([42,],[77,]),'tipo':([7,23,65,148,],[10,32,117,117,]),'bloque':([30,194,195,212,],[63,201,201,201,]),'estatuto':([62,100,145,194,195,212,],[100,100,100,202,202,202,]),'checarparams':([155,],[172,]),'addQPAO':([57,],[95,]),'condicion':([62,100,145,194,195,212,],[98,98,98,98,98,98,]),'listaid':([10,26,],[20,60,]),'addQPP':([157,158,],[175,175,]),'ctefloat':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'exp':([25,59,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[42,42,42,42,42,130,42,42,42,42,42,42,42,42,42,42,42,]),'addQPPM':([54,],[90,]),'masbloque':([204,],[211,]),'masargs':([120,168,],[146,187,]),'expcompcontinuo':([42,],[82,]),'escritura':([62,100,145,194,195,212,],[108,108,108,108,108,108,]),'idarray':([25,59,62,73,77,84,85,90,95,100,135,137,138,139,140,145,149,154,175,184,192,194,195,212,],[46,46,105,46,46,46,46,46,46,105,46,46,46,46,46,105,46,46,46,46,46,105,105,105,]),'masdims':([35,],[69,]),'addQTD':([40,],[73,]),'programa':([0,],[3,]),'listafuncargs':([129,170,],[155,188,]),'masprint':([157,158,],[176,177,]),'empty':([5,8,17,19,29,35,40,42,54,57,62,65,85,100,120,124,129,144,145,148,155,157,158,168,170,181,182,186,194,195,203,204,210,212,],[6,16,21,27,6,68,70,75,86,92,113,119,128,113,147,151,156,21,113,119,171,173,173,147,156,193,193,21,6,6,207,209,207,6,]),'vars':([5,29,62,100,145,194,195,212,],[8,61,114,114,114,114,114,114,]),'dimsvar':([84,137,149,],[125,161,169,]),'termino':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[54,54,122,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'varid':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'listaprint':([135,175,],[159,189,]),'ciclo':([62,100,145,194,195,212,],[112,112,112,112,112,112,]),'rightparen':([96,],[133,]),'leftparen':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'masexpresion':([57,],[91,]),'print':([62,100,145,194,195,212,],[102,102,102,102,102,102,]),'lectura':([62,100,145,194,195,212,],[99,99,99,99,99,99,]),'funcargs':([85,],[127,]),'factor':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'expdimvar':([84,137,149,],[124,124,124,]),'masid':([19,],[28,]),'ctestring':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[41,41,41,41,41,41,41,41,157,41,41,41,41,41,41,157,41,41,]),'while':([62,100,145,194,195,212,],[106,106,106,106,106,106,]),'retorno':([166,],[185,]),'bloquefunc':([118,167,],[144,186,]),'dims':([24,67,],[34,121,]),'eramain':([8,],[17,]),'initvar':([10,26,],[19,19,]),'args':([65,148,],[120,168,]),'masestatuto':([62,100,145,],[110,134,166,]),'gotoF':([181,182,],[194,195,]),'main':([22,],[30,]),'funcs':([17,144,186,],[22,165,199,]),'llamafunc':([25,59,62,73,77,84,85,90,95,100,135,137,138,139,140,145,149,154,175,184,192,194,195,212,],[49,49,111,49,49,49,49,49,49,111,49,49,49,49,49,111,49,49,49,49,49,111,111,111,]),'idfunc':([25,59,62,73,77,84,85,90,95,100,135,137,138,139,140,145,149,154,175,184,192,194,195,212,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ctebool':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'prog':([0,],[1,]),'estatutobloque':([194,195,212,],[203,204,213,]),'masexp':([54,],[87,]),'goto':([203,210,],[208,212,]),'masterminos':([40,],[71,]),'masdimsvar':([124,],[150,]),'funcaux':([23,],[33,]),'expresion':([25,59,84,85,95,135,137,138,139,140,149,154,175,184,192,],[56,96,126,129,131,158,126,162,163,164,126,170,158,196,200,]),'asignacion':([62,100,145,194,195,212,],[116,116,116,116,116,116,]),'ctechar':([25,59,73,77,84,85,90,95,135,137,138,139,140,149,154,175,184,192,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expcomp':([25,59,77,84,85,95,135,137,138,139,140,149,154,175,184,192,],[57,57,123,57,57,57,57,57,57,57,57,57,57,57,57,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',196),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',202),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',207),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',219),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',225),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',229),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',230),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',233),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',239),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',242),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',243),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',246),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',253),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',258),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',262),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',265),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',269),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',270),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',274),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',275),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',278),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',283),
  ('asignacion -> idarray LSQBRACKET dimsvar RSQBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','OpenRoonie.py',284),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',305),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',306),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',307),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',308),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',311),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',315),
  ('varid -> ID','varid',1,'p_varid','OpenRoonie.py',319),
  ('varid -> idarray LSQBRACKET dimsvar RSQBRACKET','varid',4,'p_varid','OpenRoonie.py',320),
  ('idarray -> ID','idarray',1,'p_idarray','OpenRoonie.py',329),
  ('dimsvar -> expdimvar masdimsvar','dimsvar',2,'p_dimsvar','OpenRoonie.py',333),
  ('expdimvar -> expresion','expdimvar',1,'p_expdimvar','OpenRoonie.py',336),
  ('masdimsvar -> COMMA dimsvar','masdimsvar',2,'p_masdimsvar','OpenRoonie.py',381),
  ('masdimsvar -> empty','masdimsvar',1,'p_masdimsvar','OpenRoonie.py',382),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',385),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',388),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',389),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',393),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',394),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',399),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',400),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',403),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',406),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',407),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',412),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',413),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',417),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',420),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',421),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',426),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',427),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',431),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',434),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',435),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',436),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',437),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',438),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',439),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',444),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',445),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',449),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',450),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',451),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',452),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',453),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',454),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',455),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',456),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',457),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',460),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',465),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',478),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',494),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',495),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',499),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',500),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',503),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',513),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',514),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',517),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',518),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',521),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',524),
  ('initvar -> ID LSQBRACKET dims RSQBRACKET','initvar',4,'p_initvar','OpenRoonie.py',525),
  ('initvar -> ID','initvar',1,'p_initvar','OpenRoonie.py',526),
  ('dims -> CTEINT masdims','dims',2,'p_dims','OpenRoonie.py',546),
  ('masdims -> COMMA dims','masdims',2,'p_masdims','OpenRoonie.py',550),
  ('masdims -> empty','masdims',1,'p_masdims','OpenRoonie.py',551),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',554),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',555),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',558),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',559),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',560),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',563),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',566),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',567),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',590),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',599),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',600),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',607),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',608),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',611),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',612),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',613),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',614),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',615),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',616),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',621),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',622),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',623),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',624),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',625),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',628),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',632),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',636),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',640),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',644),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',645),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',653),
]
