
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '46CA72195DFDC73B54E9E43BE3D63374'
    
_lr_action_items = {'PLUS':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,98,100,104,105,115,138,139,140,141,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,107,-99,-94,-102,-103,-27,-29,-42,-46,-95,-22,-26,-28,-45,]),'ID':([1,3,8,9,10,11,12,13,14,15,22,25,28,31,34,37,39,40,41,42,43,44,46,47,49,51,58,61,63,65,76,82,83,84,85,93,101,102,103,106,107,108,110,121,122,123,124,125,127,128,130,131,133,135,146,147,150,156,159,162,165,167,169,171,172,175,176,181,183,],[4,-2,-75,-86,-90,19,-88,-89,-91,-87,30,19,-103,38,-74,57,-61,-75,-59,-57,38,-56,-60,-62,64,-58,90,64,64,-71,-25,64,64,64,-6,-21,-70,-43,-44,64,-33,-34,64,-52,-50,-51,-49,-53,-48,64,-19,-38,64,-39,64,-18,64,64,-63,-12,-103,-103,64,-10,-9,-8,-4,-20,-7,]),'LBRACKET':([23,24,56,137,153,157,158,163,172,177,180,],[-3,31,31,-103,-103,31,-5,31,-9,-103,31,]),'DIVIDE':([62,64,66,67,69,70,71,72,73,74,75,77,79,80,81,90,98,100,115,138,139,140,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,103,-99,-94,-102,-103,-27,-29,-95,-22,-26,-28,]),'CTEINT':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[72,72,72,72,-25,72,72,72,-43,-44,72,-33,-34,72,-52,-50,-51,-49,-53,-48,72,-38,72,-39,72,-18,72,72,72,]),'LPAREN':([21,30,38,45,48,49,50,52,53,54,58,61,63,76,82,83,84,90,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[29,-81,-64,-11,61,76,82,-13,83,84,76,76,76,-25,76,76,76,-64,-43,-44,76,-33,-34,76,-52,-50,-51,-49,-53,-48,76,-38,76,-39,76,-18,76,76,76,]),'MAIN':([5,7,8,16,18,28,34,85,86,119,],[-103,-103,-75,-80,23,-103,-74,-6,-103,-79,]),'TIMES':([62,64,66,67,69,70,71,72,73,74,75,77,79,80,81,90,98,100,115,138,139,140,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,102,-99,-94,-102,-103,-27,-29,-95,-22,-26,-28,]),'RPAREN':([29,35,36,57,62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,91,94,96,97,98,100,104,105,109,111,112,113,114,115,116,117,118,120,126,129,132,134,138,139,140,141,142,144,145,148,149,152,154,155,160,161,166,173,174,],[-103,56,-83,-103,-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,-82,-85,-103,-103,137,139,-27,-29,-42,-46,-32,-30,-66,143,-103,-95,151,-103,153,-84,-55,-47,-41,-37,-22,-26,-28,-45,-31,-68,-65,-15,-17,-14,-54,-40,-103,-16,-103,-67,-69,]),'MORETHAN':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,127,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'FLOAT':([6,17,29,87,],[15,15,15,15,]),'AND':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,94,98,100,104,105,109,111,115,126,129,138,139,140,141,142,154,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,131,-27,-29,-42,-46,-32,-30,-95,-55,-47,-22,-26,-28,-45,-31,-54,]),'STRING':([6,17,29,87,],[10,10,10,10,]),'ELSE':([85,167,],[-6,177,]),'INT':([6,17,29,87,],[9,9,9,9,]),'RBRACKET':([8,28,31,34,39,40,41,42,43,44,46,47,51,55,60,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[-75,-103,-103,-74,-61,-73,-59,-57,-103,-56,-60,-62,-58,85,-72,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'MINUS':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,98,100,104,105,115,138,139,140,141,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,108,-99,-94,-102,-103,-27,-29,-42,-46,-95,-22,-26,-28,-45,]),'LSQBRACKET':([38,64,90,136,],[59,99,99,156,]),'VAR':([5,8,28,31,34,39,40,41,42,43,44,46,47,51,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[6,-75,6,6,-74,-61,-75,-59,-57,6,-56,-60,-62,-58,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'LESSTHANEQUAL':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,125,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'MORETHANEQUAL':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,121,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'FALSE':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[81,81,81,81,-25,81,81,81,-43,-44,81,-33,-34,81,-52,-50,-51,-49,-53,-48,81,-38,81,-39,81,-18,81,81,81,]),'NOTEQUAL':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,122,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'LESSTHAN':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,124,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'$end':([2,32,85,],[0,-1,-6,]),'SEMICOLON':([4,19,20,26,27,33,49,62,64,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,90,91,92,94,98,100,104,105,109,111,126,129,132,134,138,139,140,141,142,143,151,154,155,178,],[5,-103,28,-78,-76,-77,65,-95,-103,-100,-24,101,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,130,-103,-27,-29,-42,-46,-32,-30,-55,-47,-41,-37,-22,-26,-28,-45,-31,159,162,-54,-40,181,]),'CTESTRING':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[66,66,66,66,-25,66,66,66,-43,-44,66,-33,-34,66,-52,-50,-51,-49,-53,-48,66,-38,66,-39,66,-18,66,66,66,]),'OR':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,94,98,100,104,105,109,111,115,126,129,138,139,140,141,142,154,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,135,-27,-29,-42,-46,-32,-30,-95,-55,-47,-22,-26,-28,-45,-31,-54,]),'PRINT':([8,28,31,34,39,40,41,42,43,44,46,47,51,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[-75,-103,52,-74,-61,-75,-59,-57,52,-56,-60,-62,-58,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'ISEQUALTO':([62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,90,91,98,100,104,105,109,111,115,138,139,140,141,142,],[-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,123,-27,-29,-42,-46,-32,-30,-95,-22,-26,-28,-45,-31,]),'CHAR':([6,17,29,87,],[12,12,12,12,]),'RETURN':([8,28,31,34,39,40,41,42,43,44,46,47,51,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[-75,-103,49,-74,-61,-75,-59,-57,49,-56,-60,-62,-58,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'RSQBRACKET':([59,62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,91,94,98,99,100,104,105,109,111,126,129,132,134,138,139,140,141,142,154,155,164,168,170,179,182,],[95,-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,-27,140,-29,-42,-46,-32,-30,-55,-47,-41,-37,-22,-26,-28,-45,-31,-54,-40,-103,178,-36,-103,-35,]),'TRUE':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[73,73,73,73,-25,73,73,73,-43,-44,73,-33,-34,73,-52,-50,-51,-49,-53,-48,73,-38,73,-39,73,-18,73,73,73,]),'PROGRAM':([0,],[3,]),'WHILE':([8,28,31,34,39,40,41,42,43,44,46,47,51,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[-75,-103,45,-74,-61,-75,-59,-57,45,-56,-60,-62,-58,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'BOOL':([6,17,29,87,],[13,13,13,13,]),'IF':([8,28,31,34,39,40,41,42,43,44,46,47,51,65,85,93,101,130,159,162,165,167,171,172,175,176,181,183,],[-75,-103,54,-74,-61,-75,-59,-57,54,-56,-60,-62,-58,-71,-6,-21,-70,-19,-63,-12,-103,-103,-10,-9,-8,-4,-20,-7,]),'FUNCTION':([5,7,8,28,34,85,86,],[-103,17,-75,-103,-74,-6,17,]),'EQUALS':([38,95,],[58,136,]),'CTECHAR':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[79,79,79,79,-25,79,79,79,-43,-44,79,-33,-34,79,-52,-50,-51,-49,-53,-48,79,-38,79,-39,79,-18,79,79,79,]),'COMMA':([19,57,62,64,66,67,69,70,71,72,73,74,75,77,78,79,80,81,91,94,98,100,104,105,109,111,114,115,117,126,129,132,134,138,139,140,141,142,154,155,160,164,179,],[25,87,-95,-103,-100,-24,-93,-23,-98,-97,-101,-92,-96,-103,-103,-99,-94,-102,-103,-103,-27,-29,-42,-46,-32,-30,146,147,147,-55,-47,-41,-37,-22,-26,-28,-45,-31,-54,-40,146,169,169,]),'VOID':([6,17,29,87,],[14,14,14,14,]),'CTEFLOAT':([49,58,61,63,76,82,83,84,102,103,106,107,108,110,121,122,123,124,125,127,128,131,133,135,146,147,150,156,169,],[71,71,71,71,-25,71,71,71,-43,-44,71,-33,-34,71,-52,-50,-51,-49,-53,-48,71,-38,71,-39,71,-18,71,71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'checarparams':([166,],[173,]),'listaid':([11,25,],[20,33,]),'listaprint':([83,150,],[116,161,]),'masargs':([57,],[88,]),'gotoF':([137,153,],[157,163,]),'prog':([0,],[1,]),'rightparen':([97,],[138,]),'args':([29,87,],[35,120,]),'expcompcontinuo':([91,],[129,]),'funcaux':([17,],[21,]),'arr':([64,90,],[98,98,]),'varcte':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'programa':([0,],[2,]),'cteint':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ctebool':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'listafuncargs':([114,160,],[145,166,]),'addQPPM':([78,],[110,]),'addQTD':([77,],[106,]),'factor':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'termino':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[78,78,78,78,78,78,78,141,78,78,78,78,78,78,78,]),'comaexpresion':([164,179,],[168,182,]),'ciclo':([31,43,],[51,51,]),'masprint':([115,117,],[148,152,]),'expcomp':([58,61,63,82,83,84,128,133,146,150,156,169,],[94,94,94,94,94,94,154,94,94,94,94,94,]),'masexp':([78,],[111,]),'ctestring':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[62,62,62,62,62,115,62,62,62,62,62,62,115,62,62,]),'leftparen':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'bloque':([24,56,157,163,180,],[32,86,165,167,183,]),'print':([31,43,],[53,53,]),'idfunc':([31,43,58,],[50,50,50,]),'empty':([5,7,19,28,29,31,43,57,64,77,78,82,86,87,90,91,94,114,115,117,137,153,160,164,165,166,167,177,179,],[8,16,26,8,36,40,40,89,100,105,109,112,16,36,100,126,132,144,149,149,158,158,144,170,172,174,175,172,170,]),'escritura':([31,43,],[41,41,]),'varid':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'exp':([49,58,61,63,82,83,84,110,128,133,146,150,156,169,],[68,91,91,91,91,91,91,142,91,91,91,91,91,91,]),'addQPAO':([94,],[133,]),'ctefloat':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'condicion':([31,43,],[42,42,]),'masbloque':([167,],[176,]),'expresion':([58,61,63,82,83,84,133,146,150,156,169,],[92,96,97,114,117,118,155,160,117,164,179,]),'masexpresion':([94,],[134,]),'estatuto':([31,43,],[43,43,]),'goto':([165,177,],[171,180,]),'asignacion':([31,43,],[44,44,]),'vars':([5,28,31,43,],[7,34,46,46,]),'funcs':([7,86,],[18,119,]),'llamafunc':([31,43,58,],[47,47,93,]),'while':([31,43,],[48,48,]),'addQPComp':([91,],[128,]),'masid':([19,],[27,]),'retorno':([31,43,],[39,39,]),'tipo':([6,17,29,87,],[11,22,37,37,]),'ctechar':([49,58,61,63,82,83,84,106,110,128,133,146,150,156,169,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'masterminos':([77,],[104,]),'main':([18,],[24,]),'addQPP':([115,117,],[150,150,]),'masestatuto':([31,43,],[55,60,]),'funcargs':([82,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',169),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',172),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',182),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',190),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',194),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',201),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',204),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',205),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',207),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',214),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',219),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',223),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',226),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',230),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',231),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',235),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',236),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',239),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',244),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',245),
  ('asignacion -> ID EQUALS llamafunc','asignacion',3,'p_asignacion','OpenRoonie.py',246),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',252),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',253),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',254),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',257),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',261),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',265),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',269),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',270),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',273),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',276),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',277),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',281),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',282),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',287),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',288),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',291),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',294),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',295),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',300),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',301),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',305),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',308),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',309),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',314),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',315),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',319),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',322),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',323),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',324),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',325),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',326),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',327),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',332),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',333),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',337),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',338),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',339),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',340),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',341),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','OpenRoonie.py',342),
  ('estatuto -> llamafunc','estatuto',1,'p_estatuto','OpenRoonie.py',343),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN SEMICOLON','llamafunc',5,'p_llamafunc','OpenRoonie.py',346),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',349),
  ('funcargs -> expresion listafuncargs','funcargs',2,'p_funcargs','OpenRoonie.py',353),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',354),
  ('listafuncargs -> COMMA expresion listafuncargs checarparams','listafuncargs',4,'p_listafuncargs','OpenRoonie.py',357),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',358),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',361),
  ('retorno -> RETURN exp SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',372),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',373),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',376),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',377),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',380),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',381),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',384),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',390),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',391),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',394),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',395),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',399),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',404),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',405),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',411),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',412),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',415),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',416),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',417),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',418),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',419),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',420),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',425),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',426),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',427),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',428),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',429),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',432),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',436),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',440),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',444),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',448),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',449),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',457),
]
