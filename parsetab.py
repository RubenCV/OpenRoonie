
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A6C2DB28C3BD2821C56FEFA897588405'
    
_lr_action_items = {'RBRACKET':([8,24,34,62,96,98,99,100,101,102,104,107,108,109,112,132,133,136,161,163,171,173,177,179,180,181,183,184,186,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,-113,-60,-59,-64,-61,-66,132,-77,-67,-62,-113,-63,-9,-65,-76,176,-113,-113,-22,-90,-113,-8,-15,-68,-113,-89,-7,-113,-6,-113,-12,-13,-5,-113,-11,-113,-10,-23,]),'COMMENT':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,101,-60,-59,-64,-61,-66,-79,-67,-62,101,-63,101,-9,-65,-113,-113,-22,101,-8,-15,-68,101,-7,-113,-6,-113,-12,-13,-5,-113,-11,101,-10,-23,]),'ISEQUALTO':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,73,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'CTESTRING':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[54,-28,54,54,-47,-46,54,-55,-56,-54,-53,-52,-51,54,54,-36,-37,-42,54,-41,54,54,54,54,54,54,54,-21,54,54,]),'CTEFLOAT':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[37,-28,37,37,-47,-46,37,-55,-56,-54,-53,-52,-51,37,37,-36,-37,-42,37,-41,37,37,37,37,37,37,37,-21,37,37,]),'$end':([1,61,132,],[0,-1,-9,]),'LESSTHANEQUAL':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,71,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'DIVIDE':([35,37,38,39,41,43,44,45,48,49,50,51,52,54,55,57,90,91,118,119,124,140,150,],[-102,-108,-105,-25,-106,66,-111,-112,-27,-109,-104,-107,-103,-110,-26,-113,-32,-30,-24,-29,-31,-69,-105,]),'TRUE':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[44,-28,44,44,-47,-46,44,-55,-56,-54,-53,-52,-51,44,44,-36,-37,-42,44,-41,44,44,44,44,44,44,44,-21,44,44,]),'LSQBRACKET':([57,114,172,],[89,138,185,]),'STRING':([6,21,59,126,],[12,12,12,12,]),'CHAR':([6,21,59,126,],[14,14,14,14,]),'READ':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,106,-60,-59,-64,-61,-66,-79,-67,-62,106,-63,106,-9,-65,-113,-113,-22,106,-8,-15,-68,106,-7,-113,-6,-113,-12,-13,-5,-113,-11,106,-10,-23,]),'PLUS':([35,37,38,39,41,43,44,45,47,48,49,50,51,52,54,55,57,65,68,90,91,118,119,120,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,80,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-32,-30,-24,-29,-48,-31,-69,-105,]),'CTECHAR':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[49,-28,49,49,-47,-46,49,-55,-56,-54,-53,-52,-51,49,49,-36,-37,-42,49,-41,49,49,49,49,49,49,49,-21,49,49,]),'CPPCOMMENT':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,107,-60,-59,-64,-61,-66,-79,-67,-62,107,-63,107,-9,-65,-113,-113,-22,107,-8,-15,-68,107,-7,-113,-6,-113,-12,-13,-5,-113,-11,107,-10,-23,]),'EQUALS':([19,114,154,],[26,139,172,]),'CTEINT':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[51,-28,51,51,-47,-46,51,-55,-56,-54,-53,-52,-51,51,51,-36,-37,-42,51,-41,51,51,51,51,51,51,51,-21,51,51,]),'FALSE':([26,36,42,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,131,134,137,139,142,162,165,168,185,197,],[45,-28,45,45,-47,-46,45,-55,-56,-54,-53,-52,-51,45,45,-36,-37,-42,45,-41,45,45,45,45,45,45,45,-21,45,45,]),'FUNCTION':([5,7,8,16,17,24,34,130,159,176,],[-113,-113,-79,-3,21,-113,-78,21,21,-88,]),'PRINT':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,111,-60,-59,-64,-61,-66,-79,-67,-62,111,-63,111,-9,-65,-113,-113,-22,111,-8,-15,-68,111,-7,-113,-6,-113,-12,-13,-5,-113,-11,111,-10,-23,]),'MINUS':([35,37,38,39,41,43,44,45,47,48,49,50,51,52,54,55,57,65,68,90,91,118,119,120,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,82,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-32,-30,-24,-29,-48,-31,-69,-105,]),'IF':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,113,-60,-59,-64,-61,-66,-79,-67,-62,113,-63,113,-9,-65,-113,-113,-22,113,-8,-15,-68,113,-7,-113,-6,-113,-12,-13,-5,-113,-11,113,-10,-23,]),'VOID':([6,21,59,126,],[15,15,15,15,]),'ID':([2,3,8,9,10,11,12,13,14,15,24,26,29,31,34,36,42,62,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,93,96,98,99,100,101,104,107,108,109,112,129,131,132,133,134,135,137,139,142,162,163,165,168,171,173,179,180,181,183,184,185,187,188,189,190,192,193,194,195,196,197,200,203,205,],[-2,4,-79,19,-99,-96,-100,-97,-98,-101,-113,57,19,60,-78,-28,57,114,57,-47,-46,57,-55,-56,-54,-53,-52,-51,57,57,-36,-37,-42,57,-41,128,-60,-59,-64,-61,-66,-79,-67,-62,114,-63,114,57,-9,-65,57,152,57,57,57,57,-113,57,-21,-113,-22,114,-8,-15,-68,114,57,-7,-113,-6,-113,-12,-13,-5,-113,-11,57,114,-10,-23,]),'INT':([6,21,59,126,],[11,11,11,11,]),'RPAREN':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,59,63,64,65,68,72,77,81,83,87,88,90,91,92,94,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,141,143,145,148,149,150,151,152,153,156,157,158,160,166,167,169,174,182,],[-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,-113,-110,-26,-113,95,-113,119,-45,-49,-50,-58,-33,-35,-40,-44,-32,-30,-113,-93,140,-72,-113,-24,-29,-48,-57,-34,-43,-31,144,-113,-95,-92,-69,-113,-74,-113,163,164,-105,-113,170,171,-71,-75,-113,-94,-18,-20,-17,-73,-19,]),'VAR':([5,8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[6,-79,6,-78,6,-60,-59,-64,-61,-66,-79,-67,-62,6,-63,6,-9,-65,-113,-113,-22,6,-8,-15,-68,6,-7,-113,-6,-113,-12,-13,-5,-113,-11,6,-10,-23,]),'MORETHAN':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,76,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'NOTEQUAL':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,74,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'LPAREN':([26,30,36,40,42,57,60,63,66,67,69,70,71,73,74,75,76,78,79,80,82,84,85,86,97,105,106,110,111,113,114,131,134,137,139,142,162,165,168,185,197,],[36,59,-28,63,36,-70,-91,36,-47,-46,36,-55,-56,-54,-53,-52,-51,36,36,-36,-37,-42,36,-41,131,134,135,-14,-16,137,-70,36,36,36,36,36,36,36,-21,36,36,]),'PROGRAM':([0,],[2,]),'COMMA':([19,20,25,35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,65,68,72,77,81,83,87,88,90,91,92,94,117,118,119,120,121,122,123,124,126,128,140,145,150,151,158,191,201,],[-113,29,-82,-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,-113,-110,-26,-81,-113,-113,-45,-49,-50,-58,-33,-35,-40,-44,-32,-30,126,-93,142,-24,-29,-48,-57,-34,-43,-31,-113,-92,-69,126,168,168,142,197,197,]),'BOOL':([6,21,59,126,],[10,10,10,10,]),'RSQBRACKET':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,65,68,72,77,81,83,87,88,89,90,91,118,119,120,121,122,123,124,138,140,191,198,199,201,204,],[-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,-113,-110,-26,-113,-45,-49,-50,-58,-33,-35,-40,-44,124,-32,-30,-24,-29,-48,-57,-34,-43,-31,154,-69,-113,-39,202,-113,-38,]),'MAIN':([5,7,8,16,17,22,23,24,34,130,147,159,175,176,],[-113,-113,-79,-3,-113,32,-87,-113,-78,-113,-86,-113,-85,-88,]),'RETURN':([8,24,34,96,98,99,100,101,104,107,108,109,112,129,132,133,136,146,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,-60,-59,-64,-61,-66,-77,-67,-62,-113,-63,-113,-9,-65,-76,162,-113,-113,-22,-113,-8,-15,-68,-113,-7,-113,-6,-113,-12,-13,-5,-113,-11,-113,-10,-23,]),'SEMICOLON':([4,18,19,20,25,27,28,35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,68,72,77,81,83,87,88,90,91,103,118,119,120,121,122,123,124,140,155,162,164,170,178,202,],[5,24,-113,-113,-82,-80,-84,-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,-113,-110,-26,-81,-113,-83,-45,-49,-50,-58,-33,-35,-40,-44,-32,-30,133,-24,-29,-48,-57,-34,-43,-31,-69,173,177,181,183,186,205,]),'MORETHANEQUAL':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,70,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'AND':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,65,68,72,77,81,83,90,91,118,119,120,121,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,86,-110,-26,-113,-45,-49,-50,-58,-33,-35,-32,-30,-24,-29,-48,-57,-34,-31,-69,-105,]),'ELSE':([8,24,34,96,98,99,100,101,107,108,112,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,-60,-59,-64,-61,-66,-67,-62,-63,-9,-65,-113,-113,-22,-113,-8,-15,-68,-113,-7,-113,-6,195,-12,-13,-5,-113,-11,-113,-10,-23,]),'LESSTHAN':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,55,57,65,68,81,83,90,91,118,119,120,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,75,-113,-27,-109,-104,-107,-103,-110,-26,-113,-45,-49,-33,-35,-32,-30,-24,-29,-48,-34,-31,-69,-105,]),'LBRACKET':([32,33,95,144,163,171,179,180,184,192,195,200,],[-4,62,129,129,-113,-113,62,-8,62,-12,-113,62,]),'OR':([35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,65,68,72,77,81,83,90,91,118,119,120,121,122,124,140,150,],[-102,-108,-105,-25,-106,-113,-111,-112,-113,-113,-27,-109,-104,-107,-103,84,-110,-26,-113,-45,-49,-50,-58,-33,-35,-32,-30,-24,-29,-48,-57,-34,-31,-69,-105,]),'FLOAT':([6,21,59,126,],[13,13,13,13,]),'TIMES':([35,37,38,39,41,43,44,45,48,49,50,51,52,54,55,57,90,91,118,119,124,140,150,],[-102,-108,-105,-25,-106,67,-111,-112,-27,-109,-104,-107,-103,-110,-26,-113,-32,-30,-24,-29,-31,-69,-105,]),'WHILE':([8,24,34,62,96,98,99,100,101,104,107,108,109,112,129,132,133,163,171,173,179,180,181,183,184,187,188,189,190,192,193,194,195,196,200,203,205,],[-79,-113,-78,110,-60,-59,-64,-61,-66,-79,-67,-62,110,-63,110,-9,-65,-113,-113,-22,110,-8,-15,-68,110,-7,-113,-6,-113,-12,-13,-5,-113,-11,110,-10,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([33,179,184,200,],[61,187,187,187,]),'cteint':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'condicion':([62,109,129,179,184,200,],[96,96,96,96,96,96,]),'funcargs':([63,],[115,]),'funcaux':([21,],[30,]),'addQPAO':([53,],[85,]),'vars':([5,24,62,109,129,179,184,200,],[7,34,99,99,99,99,99,99,]),'ctestring':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[38,38,38,38,38,38,38,38,150,38,38,38,38,150,38,38,]),'idfunc':([26,42,62,63,69,78,79,85,109,129,131,134,137,139,142,162,165,179,184,185,197,200,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'prog':([0,],[3,]),'addQPComp':([46,],[78,]),'initvar':([9,29,],[20,20,]),'factor':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'checarparams':([141,],[156,]),'exp':([26,42,63,78,79,85,131,134,137,139,142,162,165,185,197,],[46,46,46,46,122,46,46,46,46,46,46,46,46,46,46,]),'masestatuto':([62,109,129,],[102,136,146,]),'termino':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[47,47,47,120,47,47,47,47,47,47,47,47,47,47,47,47,]),'masbloque':([190,],[194,]),'addQPPM':([47,],[79,]),'listaprint':([134,165,],[149,182,]),'programa':([0,],[1,]),'ctefloat':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'masargs':([92,145,],[125,160,]),'main':([22,],[33,]),'estatuto':([62,109,129,179,184,200,],[109,109,109,189,189,189,]),'expcomp':([26,42,63,78,85,131,134,137,139,142,162,165,185,197,],[53,53,53,121,53,53,53,53,53,53,53,53,53,53,]),'retorno':([146,],[161,]),'varid':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'expresion':([26,42,63,85,131,134,137,139,142,162,165,185,197,],[56,64,117,123,148,151,153,155,158,178,151,191,201,]),'rightparen':([64,],[118,]),'masexp':([47,],[81,]),'comaexpresion':([191,201,],[199,204,]),'addQPP':([150,151,],[165,165,]),'masterminos':([43,],[65,]),'while':([62,109,129,179,184,200,],[97,97,97,97,97,97,]),'args':([59,126,],[92,145,]),'asignacion':([62,109,129,179,184,200,],[98,98,98,98,98,98,]),'varcte':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ctebool':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'leftparen':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ciclo':([62,109,129,179,184,200,],[100,100,100,100,100,100,]),'masprint':([150,151,],[166,169,]),'lectura':([62,109,129,179,184,200,],[112,112,112,112,112,112,]),'estatutobloque':([179,184,200,],[188,190,203,]),'llamafunc':([26,42,62,63,69,78,79,85,109,129,131,134,137,139,142,162,165,179,184,185,197,200,],[48,48,103,48,48,48,48,48,103,103,48,48,48,48,48,48,48,103,103,48,48,103,]),'empty':([5,7,17,19,20,24,43,46,47,53,57,59,62,63,92,109,117,126,129,130,141,145,150,151,158,159,163,171,179,184,188,190,191,195,200,201,],[8,16,23,25,28,8,68,77,83,88,90,94,104,116,127,104,143,94,104,23,157,127,167,167,143,23,180,180,8,8,192,196,198,192,8,198,]),'print':([62,109,129,179,184,200,],[105,105,105,105,105,105,]),'masid':([20,],[27,]),'listaid':([9,29,],[18,58,]),'goto':([188,195,],[193,200,]),'bloquefunc':([95,144,],[130,159,]),'escritura':([62,109,129,179,184,200,],[108,108,108,108,108,108,]),'masexpresion':([53,],[87,]),'arr':([57,],[91,]),'tipo':([6,21,59,126,],[9,31,93,93,]),'gotoF':([163,171,],[179,184,]),'eramain':([7,],[17,]),'listafuncargs':([117,158,],[141,174,]),'ctechar':([26,42,63,69,78,79,85,131,134,137,139,142,162,165,185,197,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'funcs':([17,130,159,],[22,147,175,]),'expcompcontinuo':([46,],[72,]),'addQTD':([43,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars eramain funcs main bloque','programa',8,'p_programa','OpenRoonie.py',191),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',197),
  ('eramain -> empty','eramain',1,'p_eramain','OpenRoonie.py',202),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',214),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',220),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',224),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',225),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',228),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',234),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',237),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',238),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',241),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',248),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',253),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',257),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',260),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',264),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',265),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',269),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',270),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',273),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',278),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',279),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',285),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',286),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',287),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',288),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',291),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',295),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',299),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',303),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',304),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',307),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',310),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',311),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',315),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',316),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',321),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',322),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',325),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',328),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',329),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',334),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',335),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',339),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',342),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',343),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',348),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',349),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',353),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',356),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',357),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',358),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',359),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',360),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',361),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',366),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',367),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',371),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',372),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',373),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',374),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',375),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',376),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',377),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',378),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',379),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',382),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',387),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',400),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',416),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',417),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',421),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',422),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',425),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',435),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',436),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',439),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',440),
  ('listaid -> initvar masid','listaid',2,'p_listaid','OpenRoonie.py',443),
  ('initvar -> ID EQUALS expresion','initvar',3,'p_initvar','OpenRoonie.py',446),
  ('initvar -> ID empty','initvar',2,'p_initvar','OpenRoonie.py',447),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',454),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',455),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',458),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',459),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',460),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',463),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',466),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',467),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',490),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',499),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',500),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',507),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',508),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',511),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',512),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',513),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',514),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',515),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',516),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',521),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',522),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',523),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',524),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',525),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',528),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',532),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',536),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',540),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',544),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',545),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',553),
]
