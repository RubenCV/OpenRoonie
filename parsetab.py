
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C31CC5C6FF61DBED70D636D36E0DD1B4'
    
_lr_action_items = {'RETURN':([6,32,34,36,37,39,41,43,48,49,50,56,60,64,65,67,104,143,161,173,174,178,179,180,182,189,191,],[-74,-106,-56,-58,-63,-62,-72,-59,-60,-106,-57,-73,-61,-6,-71,-106,149,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'LSQBRACKET':([45,83,144,],[62,124,165,]),'CPPCOMMENT':([6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[-74,37,-106,-56,-58,-63,-62,-74,-59,-60,37,-57,-73,-61,-6,37,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'LPAREN':([21,28,33,35,38,40,44,45,46,57,58,59,61,63,77,83,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[27,-84,57,58,59,-13,-11,-65,63,77,77,77,77,77,-25,-65,77,-43,77,-44,-39,77,-38,-34,77,-33,77,-18,-52,-50,77,-51,-48,-49,-53,77,77,77,77,]),'NOTEQUAL':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,134,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'BOOL':([8,11,27,69,],[16,16,16,16,]),'INT':([8,11,27,69,],[17,17,17,17,]),'MAIN':([5,6,7,9,10,32,56,66,103,152,171,172,],[-106,-74,-106,20,-80,-106,-73,-106,-79,-106,-81,-78,]),'VOID':([8,11,27,69,],[12,12,12,12,]),'MORETHANEQUAL':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,133,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'STRING':([8,11,27,69,],[18,18,18,18,]),'LESSTHAN':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,138,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'LESSTHANEQUAL':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,139,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'MINUS':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,96,107,108,122,123,148,153,156,157,158,],[-106,-101,-96,-100,-104,117,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-98,-46,-42,-29,-27,-64,-45,-28,-26,-21,]),'MORETHAN':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,137,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'DIVIDE':([72,73,75,76,78,80,81,82,83,86,87,88,89,90,91,92,96,122,123,148,156,157,158,],[111,-101,-96,-100,-104,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-98,-29,-27,-64,-28,-26,-21,]),'$end':([3,26,64,],[0,-1,-6,]),'CTEFLOAT':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[73,73,73,73,73,-25,73,-43,73,-44,-39,73,-38,-34,73,-33,73,-18,-52,-50,73,-51,-48,-49,-53,73,73,73,73,]),'VAR':([5,6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[8,-74,8,8,-56,-58,-63,-62,-74,-59,-60,8,-57,-73,-61,-6,8,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'FLOAT':([8,11,27,69,],[13,13,13,13,]),'TIMES':([72,73,75,76,78,80,81,82,83,86,87,88,89,90,91,92,96,122,123,148,156,157,158,],[109,-101,-96,-100,-104,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-98,-29,-27,-64,-28,-26,-21,]),'COMMA':([23,27,52,54,69,71,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,96,101,105,107,108,114,115,118,120,122,123,131,132,148,153,154,155,156,157,158,160,166,175,187,],[30,-106,69,-86,-106,-85,-106,-101,-106,-96,-100,-104,-106,-103,-95,-105,-106,127,-24,-99,-97,-22,-102,127,-23,-106,-98,146,69,-46,-42,-37,-41,-32,-30,-29,-27,-55,-47,-64,-45,-40,-31,-28,-26,-21,-54,146,183,183,]),'IF':([6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[-74,38,-106,-56,-58,-63,-62,-74,-59,-60,38,-57,-73,-61,-6,38,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'SEMICOLON':([4,23,24,29,31,42,55,72,73,74,75,76,78,79,80,81,82,83,86,87,88,89,90,92,93,96,98,107,108,114,115,118,120,122,123,131,132,140,148,149,153,154,155,156,157,158,160,170,188,],[5,-106,32,-77,-75,60,-76,-106,-101,-106,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-23,-106,-98,143,-46,-42,-37,-41,-32,-30,-29,-27,-55,-47,161,-64,169,-45,-40,-31,-28,-26,-21,-54,177,191,]),'PLUS':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,96,107,108,122,123,148,153,156,157,158,],[-106,-101,-96,-100,-104,121,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-98,-46,-42,-29,-27,-64,-45,-28,-26,-21,]),'OR':([72,73,74,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,131,132,148,153,155,156,157,158,160,],[-106,-101,112,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-106,-98,-46,-42,-32,-30,-29,-27,-55,-47,-64,-45,-31,-28,-26,-21,-54,]),'COMMENT':([6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[-74,39,-106,-56,-58,-63,-62,-74,-59,-60,39,-57,-73,-61,-6,39,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'EQUALS':([45,99,],[61,144,]),'PRINT':([6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[-74,40,-106,-56,-58,-63,-62,-74,-59,-60,40,-57,-73,-61,-6,40,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'FALSE':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[82,82,82,82,82,-25,82,-43,82,-44,-39,82,-38,-34,82,-33,82,-18,-52,-50,82,-51,-48,-49,-53,82,82,82,82,]),'LBRACKET':([19,20,51,106,141,142,162,163,164,178,181,186,],[25,-3,67,67,-106,-106,-5,25,25,-9,-106,25,]),'RSQBRACKET':([62,72,73,74,75,76,78,79,80,81,82,83,86,87,88,89,90,92,93,96,107,108,114,115,118,120,122,123,124,131,132,148,153,154,155,156,157,158,160,175,184,185,187,190,],[99,-106,-101,-106,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-23,-106,-98,-46,-42,-37,-41,-32,-30,-29,-27,156,-55,-47,-64,-45,-40,-31,-28,-26,-21,-54,-106,-36,188,-106,-35,]),'CTEINT':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[76,76,76,76,76,-25,76,-43,76,-44,-39,76,-38,-34,76,-33,76,-18,-52,-50,76,-51,-48,-49,-53,76,76,76,76,]),'WHILE':([6,25,32,34,36,37,39,41,43,48,49,50,56,60,64,67,143,161,173,174,178,179,180,182,189,191,],[-74,44,-106,-56,-58,-63,-62,-74,-59,-60,44,-57,-73,-61,-6,44,-19,-12,-106,-106,-9,-10,-8,-4,-7,-20,]),'ID':([1,2,6,12,13,14,15,16,17,18,22,25,30,32,34,36,37,39,41,43,48,49,50,53,56,57,58,59,60,61,63,64,67,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,143,146,149,161,165,173,174,178,179,180,182,183,189,191,],[4,-2,-74,-94,-90,23,-91,-92,-89,-93,28,45,23,-106,-56,-58,-63,-62,-74,-59,-60,45,-57,71,-73,83,83,83,-61,83,83,-6,45,-25,83,-43,83,-44,-39,83,-38,-34,83,-33,83,-18,-52,-50,83,-51,-48,-49,-53,-19,83,83,-12,83,-106,-106,-9,-10,-8,-4,83,-7,-20,]),'RPAREN':([27,52,54,63,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,105,107,108,114,115,118,120,122,123,125,128,129,130,131,132,145,147,148,151,153,154,155,156,157,158,159,160,166,167,168,176,],[51,-106,-86,-106,-88,-106,106,-85,-106,-101,-106,-96,-100,-104,-106,-103,-95,-105,-106,-106,-24,-99,-97,-22,-102,-98,-23,-106,140,141,-98,142,-67,-106,148,-106,-46,-42,-37,-41,-32,-30,-29,-27,157,-17,-14,-15,-55,-47,-69,-106,-64,-87,-45,-40,-31,-28,-26,-21,-16,-54,-106,-70,-66,-68,]),'PROGRAM':([0,],[2,]),'CHAR':([8,11,27,69,],[15,15,15,15,]),'ISEQUALTO':([72,73,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,148,153,155,156,157,158,],[-106,-101,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,136,-98,-46,-42,-32,-30,-29,-27,-64,-45,-31,-28,-26,-21,]),'CTECHAR':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[90,90,90,90,90,-25,90,-43,90,-44,-39,90,-38,-34,90,-33,90,-18,-52,-50,90,-51,-48,-49,-53,90,90,90,90,]),'AND':([72,73,74,75,76,78,79,80,81,82,83,86,87,88,89,90,91,92,93,96,107,108,118,120,122,123,131,132,148,153,155,156,157,158,160,],[-106,-101,116,-96,-100,-104,-106,-103,-95,-105,-106,-24,-99,-97,-22,-102,-98,-23,-106,-98,-46,-42,-32,-30,-29,-27,-55,-47,-64,-45,-31,-28,-26,-21,-54,]),'ELSE':([64,174,],[-6,181,]),'TRUE':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[78,78,78,78,78,-25,78,-43,78,-44,-39,78,-38,-34,78,-33,78,-18,-52,-50,78,-51,-48,-49,-53,78,78,78,78,]),'FUNCTION':([5,6,7,32,56,66,152,171,],[-106,-74,11,-106,-73,11,11,-81,]),'RBRACKET':([6,25,32,34,36,37,39,41,43,47,48,49,50,56,60,64,65,143,150,161,169,173,174,177,178,179,180,182,189,191,],[-74,-106,-106,-56,-58,-63,-62,-72,-59,64,-60,-106,-57,-73,-61,-6,-71,-19,171,-12,-83,-106,-106,-82,-9,-10,-8,-4,-7,-20,]),'CTESTRING':([57,58,59,61,63,77,84,109,110,111,112,113,116,117,119,121,126,127,133,134,135,136,137,138,139,146,149,165,183,],[80,80,80,80,80,-25,80,-43,80,-44,-39,80,-38,-34,80,-33,80,-18,-52,-50,80,-51,-48,-49,-53,80,80,80,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([25,49,67,],[34,34,34,]),'ctefloat':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'retorno':([104,],[150,]),'masterminos':([72,],[108,]),'programa':([0,],[3,]),'args':([27,69,],[52,105,]),'masid':([23,],[31,]),'addQPAO':([74,],[113,]),'cteint':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'masbloque':([174,],[182,]),'empty':([5,7,23,25,27,32,49,52,63,66,67,69,72,74,79,83,85,91,93,101,105,141,142,147,152,166,173,174,175,181,187,],[6,10,29,41,54,6,41,68,100,10,41,54,107,115,118,122,128,128,131,145,68,162,162,167,10,145,178,180,184,178,184,]),'expresion':([57,58,59,61,63,84,113,126,146,149,165,183,],[85,95,97,98,101,125,154,85,166,170,175,187,]),'leftparen':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'addQTD':([72,],[110,]),'listaid':([14,30,],[24,55,]),'masexp':([79,],[120,]),'addQPP':([85,91,],[126,126,]),'masexpresion':([74,],[114,]),'masargs':([52,105,],[70,151,]),'idfunc':([25,49,57,58,59,61,63,67,84,110,113,119,126,135,146,149,165,183,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'funcs':([7,66,152,],[9,103,172,]),'gotoF':([141,142,],[163,164,]),'goto':([173,181,],[179,186,]),'rightparen':([125,],[158,]),'addQPComp':([93,],[135,]),'exp':([57,58,59,61,63,84,113,119,126,135,146,149,165,183,],[93,93,93,93,93,93,93,155,93,93,93,93,93,93,]),'condicion':([25,49,67,],[50,50,50,]),'addQPPM':([79,],[119,]),'vars':([5,25,32,49,67,],[7,48,56,48,48,]),'factor':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'bloquefunc':([51,106,],[66,152,]),'expcomp':([57,58,59,61,63,84,113,126,135,146,149,165,183,],[74,74,74,74,74,74,74,74,160,74,74,74,74,]),'while':([25,49,67,],[35,35,35,]),'main':([9,],[19,]),'ciclo':([25,49,67,],[36,36,36,]),'escritura':([25,49,67,],[43,43,43,]),'listafuncargs':([101,166,],[147,176,]),'termino':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[79,79,79,79,79,79,153,79,79,79,79,79,79,79,79,]),'tipo':([8,11,27,69,],[14,22,53,53,]),'prog':([0,],[1,]),'checarparams':([147,],[168,]),'print':([25,49,67,],[33,33,33,]),'masprint':([85,91,],[129,130,]),'funcargs':([63,],[102,]),'llamafunc':([25,49,57,58,59,61,63,67,84,110,113,119,126,135,146,149,165,183,],[42,42,86,86,86,86,86,42,86,86,86,86,86,86,86,86,86,86,]),'ctebool':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'arr':([83,],[123,]),'funcaux':([11,],[21,]),'varcte':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ctechar':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'masestatuto':([25,49,67,],[47,65,104,]),'expcompcontinuo':([93,],[132,]),'ctestring':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[91,96,96,96,96,96,96,96,96,91,96,96,96,96,96,]),'estatuto':([25,49,67,],[49,49,49,]),'varid':([57,58,59,61,63,84,110,113,119,126,135,146,149,165,183,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'comaexpresion':([175,187,],[185,190,]),'bloque':([19,163,164,186,],[26,173,174,189,]),'listaprint':([57,126,],[94,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',185),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',191),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',206),
  ('condicion -> IF LPAREN expresion RPAREN gotoF bloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',214),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',218),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',225),
  ('masbloque -> ELSE goto bloque','masbloque',3,'p_masbloque','OpenRoonie.py',228),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',229),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',231),
  ('ciclo -> while LPAREN expresion RPAREN gotoF bloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',238),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',243),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',247),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',250),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',254),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',255),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',259),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',260),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',263),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',268),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',269),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',275),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',276),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',277),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',278),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',281),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',285),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',289),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',293),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',294),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',297),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',300),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',301),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',305),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',306),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',311),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',312),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',315),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',318),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',319),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',324),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',325),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',329),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',332),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',333),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',338),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',339),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',343),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',346),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',347),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',348),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',349),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',350),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',351),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',356),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',357),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',361),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',362),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',363),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',364),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',365),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',366),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',367),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',368),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',371),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',377),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',391),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',392),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',395),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',396),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',399),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',407),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',408),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',411),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',412),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',415),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',420),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',421),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',424),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',425),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',426),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',429),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',432),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',433),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',451),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',457),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',458),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',465),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',466),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',469),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',470),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',471),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',472),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',473),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',474),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',479),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',480),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',481),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',482),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',483),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',486),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',490),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',494),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',498),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',502),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',503),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',511),
]
