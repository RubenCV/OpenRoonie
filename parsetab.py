
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9054FB81BFB880C5ABF9444FC7B0F3F9'
    
_lr_action_items = {'DIVIDE':([59,60,61,62,63,65,66,67,71,72,76,96,97,126,127,],[-17,91,-68,-67,-18,-66,-72,-69,-71,-70,-69,-65,-74,-73,-16,]),'PROGRAM':([0,],[2,]),'RPAREN':([26,45,46,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,88,89,93,94,96,97,98,99,100,105,106,111,112,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,],[-75,-57,57,-75,-75,-17,-75,-68,-67,-18,-66,-72,-69,-75,-75,107,-71,-70,110,-69,114,-75,-59,-56,-75,-40,-33,-32,-29,-65,-74,127,-25,-28,-22,-19,-13,-11,-10,-58,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-26,-27,-20,-21,-12,]),'LESSTHAN':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[85,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'MAIN':([5,6,7,9,10,28,47,55,82,117,],[-75,-75,-49,-54,18,-75,-48,-5,-75,-53,]),'FALSE':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'VAR':([5,7,25,28,32,35,36,37,38,39,41,47,55,109,132,134,136,137,138,141,147,],[8,-49,8,8,-41,-45,-44,8,-42,-49,-43,-48,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'INT':([8,11,26,81,],[15,15,15,15,]),'$end':([1,24,55,],[0,-1,-5,]),'CHAR':([8,11,26,81,],[16,16,16,16,]),'OR':([58,59,60,61,62,63,65,66,67,68,69,71,72,76,88,89,93,94,96,97,105,106,118,119,120,121,122,123,124,125,126,127,130,131,],[-75,-17,-75,-68,-67,-18,-66,-72,-69,102,-75,-71,-70,-69,-40,-33,-32,-29,-65,-74,-22,-19,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-20,-21,]),'LESSTHANEQUAL':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[90,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'RSQBRACKET':([50,58,59,60,61,62,63,65,66,67,68,69,71,72,88,89,93,94,95,96,97,99,100,105,106,118,119,120,121,122,123,124,125,126,127,128,129,130,131,140,142,143,146,148,],[73,-75,-17,-75,-68,-67,-18,-66,-72,-69,-75,-75,-71,-70,-40,-33,-32,-29,126,-65,-74,-25,-28,-22,-19,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-26,-27,-20,-21,-75,-24,145,-75,-23,]),'CTECHAR':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'SEMICOLON':([4,22,23,29,30,48,58,59,60,61,62,63,65,66,67,68,69,71,72,74,88,89,93,94,96,97,99,100,105,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,145,],[5,28,-75,-50,-52,-51,-75,-17,-75,-68,-67,-18,-66,-72,-69,-75,-75,-71,-70,109,-40,-33,-32,-29,-65,-74,-25,-28,-22,-19,136,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-26,-27,-20,-21,147,]),'ISEQUALTO':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[86,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'CTEFLOAT':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'STRING':([8,11,26,81,],[13,13,13,13,]),'LBRACKET':([18,19,57,107,110,139,],[-3,25,25,25,25,25,]),'ID':([2,3,7,12,13,14,15,16,17,21,25,28,31,32,35,36,37,38,39,41,44,47,49,51,53,54,55,64,83,84,85,86,87,90,91,92,101,102,103,104,109,113,132,133,134,136,137,138,141,144,147,],[-2,4,-49,-63,-64,-61,-60,-62,23,27,34,-75,23,-41,-45,-44,34,-42,-49,-43,56,-48,63,63,63,63,-5,63,63,63,63,63,63,63,63,63,63,63,63,63,-14,63,-75,63,-8,-9,-7,-4,-6,63,-15,]),'COMMA':([23,56,58,59,60,61,62,63,65,66,67,68,69,71,72,76,78,88,89,93,94,96,97,99,100,105,106,118,119,120,121,122,123,124,125,126,127,128,129,130,131,140,146,],[31,81,-75,-17,-75,-68,-67,-18,-66,-72,-69,-75,-75,-71,-70,113,113,-40,-33,-32,-29,-65,-74,-25,-28,-22,-19,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-26,-27,-20,-21,144,144,]),'LPAREN':([20,27,33,40,42,49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[26,-55,49,53,54,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FUNCTION':([5,6,7,28,47,55,82,],[-75,11,-49,-75,-48,-5,11,]),'MORETHAN':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[83,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'NOTEQUAL':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[87,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'TIMES':([59,60,61,62,63,65,66,67,71,72,76,96,97,126,127,],[-17,92,-68,-67,-18,-66,-72,-69,-71,-70,-69,-65,-74,-73,-16,]),'MINUS':([59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'IF':([7,25,28,32,35,36,37,38,39,41,47,55,109,132,134,136,137,138,141,147,],[-49,33,-75,-41,-45,-44,33,-42,-49,-43,-48,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'LSQBRACKET':([34,63,108,],[50,95,133,]),'CTEINT':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'AND':([58,59,60,61,62,63,65,66,67,68,69,71,72,76,88,89,93,94,96,97,105,106,118,119,120,121,122,123,124,125,126,127,130,131,],[-75,-17,-75,-68,-67,-18,-66,-72,-69,101,-75,-71,-70,-69,-40,-33,-32,-29,-65,-74,-22,-19,-34,-38,-35,-37,-36,-39,-31,-30,-73,-16,-20,-21,]),'CTESTRING':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[67,67,67,76,67,67,67,67,67,67,67,67,67,67,67,67,67,76,67,67,]),'EQUALS':([34,73,],[51,108,]),'BOOL':([8,11,26,81,],[12,12,12,12,]),'PLUS':([59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'FLOAT':([8,11,26,81,],[14,14,14,14,]),'WHILE':([7,25,28,32,35,36,37,38,39,41,47,55,109,132,134,136,137,138,141,147,],[-49,40,-75,-41,-45,-44,40,-42,-49,-43,-48,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'PRINT':([7,25,28,32,35,36,37,38,39,41,47,55,109,132,134,136,137,138,141,147,],[-49,42,-75,-41,-45,-44,42,-42,-49,-43,-48,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'RBRACKET':([7,25,28,32,35,36,37,38,39,41,43,47,52,55,109,132,134,136,137,138,141,147,],[-49,-75,-75,-41,-45,-44,-75,-42,-47,-43,55,-48,-46,-5,-14,-75,-8,-9,-7,-4,-6,-15,]),'TRUE':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'MORETHANEQUAL':([58,59,60,61,62,63,65,66,67,69,71,72,76,93,94,96,97,105,106,124,125,126,127,130,131,],[84,-17,-75,-68,-67,-18,-66,-72,-69,-75,-71,-70,-69,-32,-29,-65,-74,-22,-19,-31,-30,-73,-16,-20,-21,]),'ELSE':([55,132,],[-5,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[58,58,58,58,58,118,119,120,121,122,123,124,125,58,58,130,131,58,58,58,]),'main':([10,],[19,]),'args':([26,81,],[46,116,]),'masexpresion':([68,],[99,]),'listaprint':([54,113,],[77,135,]),'masexp':([69,],[106,]),'funcaux':([11,],[20,]),'asignacion':([25,37,],[32,32,]),'varcte':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'factor':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'masbloque':([132,],[138,]),'bloque':([19,57,107,110,139,],[24,82,132,134,141,]),'masargs':([56,],[80,]),'funcs':([6,82,],[10,117,]),'condicion':([25,37,],[38,38,]),'expcomp':([49,51,53,54,64,101,102,113,133,144,],[68,68,68,68,68,128,129,68,68,68,]),'comaexpresion':([140,146,],[143,148,]),'vars':([5,25,28,37,],[6,35,47,35,]),'expcompcontinuo':([58,],[89,]),'escritura':([25,37,],[36,36,]),'prog':([0,],[3,]),'estatuto':([25,37,],[37,37,]),'masid':([23,],[29,]),'masprint':([76,78,],[112,115,]),'tipo':([8,11,26,81,],[17,21,44,44,]),'programa':([0,],[1,]),'empty':([5,6,23,25,26,28,37,56,58,60,63,68,69,76,78,81,82,132,140,146,],[7,9,30,39,45,7,39,79,88,93,97,100,105,111,111,45,9,137,142,142,]),'listaid':([17,31,],[22,48,]),'ciclo':([25,37,],[41,41,]),'termino':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expresion':([49,51,53,54,64,113,133,144,],[70,74,75,78,98,78,140,146,]),'arr':([63,],[96,]),'masestatuto':([25,37,],[43,52,]),'ctebool':([49,51,53,54,64,83,84,85,86,87,90,91,92,101,102,103,104,113,133,144,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'masterminos':([60,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',109),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',112),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',118),
  ('condicion -> IF LPAREN expresion RPAREN bloque masbloque','condicion',6,'p_condicion','OpenRoonie.py',123),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',126),
  ('masbloque -> ELSE bloque','masbloque',2,'p_masbloque','OpenRoonie.py',129),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',130),
  ('ciclo -> WHILE LPAREN expresion RPAREN bloque','ciclo',5,'p_ciclo','OpenRoonie.py',133),
  ('escritura -> PRINT LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',136),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',139),
  ('listaprint -> CTESTRING masprint','listaprint',2,'p_listaprint','OpenRoonie.py',140),
  ('masprint -> COMMA listaprint','masprint',2,'p_masprint','OpenRoonie.py',143),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',144),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',147),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',148),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','OpenRoonie.py',151),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',152),
  ('factor -> ID','factor',1,'p_factor','OpenRoonie.py',153),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',156),
  ('masexp -> PLUS exp','masexp',2,'p_masexp','OpenRoonie.py',159),
  ('masexp -> MINUS exp','masexp',2,'p_masexp','OpenRoonie.py',160),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',161),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',164),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',165),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',168),
  ('masexpresion -> AND expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',171),
  ('masexpresion -> OR expcomp','masexpresion',2,'p_masexpresion','OpenRoonie.py',172),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',173),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',176),
  ('masterminos -> TIMES exp','masterminos',2,'p_masterminos','OpenRoonie.py',179),
  ('masterminos -> DIVIDE exp','masterminos',2,'p_masterminos','OpenRoonie.py',180),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',181),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',184),
  ('expcompcontinuo -> MORETHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',187),
  ('expcompcontinuo -> LESSTHAN exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',188),
  ('expcompcontinuo -> NOTEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',189),
  ('expcompcontinuo -> ISEQUALTO exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',190),
  ('expcompcontinuo -> MORETHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',191),
  ('expcompcontinuo -> LESSTHANEQUAL exp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',192),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',193),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',196),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',197),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',198),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',199),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',200),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',203),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',204),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',207),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',208),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',211),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',215),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',216),
  ('funcs -> FUNCTION funcaux LPAREN args RPAREN bloque funcs','funcs',7,'p_funcs','OpenRoonie.py',221),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',222),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',225),
  ('args -> tipo ID masargs','args',3,'p_args','OpenRoonie.py',230),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',231),
  ('masargs -> COMMA args','masargs',2,'p_masargs','OpenRoonie.py',235),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',236),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',239),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',240),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',241),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',242),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',243),
  ('varcte -> ID arr','varcte',2,'p_varcte','OpenRoonie.py',247),
  ('varcte -> CTEINT','varcte',1,'p_varcte','OpenRoonie.py',248),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','OpenRoonie.py',249),
  ('varcte -> CTECHAR','varcte',1,'p_varcte','OpenRoonie.py',250),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','OpenRoonie.py',251),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',252),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',255),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',256),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',259),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',260),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',266),
]
