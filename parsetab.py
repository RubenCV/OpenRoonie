
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '962FEFD94E77E9C2CB44FA6A3770049E'
    
_lr_action_items = {'EQUALS':([43,105,],[68,149,]),'FUNCTION':([5,6,8,32,58,64,111,159,],[-110,9,-78,-110,-77,9,9,-85,]),'ISEQUALTO':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,144,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'COMMENT':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,39,-110,-60,-65,-62,-59,-78,-66,39,-63,-58,-61,-77,39,-64,-8,-110,-21,-110,-7,39,-67,39,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,39,-22,-9,]),'AND':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,98,99,101,102,108,116,117,121,122,125,127,128,138,146,162,163,164,165,166,171,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,132,-99,-109,-105,-110,-102,-68,-44,-48,-32,-34,-29,-31,-49,-57,-28,-23,-47,-33,-30,-56,]),'MORETHANEQUAL':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,140,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'CTEINT':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[82,82,82,82,82,82,-27,82,-45,82,-46,-35,-36,82,82,-40,-41,82,-52,-54,-50,-51,82,-53,-55,82,-20,82,82,]),'PROGRAM':([0,],[1,]),'ID':([1,2,8,12,13,14,15,16,17,18,20,28,30,32,34,38,39,40,46,49,50,52,54,55,56,58,63,65,66,67,68,70,71,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,147,148,151,152,154,172,173,174,175,176,178,181,182,183,185,186,187,190,191,192,193,196,197,199,],[-2,4,-78,23,-98,-93,-97,-95,-96,-94,26,43,23,-110,62,-60,-65,-62,-59,-78,-66,43,-63,-58,-61,-77,43,93,93,-64,93,106,-8,93,93,93,-27,93,-45,93,-46,-35,-36,93,93,-40,-41,93,-52,-54,-50,-51,93,-53,-55,-110,-21,-110,93,-20,-7,43,93,-67,43,-14,-6,-5,-110,-110,-11,-12,93,-10,-110,-4,43,-22,-9,]),'PLUS':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,108,116,117,121,127,128,162,163,164,166,],[-101,-106,-25,-104,-103,-26,-110,-107,123,-100,-102,-110,-24,-108,-99,-109,-105,-102,-68,-44,-48,-29,-31,-28,-23,-47,-30,]),'FLOAT':([7,9,25,61,],[18,18,18,18,]),'LPAREN':([19,26,37,41,43,44,45,48,51,53,65,66,68,72,74,85,90,93,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[25,-88,65,66,-69,70,-15,-13,72,74,90,90,90,90,90,90,-27,-69,90,-45,90,-46,-35,-36,90,90,-40,-41,90,-52,-54,-50,-51,90,-53,-55,90,-20,90,90,]),'LSQBRACKET':([43,93,149,],[69,129,174,]),'CPPCOMMENT':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,50,-110,-60,-65,-62,-59,-78,-66,50,-63,-58,-61,-77,50,-64,-8,-110,-21,-110,-7,50,-67,50,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,50,-22,-9,]),'COMMA':([23,25,33,35,61,62,76,79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,97,98,99,101,102,108,110,116,117,121,122,125,127,128,130,133,138,146,162,163,164,165,166,167,168,171,184,195,],[30,-110,61,-90,-110,-89,61,-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-110,136,-99,-109,-105,-110,154,154,-68,-44,-48,-32,-34,-29,-31,-39,-43,-49,-57,-28,-23,-47,-33,-30,-42,136,-56,190,190,]),'NOTEQUAL':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,139,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'VOID':([7,9,25,61,],[13,13,13,13,]),'MORETHAN':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,141,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'$end':([3,27,71,],[0,-1,-8,]),'TRUE':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[95,95,95,95,95,95,-27,95,-45,95,-46,-35,-36,95,95,-40,-41,95,-52,-54,-50,-51,95,-53,-55,95,-20,95,95,]),'TIMES':([79,80,81,82,83,84,87,88,91,92,93,94,95,98,99,101,108,116,127,128,162,163,166,],[-101,-106,-25,-104,-103,-26,118,-107,-100,-102,-110,-24,-108,-99,-109,-105,-102,-68,-29,-31,-28,-23,-30,]),'CTESTRING':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[88,88,88,88,88,88,-27,88,-45,88,-46,-35,-36,88,88,-40,-41,88,-52,-54,-50,-51,88,-53,-55,88,-20,88,88,]),'RPAREN':([25,33,35,59,60,61,62,65,76,79,80,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,112,115,116,117,121,122,125,127,128,130,133,135,137,138,146,153,155,157,162,163,164,165,166,167,168,169,170,171,177,180,],[36,-110,-90,-92,75,-110,-89,-110,-110,-101,-106,-25,-104,-103,-26,116,-110,-107,-110,-100,-102,-110,-24,-108,-110,-110,-99,-109,-71,-105,-110,147,150,151,-102,156,-110,-91,162,-68,-44,-48,-32,-34,-29,-31,-39,-43,-73,-110,-49,-57,-19,-17,-16,-28,-23,-47,-33,-30,-42,-110,-70,-74,-56,-18,-72,]),'INT':([7,9,25,61,],[14,14,14,14,]),'MINUS':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,108,116,117,121,127,128,162,163,164,166,],[-101,-106,-25,-104,-103,-26,-110,-107,124,-100,-102,-110,-24,-108,-99,-109,-105,-102,-68,-44,-48,-29,-31,-28,-23,-47,-30,]),'ELSE':([8,32,38,39,40,46,50,54,55,56,58,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,-110,-60,-65,-62,-59,-66,-63,-58,-61,-77,-64,-8,-110,-21,-110,-7,-110,-67,-110,-14,-6,-5,-110,192,-11,-12,-10,-110,-4,-110,-22,-9,]),'WHILE':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,48,-110,-60,-65,-62,-59,-78,-66,48,-63,-58,-61,-77,48,-64,-8,-110,-21,-110,-7,48,-67,48,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,48,-22,-9,]),'RETURN':([8,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,73,77,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,-110,-60,-65,-62,-59,-76,-66,-110,-63,-58,-61,-77,-110,-64,-8,-75,114,-110,-21,-110,-7,-110,-67,-110,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,-110,-22,-9,]),'BOOL':([7,9,25,61,],[17,17,17,17,]),'FALSE':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[99,99,99,99,99,99,-27,99,-45,99,-46,-35,-36,99,99,-40,-41,99,-52,-54,-50,-51,99,-53,-55,99,-20,99,99,]),'RSQBRACKET':([69,79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,98,99,101,102,116,117,121,122,125,127,128,129,130,133,138,146,162,163,164,165,166,167,171,184,188,189,195,198,],[105,-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-110,-99,-109,-105,-110,-68,-44,-48,-32,-34,-29,-31,166,-39,-43,-49,-57,-28,-23,-47,-33,-30,-42,-56,-110,194,-38,-110,-37,]),'VAR':([5,8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[7,-78,7,7,-60,-65,-62,-59,-78,-66,7,-63,-58,-61,-77,7,-64,-8,-110,-21,-110,-7,7,-67,7,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,7,-22,-9,]),'LESSTHAN':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,142,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'CHAR':([7,9,25,61,],[16,16,16,16,]),'RBRACKET':([8,28,32,38,39,40,46,47,49,50,52,54,55,56,58,67,71,73,113,147,148,151,160,172,173,175,176,178,179,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,-110,-110,-60,-65,-62,-59,71,-76,-66,-110,-63,-58,-61,-77,-64,-8,-75,159,-110,-21,-110,-87,-7,-110,-67,-110,-14,-86,-6,-5,-110,-110,-11,-12,-10,-110,-4,-110,-22,-9,]),'PRINT':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,45,-110,-60,-65,-62,-59,-78,-66,45,-63,-58,-61,-77,45,-64,-8,-110,-21,-110,-7,45,-67,45,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,45,-22,-9,]),'LESSTHANEQUAL':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,98,99,101,102,108,116,117,121,122,125,127,128,162,163,164,165,166,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-99,-109,-105,145,-102,-68,-44,-48,-32,-34,-29,-31,-28,-23,-47,-33,-30,]),'CTECHAR':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[80,80,80,80,80,80,-27,80,-45,80,-46,-35,-36,80,80,-40,-41,80,-52,-54,-50,-51,80,-53,-55,80,-20,80,80,]),'IF':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,51,-110,-60,-65,-62,-59,-78,-66,51,-63,-58,-61,-77,51,-64,-8,-110,-21,-110,-7,51,-67,51,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,51,-22,-9,]),'DIVIDE':([79,80,81,82,83,84,87,88,91,92,93,94,95,98,99,101,108,116,127,128,162,163,166,],[-101,-106,-25,-104,-103,-26,120,-107,-100,-102,-110,-24,-108,-99,-109,-105,-102,-68,-29,-31,-28,-23,-30,]),'OR':([79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,98,99,101,102,108,116,117,121,122,125,127,128,138,146,162,163,164,165,166,171,],[-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,134,-99,-109,-105,-110,-102,-68,-44,-48,-32,-34,-29,-31,-49,-57,-28,-23,-47,-33,-30,-56,]),'READ':([8,28,32,38,39,40,46,49,50,52,54,55,56,58,63,67,71,147,148,151,172,173,175,176,178,181,182,183,185,186,187,191,192,193,196,197,199,],[-78,44,-110,-60,-65,-62,-59,-78,-66,44,-63,-58,-61,-77,44,-64,-8,-110,-21,-110,-7,44,-67,44,-14,-6,-5,-110,-110,-11,-12,-10,-110,-4,44,-22,-9,]),'STRING':([7,9,25,61,],[15,15,15,15,]),'LBRACKET':([21,22,36,75,147,151,172,173,176,186,192,196,],[28,-3,63,63,-110,-110,-7,28,28,-11,-110,28,]),'SEMICOLON':([4,23,24,29,31,42,57,79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,98,99,101,102,104,114,116,117,121,122,125,127,128,130,133,138,146,150,156,161,162,163,164,165,166,167,171,194,],[5,-110,32,-81,-79,67,-80,-101,-106,-25,-104,-103,-26,-110,-107,-110,-100,-102,-110,-24,-108,-110,-99,-109,-105,-110,148,160,-68,-44,-48,-32,-34,-29,-31,-39,-43,-49,-57,175,178,179,-28,-23,-47,-33,-30,-42,-56,197,]),'MAIN':([5,6,8,10,11,32,58,64,78,111,158,159,],[-110,-110,-78,22,-84,-110,-77,-110,-83,-110,-82,-85,]),'CTEFLOAT':([65,66,68,72,74,85,90,114,118,119,120,123,124,126,131,132,134,136,139,140,141,142,143,144,145,152,154,174,190,],[101,101,101,101,101,101,-27,101,-45,101,-46,-35,-36,101,101,-40,-41,101,-52,-54,-50,-51,101,-53,-55,101,-20,101,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([21,173,176,196,],[27,181,181,181,]),'addQPAO':([96,],[131,]),'llamafunc':([28,52,63,65,66,68,72,74,85,114,119,126,131,136,143,152,173,174,176,190,196,],[42,42,42,84,84,84,84,84,84,84,84,84,84,84,84,84,42,84,42,84,42,]),'addQTD':([87,],[119,]),'addQPP':([108,110,],[152,152,]),'varid':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'while':([28,52,63,173,176,196,],[41,41,41,41,41,41,]),'gotoF':([147,151,],[173,176,]),'expcompcontinuo':([102,],[138,]),'masexp':([89,],[122,]),'bloquefunc':([36,75,],[64,111,]),'comaexpresion':([184,195,],[188,198,]),'funcargs':([65,],[86,]),'programa':([0,],[3,]),'listafuncargs':([97,168,],[137,180,]),'masterminos':([87,],[117,]),'listaid':([12,30,],[24,57,]),'ctebool':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'ctestring':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[92,92,92,92,108,92,92,92,92,92,92,92,108,92,92,]),'funcaux':([9,],[19,]),'prog':([0,],[2,]),'tipo':([7,9,25,61,],[12,20,34,34,]),'vars':([5,28,32,52,63,173,176,196,],[6,54,58,54,54,54,54,54,]),'varcte':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'listaprint':([74,152,],[109,177,]),'expresion':([65,66,68,72,74,85,114,131,136,152,174,190,],[97,103,104,107,110,115,161,167,168,110,184,195,]),'cteint':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'funcs':([6,64,111,],[10,78,158,]),'empty':([5,6,23,25,28,32,33,52,61,63,64,65,76,87,89,93,96,97,102,108,110,111,137,147,151,168,173,176,183,184,185,192,195,196,],[8,11,29,35,49,8,59,49,35,49,11,100,59,121,125,128,133,135,146,153,153,11,170,172,172,135,8,8,186,189,191,186,189,8,]),'masbloque':([185,],[193,]),'rightparen':([115,],[163,]),'exp':([65,66,68,72,74,85,114,126,131,136,143,152,174,190,],[102,102,102,102,102,102,102,165,102,102,102,102,102,102,]),'arr':([93,],[127,]),'ctechar':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'ciclo':([28,52,63,173,176,196,],[38,38,38,38,38,38,]),'masid':([23,],[31,]),'goto':([183,192,],[187,196,]),'lectura':([28,52,63,173,176,196,],[40,40,40,40,40,40,]),'addQPPM':([89,],[126,]),'masargs':([33,76,],[60,112,]),'main':([10,],[21,]),'checarparams':([137,],[169,]),'leftparen':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'factor':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'condicion':([28,52,63,173,176,196,],[46,46,46,46,46,46,]),'masestatuto':([28,52,63,],[47,73,77,]),'args':([25,61,],[33,76,]),'ctefloat':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'masexpresion':([96,],[130,]),'retorno':([77,],[113,]),'idfunc':([28,52,63,65,66,68,72,74,85,114,119,126,131,136,143,152,173,174,176,190,196,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'escritura':([28,52,63,173,176,196,],[56,56,56,56,56,56,]),'termino':([65,66,68,72,74,85,114,119,126,131,136,143,152,174,190,],[89,89,89,89,89,89,89,164,89,89,89,89,89,89,89,]),'print':([28,52,63,173,176,196,],[53,53,53,53,53,53,]),'addQPComp':([102,],[143,]),'expcomp':([65,66,68,72,74,85,114,131,136,143,152,174,190,],[96,96,96,96,96,96,96,96,96,171,96,96,96,]),'asignacion':([28,52,63,173,176,196,],[55,55,55,55,55,55,]),'estatuto':([28,52,63,173,176,196,],[52,52,52,182,182,182,]),'masprint':([108,110,],[155,157,]),'estatutobloque':([173,176,196,],[183,185,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> prog ID SEMICOLON vars funcs main bloque','programa',7,'p_programa','OpenRoonie.py',191),
  ('prog -> PROGRAM','prog',1,'p_prog','OpenRoonie.py',197),
  ('main -> MAIN','main',1,'p_main','OpenRoonie.py',212),
  ('condicion -> IF LPAREN expresion RPAREN gotoF estatutobloque masbloque','condicion',7,'p_condicion','OpenRoonie.py',218),
  ('estatutobloque -> estatuto','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',222),
  ('estatutobloque -> bloque','estatutobloque',1,'p_estatutobloque','OpenRoonie.py',223),
  ('gotoF -> empty','gotoF',1,'p_gotoF','OpenRoonie.py',226),
  ('bloque -> LBRACKET masestatuto RBRACKET','bloque',3,'p_bloque','OpenRoonie.py',232),
  ('masbloque -> ELSE goto estatutobloque','masbloque',3,'p_masbloque','OpenRoonie.py',235),
  ('masbloque -> empty','masbloque',1,'p_masbloque','OpenRoonie.py',236),
  ('goto -> empty','goto',1,'p_goto','OpenRoonie.py',238),
  ('ciclo -> while LPAREN expresion RPAREN gotoF estatutobloque goto','ciclo',7,'p_ciclo','OpenRoonie.py',245),
  ('while -> WHILE','while',1,'p_while','OpenRoonie.py',250),
  ('escritura -> print LPAREN listaprint RPAREN SEMICOLON','escritura',5,'p_escritura','OpenRoonie.py',254),
  ('print -> PRINT','print',1,'p_print','OpenRoonie.py',257),
  ('listaprint -> expresion masprint','listaprint',2,'p_listaprint','OpenRoonie.py',261),
  ('listaprint -> ctestring masprint','listaprint',2,'p_listaprint','OpenRoonie.py',262),
  ('masprint -> addQPP listaprint','masprint',2,'p_masprint','OpenRoonie.py',266),
  ('masprint -> empty','masprint',1,'p_masprint','OpenRoonie.py',267),
  ('addQPP -> COMMA','addQPP',1,'p_addQPP','OpenRoonie.py',270),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','OpenRoonie.py',275),
  ('asignacion -> ID LSQBRACKET RSQBRACKET EQUALS LSQBRACKET expresion comaexpresion RSQBRACKET SEMICOLON','asignacion',9,'p_asignacion','OpenRoonie.py',276),
  ('factor -> leftparen expresion rightparen','factor',3,'p_factor','OpenRoonie.py',282),
  ('factor -> varcte','factor',1,'p_factor','OpenRoonie.py',283),
  ('factor -> varid','factor',1,'p_factor','OpenRoonie.py',284),
  ('factor -> llamafunc','factor',1,'p_factor','OpenRoonie.py',285),
  ('leftparen -> LPAREN','leftparen',1,'p_leftparen','OpenRoonie.py',288),
  ('rightparen -> RPAREN','rightparen',1,'p_rightparen','OpenRoonie.py',292),
  ('varid -> ID arr','varid',2,'p_varid','OpenRoonie.py',296),
  ('arr -> LSQBRACKET RSQBRACKET','arr',2,'p_arr','OpenRoonie.py',300),
  ('arr -> empty','arr',1,'p_arr','OpenRoonie.py',301),
  ('exp -> termino masexp','exp',2,'p_exp','OpenRoonie.py',304),
  ('masexp -> addQPPM exp','masexp',2,'p_masexp','OpenRoonie.py',307),
  ('masexp -> empty','masexp',1,'p_masexp','OpenRoonie.py',308),
  ('addQPPM -> PLUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',312),
  ('addQPPM -> MINUS','addQPPM',1,'p_addQPPM','OpenRoonie.py',313),
  ('comaexpresion -> COMMA expresion comaexpresion','comaexpresion',3,'p_comaexpresion','OpenRoonie.py',318),
  ('comaexpresion -> empty','comaexpresion',1,'p_comaexpresion','OpenRoonie.py',319),
  ('expresion -> expcomp masexpresion','expresion',2,'p_expresion','OpenRoonie.py',322),
  ('addQPAO -> AND','addQPAO',1,'p_addQPAO','OpenRoonie.py',325),
  ('addQPAO -> OR','addQPAO',1,'p_addQPAO','OpenRoonie.py',326),
  ('masexpresion -> addQPAO expresion','masexpresion',2,'p_masexpresion','OpenRoonie.py',331),
  ('masexpresion -> empty','masexpresion',1,'p_masexpresion','OpenRoonie.py',332),
  ('termino -> factor masterminos','termino',2,'p_termino','OpenRoonie.py',336),
  ('addQTD -> TIMES','addQTD',1,'p_addQTD','OpenRoonie.py',339),
  ('addQTD -> DIVIDE','addQTD',1,'p_addQTD','OpenRoonie.py',340),
  ('masterminos -> addQTD termino','masterminos',2,'p_masterminos','OpenRoonie.py',345),
  ('masterminos -> empty','masterminos',1,'p_masterminos','OpenRoonie.py',346),
  ('expcomp -> exp expcompcontinuo','expcomp',2,'p_expcomp','OpenRoonie.py',350),
  ('addQPComp -> MORETHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',353),
  ('addQPComp -> LESSTHAN','addQPComp',1,'p_addQPComp','OpenRoonie.py',354),
  ('addQPComp -> NOTEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',355),
  ('addQPComp -> ISEQUALTO','addQPComp',1,'p_addQPComp','OpenRoonie.py',356),
  ('addQPComp -> MORETHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',357),
  ('addQPComp -> LESSTHANEQUAL','addQPComp',1,'p_addQPComp','OpenRoonie.py',358),
  ('expcompcontinuo -> addQPComp expcomp','expcompcontinuo',2,'p_expcompcontinuo','OpenRoonie.py',363),
  ('expcompcontinuo -> empty','expcompcontinuo',1,'p_expcompcontinuo','OpenRoonie.py',364),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','OpenRoonie.py',368),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','OpenRoonie.py',369),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','OpenRoonie.py',370),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','OpenRoonie.py',371),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','OpenRoonie.py',372),
  ('estatuto -> vars','estatuto',1,'p_estatuto','OpenRoonie.py',373),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','OpenRoonie.py',374),
  ('estatuto -> COMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',375),
  ('estatuto -> CPPCOMMENT','estatuto',1,'p_estatuto','OpenRoonie.py',376),
  ('lectura -> READ LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','OpenRoonie.py',379),
  ('llamafunc -> idfunc LPAREN funcargs RPAREN','llamafunc',4,'p_llamafunc','OpenRoonie.py',384),
  ('idfunc -> ID','idfunc',1,'p_idfunc','OpenRoonie.py',397),
  ('funcargs -> expresion listafuncargs checarparams','funcargs',3,'p_funcargs','OpenRoonie.py',413),
  ('funcargs -> empty','funcargs',1,'p_funcargs','OpenRoonie.py',414),
  ('listafuncargs -> COMMA expresion listafuncargs','listafuncargs',3,'p_listafuncargs','OpenRoonie.py',418),
  ('listafuncargs -> empty','listafuncargs',1,'p_listafuncargs','OpenRoonie.py',419),
  ('checarparams -> empty','checarparams',1,'p_checarparams','OpenRoonie.py',422),
  ('masestatuto -> estatuto masestatuto','masestatuto',2,'p_masestatuto','OpenRoonie.py',432),
  ('masestatuto -> empty','masestatuto',1,'p_masestatuto','OpenRoonie.py',433),
  ('vars -> VAR tipo listaid SEMICOLON vars','vars',5,'p_vars','OpenRoonie.py',436),
  ('vars -> empty','vars',1,'p_vars','OpenRoonie.py',437),
  ('listaid -> ID masid','listaid',2,'p_listaid','OpenRoonie.py',440),
  ('masid -> COMMA listaid','masid',2,'p_masid','OpenRoonie.py',445),
  ('masid -> empty','masid',1,'p_masid','OpenRoonie.py',446),
  ('funcs -> FUNCTION funcaux LPAREN args masargs RPAREN bloquefunc funcs','funcs',8,'p_funcs','OpenRoonie.py',449),
  ('funcs -> FUNCTION funcaux LPAREN RPAREN bloquefunc funcs','funcs',6,'p_funcs','OpenRoonie.py',450),
  ('funcs -> empty','funcs',1,'p_funcs','OpenRoonie.py',451),
  ('bloquefunc -> LBRACKET masestatuto retorno RBRACKET','bloquefunc',4,'p_bloquefunc','OpenRoonie.py',454),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','OpenRoonie.py',457),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','OpenRoonie.py',458),
  ('funcaux -> tipo ID','funcaux',2,'p_funcaux','OpenRoonie.py',481),
  ('args -> tipo ID','args',2,'p_args','OpenRoonie.py',490),
  ('args -> empty','args',1,'p_args','OpenRoonie.py',491),
  ('masargs -> COMMA args masargs','masargs',3,'p_masargs','OpenRoonie.py',498),
  ('masargs -> empty','masargs',1,'p_masargs','OpenRoonie.py',499),
  ('tipo -> INT','tipo',1,'p_tipo','OpenRoonie.py',502),
  ('tipo -> FLOAT','tipo',1,'p_tipo','OpenRoonie.py',503),
  ('tipo -> CHAR','tipo',1,'p_tipo','OpenRoonie.py',504),
  ('tipo -> BOOL','tipo',1,'p_tipo','OpenRoonie.py',505),
  ('tipo -> STRING','tipo',1,'p_tipo','OpenRoonie.py',506),
  ('tipo -> VOID','tipo',1,'p_tipo','OpenRoonie.py',507),
  ('varcte -> cteint','varcte',1,'p_varcte','OpenRoonie.py',512),
  ('varcte -> ctefloat','varcte',1,'p_varcte','OpenRoonie.py',513),
  ('varcte -> ctechar','varcte',1,'p_varcte','OpenRoonie.py',514),
  ('varcte -> ctestring','varcte',1,'p_varcte','OpenRoonie.py',515),
  ('varcte -> ctebool','varcte',1,'p_varcte','OpenRoonie.py',516),
  ('cteint -> CTEINT','cteint',1,'p_cteint','OpenRoonie.py',519),
  ('ctefloat -> CTEFLOAT','ctefloat',1,'p_ctefloat','OpenRoonie.py',523),
  ('ctechar -> CTECHAR','ctechar',1,'p_ctechar','OpenRoonie.py',527),
  ('ctestring -> CTESTRING','ctestring',1,'p_ctestring','OpenRoonie.py',531),
  ('ctebool -> TRUE','ctebool',1,'p_ctebool','OpenRoonie.py',535),
  ('ctebool -> FALSE','ctebool',1,'p_ctebool','OpenRoonie.py',536),
  ('empty -> <empty>','empty',0,'p_empty','OpenRoonie.py',544),
]
